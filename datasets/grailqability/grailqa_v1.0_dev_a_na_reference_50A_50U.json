[
    {
        "qid": 3200477010000,
        "question": "what are the intellectual and behavioral characteristics of basset hounds and sapsali breeds?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kpkl6",
                "entity_name": "Gentle"
            }
        ],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "biology.breed_temperament",
                    "class": "biology.breed_temperament",
                    "friendly_name": "Breed temperament",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0hw_s",
                    "class": "biology.animal_breed",
                    "friendly_name": "basset hounds",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03606n",
                    "class": "biology.animal_breed",
                    "friendly_name": "Sapsali",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "biology.animal_breed.temperament",
                    "friendly_name": "Temperament"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "biology.animal_breed.temperament",
                    "friendly_name": "Temperament"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :biology.breed_temperament . \nVALUES ?x1 { :m.0hw_s } \nVALUES ?x2 { :m.03606n } \n?x1 :biology.animal_breed.temperament ?x0 . \n?x2 :biology.animal_breed.temperament ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "biology"
        ],
        "s_expression": "(AND biology.breed_temperament (AND (JOIN (R biology.animal_breed.temperament) m.0hw_s) (JOIN (R biology.animal_breed.temperament) m.03606n)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kpkl6",
                "entity_name": "Gentle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kqp3v",
                "entity_name": "Friendly"
            }
        ],
        "Orgs_expression": "(AND biology.breed_temperament (AND (JOIN (R biology.animal_breed.temperament) m.0hw_s) (JOIN (R biology.animal_breed.temperament) m.03606n)))",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2105126013000,
        "question": "having the genre of action-adventure game applies to how many video game compilations?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ],
        "function": "count",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.computer_game_compilation",
                    "class": "cvg.computer_game_compilation",
                    "friendly_name": "Video Game Compilation",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02ntfj",
                    "class": "cvg.cvg_genre",
                    "friendly_name": "Action-adventure game",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "cvg.computer_videogame.cvg_genre",
                    "friendly_name": "Genre"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_compilation . \nVALUES ?x1 { :m.02ntfj } \n?x0 :cvg.computer_videogame.cvg_genre ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "cvg"
        ],
        "level": "zero-shot",
        "s_expression": "(COUNT (AND cvg.computer_game_compilation (JOIN cvg.computer_videogame.cvg_genre m.02ntfj)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ],
        "Orgs_expression": "(COUNT (AND cvg.computer_game_compilation (JOIN cvg.computer_videogame.cvg_genre m.02ntfj)))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2102669005000,
        "question": "towns is a type of which fictional setting?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jk_y0x",
                "entity_name": "Pawnee"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gx8wn0",
                "entity_name": "Farmingham"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0djn0rc",
                "entity_name": "Emerald Town"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g9f7nc",
                "entity_name": "Hillsfar"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "fictional_universe.fictional_setting",
                    "class": "fictional_universe.fictional_setting",
                    "friendly_name": "Fictional Setting",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0dx1j",
                    "class": "fictional_universe.type_of_fictional_setting",
                    "friendly_name": "towns",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "fictional_universe.fictional_setting.setting_type",
                    "friendly_name": "Setting type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fictional_universe.fictional_setting . \nVALUES ?x1 { :m.0dx1j } \n?x0 :fictional_universe.fictional_setting.setting_type ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "fictional_universe"
        ],
        "level": "compositional",
        "s_expression": "(AND fictional_universe.fictional_setting (JOIN fictional_universe.fictional_setting.setting_type m.0dx1j))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jk_y0x",
                "entity_name": "Pawnee"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gx8wn0",
                "entity_name": "Farmingham"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0djn0rc",
                "entity_name": "Emerald Town"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g9f7nc",
                "entity_name": "Hillsfar"
            }
        ],
        "Orgs_expression": "(AND fictional_universe.fictional_setting (JOIN fictional_universe.fictional_setting.setting_type m.0dx1j))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 3205528014000,
        "question": "tloz and mario kart: double dash\u203c was designed by which video game designer?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dm10g",
                "entity_name": "Takashi Tezuka"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kr7k",
                "entity_name": "Shigeru Miyamoto"
            }
        ],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.cvg_designer",
                    "class": "cvg.cvg_designer",
                    "friendly_name": "Video Game Designer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01633s",
                    "class": "cvg.computer_videogame",
                    "friendly_name": "tloz",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.022jqr",
                    "class": "cvg.computer_videogame",
                    "friendly_name": "Mario Kart: Double Dash\u203c",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "cvg.computer_videogame.designers",
                    "friendly_name": "Designers"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "cvg.computer_videogame.designers",
                    "friendly_name": "Designers"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.cvg_designer . \nVALUES ?x1 { :m.01633s } \nVALUES ?x2 { :m.022jqr } \n?x1 :cvg.computer_videogame.designers ?x0 . \n?x2 :cvg.computer_videogame.designers ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "cvg"
        ],
        "level": "zero-shot",
        "s_expression": "(AND cvg.cvg_designer (AND (JOIN (R cvg.computer_videogame.designers) m.01633s) (JOIN (R cvg.computer_videogame.designers) m.022jqr)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dm10g",
                "entity_name": "Takashi Tezuka"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kr7k",
                "entity_name": "Shigeru Miyamoto"
            }
        ],
        "Orgs_expression": "(AND cvg.cvg_designer (AND (JOIN (R cvg.computer_videogame.designers) m.01633s) (JOIN (R cvg.computer_videogame.designers) m.022jqr)))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2100527015000,
        "question": "care2.com initiated which website?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05h0m30",
                "entity_name": "Care2 Click to Donate"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "internet.website",
                    "class": "internet.website",
                    "friendly_name": "Website",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0s9hfjl",
                    "class": "internet.website",
                    "friendly_name": "Care2.com",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "internet.website.parent_web_property",
                    "friendly_name": "Parent Website"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :internet.website . \nVALUES ?x1 { :m.0s9hfjl } \n?x0 :internet.website.parent_web_property ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "internet"
        ],
        "level": "compositional",
        "s_expression": "(AND internet.website (JOIN internet.website.parent_web_property m.0s9hfjl))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05h0m30",
                "entity_name": "Care2 Click to Donate"
            }
        ],
        "Orgs_expression": "(AND internet.website (JOIN internet.website.parent_web_property m.0s9hfjl))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2102557005000,
        "question": "which video game engine's successor engine is unreal engine?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04sh_kc",
                "entity_name": "Unreal Engine 2"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.computer_game_engine",
                    "class": "cvg.computer_game_engine",
                    "friendly_name": "Video Game Engine",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0b6h280",
                    "class": "cvg.computer_game_engine",
                    "friendly_name": "unreal engine",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "cvg.computer_game_engine.successor_engine",
                    "friendly_name": "Successor Engine"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_engine . \nVALUES ?x1 { :m.0b6h280 } \n?x0 :cvg.computer_game_engine.successor_engine ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "cvg"
        ],
        "level": "zero-shot",
        "s_expression": "(AND cvg.computer_game_engine (JOIN cvg.computer_game_engine.successor_engine m.0b6h280))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04sh_kc",
                "entity_name": "Unreal Engine 2"
            }
        ],
        "Orgs_expression": "(AND cvg.computer_game_engine (JOIN cvg.computer_game_engine.successor_engine m.0b6h280))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2101223004000,
        "question": "name the cricket player who has 31 odi stumps.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06n08z",
                "entity_name": "Kamran Akmal"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cricket.cricket_player",
                    "class": "cricket.cricket_player",
                    "friendly_name": "Cricket Player",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "31^^http://www.w3.org/2001/XMLSchema#integer",
                    "class": "type.int",
                    "friendly_name": "31",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "cricket.cricket_player.odi_stumps",
                    "friendly_name": "ODI Stumps"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cricket.cricket_player . \nVALUES ?x1 { \"31\"^^<http://www.w3.org/2001/XMLSchema#integer> } \n?x0 :cricket.cricket_player.odi_stumps ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "cricket"
        ],
        "s_expression": "(AND cricket.cricket_player (JOIN cricket.cricket_player.odi_stumps 31^^http://www.w3.org/2001/XMLSchema#integer))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06n08z",
                "entity_name": "Kamran Akmal"
            }
        ],
        "Orgs_expression": "(AND cricket.cricket_player (JOIN cricket.cricket_player.odi_stumps 31^^http://www.w3.org/2001/XMLSchema#integer))",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2101350004000,
        "question": "on jan. the 31st, 2009, which video game was initially released?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kyq2m5",
                "entity_name": "A Game of Tennis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0120w83m",
                "entity_name": "Blue Defense"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kyt14b",
                "entity_name": "Grid Chasers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kynvw1",
                "entity_name": "#9202a8c04000641f8000000023df91f9"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.computer_videogame",
                    "class": "cvg.computer_videogame",
                    "friendly_name": "Video game",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "2009-01-31^^http://www.w3.org/2001/XMLSchema#date",
                    "class": "type.datetime",
                    "friendly_name": "Jan. the 31st, 2009",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "cvg.computer_videogame.release_date",
                    "friendly_name": "Initial release date"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_videogame . \nVALUES ?x1 { \"2009-01-31-08:00\"^^<http://www.w3.org/2001/XMLSchema#date> } \n?x0 :cvg.computer_videogame.release_date ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "cvg"
        ],
        "level": "zero-shot",
        "s_expression": "(AND cvg.computer_videogame (JOIN cvg.computer_videogame.release_date 2009-01-31^^http://www.w3.org/2001/XMLSchema#date))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kyq2m5",
                "entity_name": "A Game of Tennis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0120w83m",
                "entity_name": "Blue Defense"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kyt14b",
                "entity_name": "Grid Chasers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kynvw1",
                "entity_name": "#9202a8c04000641f8000000023df91f9"
            }
        ],
        "Orgs_expression": "(AND cvg.computer_videogame (JOIN cvg.computer_videogame.release_date 2009-01-31^^http://www.w3.org/2001/XMLSchema#date))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 4302008009000,
        "question": "which tournament events did competitors from the germany win a silver medals?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gpjr",
                "entity_name": "1966 FIFA World Cup"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.076z83g",
                "entity_name": "2009 World Championships in Athletics \u2013 Women's heptathlon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.014nmh",
                "entity_name": "1986 FIFA World Cup"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07k5pr9",
                "entity_name": "2009 World Championships in Athletics \u2013 Women's hammer throw"
            }
        ],
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "sports.tournament_event_competition",
                    "class": "sports.tournament_event_competition",
                    "friendly_name": "Tournament event competition",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "sports.competitor_competition_relationship",
                    "class": "sports.competitor_competition_relationship",
                    "friendly_name": "Competitor/competition relationship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02lq5w",
                    "class": "sports.sport_medal",
                    "friendly_name": "silver medals",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0345h",
                    "class": "sports.sport_country",
                    "friendly_name": "Germany",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.competitor_competition_relationship.competition",
                    "friendly_name": "Competition"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "sports.competitor_competition_relationship.medal",
                    "friendly_name": "Medal"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "sports.competitor_competition_relationship.country",
                    "friendly_name": "Country"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.tournament_event_competition . \n?x1 :type.object.type :sports.competitor_competition_relationship . \nVALUES ?x2 { :m.02lq5w } \nVALUES ?x3 { :m.0345h } \n?x1 :sports.competitor_competition_relationship.competition ?x0 . \n?x1 :sports.competitor_competition_relationship.medal ?x2 . \n?x1 :sports.competitor_competition_relationship.country ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domains": [
            "sports"
        ],
        "s_expression": "(AND sports.tournament_event_competition (JOIN (R sports.competitor_competition_relationship.competition) (AND (JOIN sports.competitor_competition_relationship.medal m.02lq5w) (JOIN sports.competitor_competition_relationship.country m.0345h))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.014nmh",
                "entity_name": "1986 FIFA World Cup"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dt_z",
                "entity_name": "2002 FIFA World Cup"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gpjr",
                "entity_name": "1966 FIFA World Cup"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.014nl_",
                "entity_name": "1982 FIFA World Cup"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07k5pr9",
                "entity_name": "2009 World Championships in Athletics \u2013 Women's hammer throw"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07khsp0",
                "entity_name": "2009 World Championships in Athletics \u2013 Women's shot put"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.076z83g",
                "entity_name": "2009 World Championships in Athletics \u2013 Women's heptathlon"
            }
        ],
        "Orgs_expression": "(AND sports.tournament_event_competition (JOIN (R sports.competitor_competition_relationship.competition) (AND (JOIN sports.competitor_competition_relationship.medal m.02lq5w) (JOIN sports.competitor_competition_relationship.country m.0345h))))",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 3203099016000,
        "question": "what amusement rides are in the same park with main street cinema?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r0_rt",
                "entity_name": "Motor Boat Cruise"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gmbgw",
                "entity_name": "Golden Horseshoe Saloon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0byx2l",
                "entity_name": "King Arthur Carrousel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06n8lk",
                "entity_name": "Rocket Jets"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05k9c5",
                "entity_name": "Disneyland Monorail System"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0263qj9",
                "entity_name": "Sailing Ship Columbia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04s4p6",
                "entity_name": "Big Thunder Mountain Railroad"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pm2fm",
                "entity_name": "Pirate's Lair on Tom Sawyer Island"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.058hb9",
                "entity_name": "Adventure Thru Inner Space"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0550hw",
                "entity_name": "Disneyland Railroad"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.060rkf",
                "entity_name": "America Sings"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05jzmt",
                "entity_name": "Finding Nemo Submarine Voyage"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05g79s",
                "entity_name": "Mr. Toad's Wild Ride"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05np4w",
                "entity_name": "Skyway"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fz48l",
                "entity_name": "Flying Saucers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04tpgr",
                "entity_name": "Rocket Rods"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02693xq",
                "entity_name": "Dumbo the Flying Elephant"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p79p",
                "entity_name": "Haunted Mansion"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bwh682",
                "entity_name": "Indiana Jones Adventure"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h_j_hj",
                "entity_name": "Star Tours: The Adventures Continue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07s33k",
                "entity_name": "Submarine Voyage"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05086j",
                "entity_name": "Splash Mountain"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08959f",
                "entity_name": "Peter Pan's Flight"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z2qmd",
                "entity_name": "Space Mountain"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.028k8w",
                "entity_name": "It's a Small World"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04h1hd",
                "entity_name": "Matterhorn Bobsleds"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0by64_",
                "entity_name": "Holidayland"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bkxys",
                "entity_name": "Gadget's Go Coaster"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h7505",
                "entity_name": "Storybook Land Canal Boats"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cgzmk",
                "entity_name": "Mad Tea Party"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0431hs",
                "entity_name": "PeopleMover"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05k9d7",
                "entity_name": "Autopia"
            }
        ],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.ride",
                    "class": "amusement_parks.ride",
                    "friendly_name": "Amusement Ride",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.park",
                    "class": "amusement_parks.park",
                    "friendly_name": "Amusement Park",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0f3wfk",
                    "class": "amusement_parks.disney_ride",
                    "friendly_name": "Main Street Cinema",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.ride.park",
                    "friendly_name": "Park"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "amusement_parks.park.rides",
                    "friendly_name": "Rides"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.ride . \n?x1 :type.object.type :amusement_parks.park . \nVALUES ?x2 { :m.0f3wfk } \n?x0 :amusement_parks.ride.park ?x1 . \n?x1 :amusement_parks.park.rides ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "amusement_parks"
        ],
        "s_expression": "(AND amusement_parks.ride (JOIN amusement_parks.ride.park (JOIN amusement_parks.park.rides m.0f3wfk)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bwh682",
                "entity_name": "Indiana Jones Adventure"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01q8w9",
                "entity_name": "Pirates of the Caribbean"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cgzmk",
                "entity_name": "Mad Tea Party"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04s4p6",
                "entity_name": "Big Thunder Mountain Railroad"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0byx2l",
                "entity_name": "King Arthur Carrousel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p79p",
                "entity_name": "Haunted Mansion"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05k9d7",
                "entity_name": "Autopia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04h1hd",
                "entity_name": "Matterhorn Bobsleds"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02693xq",
                "entity_name": "Dumbo the Flying Elephant"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z2qmd",
                "entity_name": "Space Mountain"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05g79s",
                "entity_name": "Mr. Toad's Wild Ride"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07s33k",
                "entity_name": "Submarine Voyage"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05086j",
                "entity_name": "Splash Mountain"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.060lwt",
                "entity_name": "Jungle Cruise"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04tpgr",
                "entity_name": "Rocket Rods"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05np4w",
                "entity_name": "Skyway"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h7505",
                "entity_name": "Storybook Land Canal Boats"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0263qj9",
                "entity_name": "Sailing Ship Columbia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pm2fm",
                "entity_name": "Pirate's Lair on Tom Sawyer Island"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gmbgw",
                "entity_name": "Golden Horseshoe Saloon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bkxys",
                "entity_name": "Gadget's Go Coaster"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06n8lk",
                "entity_name": "Rocket Jets"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0by64_",
                "entity_name": "Holidayland"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0431hs",
                "entity_name": "PeopleMover"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05jzmt",
                "entity_name": "Finding Nemo Submarine Voyage"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.060rkf",
                "entity_name": "America Sings"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r0_rt",
                "entity_name": "Motor Boat Cruise"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05k9c5",
                "entity_name": "Disneyland Monorail System"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.058hb9",
                "entity_name": "Adventure Thru Inner Space"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fz48l",
                "entity_name": "Flying Saucers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h_j_hj",
                "entity_name": "Star Tours: The Adventures Continue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026wwxd",
                "entity_name": "Alice in Wonderland"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0550hw",
                "entity_name": "Disneyland Railroad"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08959f",
                "entity_name": "Peter Pan's Flight"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.028k8w",
                "entity_name": "It's a Small World"
            }
        ],
        "Orgs_expression": "(AND amusement_parks.ride (JOIN amusement_parks.ride.park (JOIN amusement_parks.park.rides m.0f3wfk)))",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 3201582003000,
        "question": "what kind of input method is used in a musical game published by activision publishing, inc.?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_xfg7",
                "entity_name": "Guitar Hero Guitar"
            }
        ],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.input_method",
                    "class": "cvg.input_method",
                    "friendly_name": "Input Method",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "cvg.musical_game",
                    "class": "cvg.musical_game",
                    "friendly_name": "Musical Game",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.09j_g",
                    "class": "cvg.cvg_publisher",
                    "friendly_name": "activision publishing, inc.",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "cvg.musical_game.input_method",
                    "friendly_name": "Input Method"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "cvg.cvg_publisher.games_published",
                    "friendly_name": "Games Published"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.input_method . \n?x1 :type.object.type :cvg.musical_game . \nVALUES ?x2 { :m.09j_g } \n?x1 :cvg.musical_game.input_method ?x0 . \n?x2 :cvg.cvg_publisher.games_published ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "cvg"
        ],
        "level": "zero-shot",
        "s_expression": "(AND cvg.input_method (JOIN (R cvg.musical_game.input_method) (JOIN (R cvg.cvg_publisher.games_published) m.09j_g)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_xfg7",
                "entity_name": "Guitar Hero Guitar"
            }
        ],
        "Orgs_expression": "(AND cvg.input_method (JOIN (R cvg.musical_game.input_method) (JOIN (R cvg.cvg_publisher.games_published) m.09j_g)))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 3205274011000,
        "question": "the same religion featured in palm sunday had which founding figure?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.060nc",
                "entity_name": "Paul the Apostle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045m1_",
                "entity_name": "Jesus Christ"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.071wp",
                "entity_name": "Saint Peter"
            }
        ],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "religion.founding_figure",
                    "class": "religion.founding_figure",
                    "friendly_name": "Founding Figure",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "religion.religion",
                    "class": "religion.religion",
                    "friendly_name": "Religion",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.060_r",
                    "class": "time.holiday",
                    "friendly_name": "Palm Sunday",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "religion.founding_figure.religion_founded",
                    "friendly_name": "Religion Founded"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "time.holiday.featured_in_religions",
                    "friendly_name": "Featured in religions"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.founding_figure . \n?x1 :type.object.type :religion.religion . \nVALUES ?x2 { :m.060_r } \n?x0 :religion.founding_figure.religion_founded ?x1 . \n?x2 :time.holiday.featured_in_religions ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "time",
            "religion"
        ],
        "s_expression": "(AND religion.founding_figure (JOIN religion.founding_figure.religion_founded (JOIN (R time.holiday.featured_in_religions) m.060_r)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.060nc",
                "entity_name": "Paul the Apostle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045m1_",
                "entity_name": "Jesus Christ"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.071wp",
                "entity_name": "Saint Peter"
            }
        ],
        "Orgs_expression": "(AND religion.founding_figure (JOIN religion.founding_figure.religion_founded (JOIN (R time.holiday.featured_in_religions) m.060_r)))",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2104902002000,
        "question": "what is the unit of energy that has the greatest energy in joules?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "g.122jqjdq",
                "entity_name": "Megaton of TNT"
            }
        ],
        "function": "argmax",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "measurement_unit.energy_unit",
                    "class": "measurement_unit.energy_unit",
                    "friendly_name": "Unit of Energy",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "measurement_unit.energy_unit.energy_in_joules",
                    "friendly_name": "Energy in Joules"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.energy_unit . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :measurement_unit.energy_unit . \n?y0 :measurement_unit.energy_unit.energy_in_joules ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :measurement_unit.energy_unit.energy_in_joules ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "measurement_unit"
        ],
        "level": "zero-shot",
        "s_expression": "(ARGMAX measurement_unit.energy_unit measurement_unit.energy_unit.energy_in_joules)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "g.122jqjdq",
                "entity_name": "Megaton of TNT"
            }
        ],
        "Orgs_expression": "(ARGMAX measurement_unit.energy_unit measurement_unit.energy_unit.energy_in_joules)",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2101573011000,
        "question": "name the drug which is named after the brand jolessa.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kd15n",
                "entity_name": "Ethinyl Estradiol/Levonorgestrel"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.drug",
                    "class": "medicine.drug",
                    "friendly_name": "Drug",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0j4tk8y",
                    "class": "medicine.drug_brand",
                    "friendly_name": "Jolessa",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "medicine.drug.canonical_brands",
                    "friendly_name": "Canonical brands"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.drug . \nVALUES ?x1 { :m.0j4tk8y } \n?x0 :medicine.drug.canonical_brands ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "medicine"
        ],
        "s_expression": "(AND medicine.drug (JOIN medicine.drug.canonical_brands m.0j4tk8y))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kd15n",
                "entity_name": "Ethinyl Estradiol/Levonorgestrel"
            }
        ],
        "Orgs_expression": "(AND medicine.drug (JOIN medicine.drug.canonical_brands m.0j4tk8y))",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2102800001000,
        "question": "which short story has a genre of romance novel?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.027pghk",
                "entity_name": "Only Human"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "book.short_story",
                    "class": "book.short_story",
                    "friendly_name": "Short Story",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01qxvh",
                    "class": "media_common.literary_genre",
                    "friendly_name": "Romance novel",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "book.short_story.genre",
                    "friendly_name": "Genre"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :book.short_story . \nVALUES ?x1 { :m.01qxvh } \n?x0 :book.short_story.genre ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "book"
        ],
        "s_expression": "(AND book.short_story (JOIN book.short_story.genre m.01qxvh))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.027pghk",
                "entity_name": "Only Human"
            }
        ],
        "Orgs_expression": "(AND book.short_story (JOIN book.short_story.genre m.01qxvh))",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2100052008000,
        "question": "what subject is discussed in the conference \"dd4d?\"",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04gg9_n",
                "entity_name": "Information visualization"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "conferences.conference_subject",
                    "class": "conferences.conference_subject",
                    "friendly_name": "Conference subject",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0dky8p3",
                    "class": "conferences.conference",
                    "friendly_name": "DD4D",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "conferences.conference_subject.specific_conferences_about_this",
                    "friendly_name": "Specific conferences about this"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :conferences.conference_subject . \nVALUES ?x1 { :m.0dky8p3 } \n?x0 :conferences.conference_subject.specific_conferences_about_this ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "conferences"
        ],
        "level": "zero-shot",
        "s_expression": "(AND conferences.conference_subject (JOIN conferences.conference_subject.specific_conferences_about_this m.0dky8p3))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04gg9_n",
                "entity_name": "Information visualization"
            }
        ],
        "Orgs_expression": "(AND conferences.conference_subject (JOIN conferences.conference_subject.specific_conferences_about_this m.0dky8p3))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2100563010000,
        "question": "the lcd screen resolution of 72000.0 is for what digital camera?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2mm6",
                "entity_name": "Epson PhotoPC L-300"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2kck",
                "entity_name": "Epson PhotoPC L-400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2rj6",
                "entity_name": "Epson PhotoPC L-410"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2r7f",
                "entity_name": "Kodak Z700"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2ntt",
                "entity_name": "Fujifilm Finepix 30i"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2nyv",
                "entity_name": "Kodak C340"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2jw6",
                "entity_name": "Pentax Optio 33LF"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "digicams.digital_camera",
                    "class": "digicams.digital_camera",
                    "friendly_name": "Digital Camera",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "72000.0^^http://www.w3.org/2001/XMLSchema#float",
                    "class": "type.float",
                    "friendly_name": "72000.0",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "digicams.digital_camera.lcd_pixels",
                    "friendly_name": "LCD screen resolution"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :digicams.digital_camera . \nVALUES ?x1 { \"72000.0\"^^<http://www.w3.org/2001/XMLSchema#float> } \n?x0 :digicams.digital_camera.lcd_pixels ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "digicams"
        ],
        "s_expression": "(AND digicams.digital_camera (JOIN digicams.digital_camera.lcd_pixels 72000.0^^http://www.w3.org/2001/XMLSchema#float))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2ntt",
                "entity_name": "Fujifilm Finepix 30i"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2r7f",
                "entity_name": "Kodak Z700"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2qnh",
                "entity_name": "Kodak DX4330"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2jw6",
                "entity_name": "Pentax Optio 33LF"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2rj6",
                "entity_name": "Epson PhotoPC L-410"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2nyv",
                "entity_name": "Kodak C340"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2mm6",
                "entity_name": "Epson PhotoPC L-300"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2kck",
                "entity_name": "Epson PhotoPC L-400"
            }
        ],
        "Orgs_expression": "(AND digicams.digital_camera (JOIN digicams.digital_camera.lcd_pixels 72000.0^^http://www.w3.org/2001/XMLSchema#float))",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2101175002000,
        "question": "name the measurement unit that has the plane angle units of angular mil.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.08f70z",
                "entity_name": "Non-SI units mentioned in the SI"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "measurement_unit.measurement_system",
                    "class": "measurement_unit.measurement_system",
                    "friendly_name": "Measurement System",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05rs31",
                    "class": "measurement_unit.angle_unit",
                    "friendly_name": "Angular mil",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "measurement_unit.measurement_system.angle_units",
                    "friendly_name": "Plane Angle Units"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x1 { :m.05rs31 } \n?x0 :measurement_unit.measurement_system.angle_units ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "measurement_unit"
        ],
        "level": "zero-shot",
        "s_expression": "(AND measurement_unit.measurement_system (JOIN measurement_unit.measurement_system.angle_units m.05rs31))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.08f70z",
                "entity_name": "Non-SI units mentioned in the SI"
            }
        ],
        "Orgs_expression": "(AND measurement_unit.measurement_system (JOIN measurement_unit.measurement_system.angle_units m.05rs31))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2102355005000,
        "question": "in the international system of units, what unit is used to measure molar volume?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02t6rcf",
                "entity_name": "Cubic metre per mole"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "measurement_unit.molar_volume_unit",
                    "class": "measurement_unit.molar_volume_unit",
                    "friendly_name": "Unit of Molar Volume",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0c13h",
                    "class": "measurement_unit.measurement_system",
                    "friendly_name": "International System of Units",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "measurement_unit.molar_volume_unit.measurement_system",
                    "friendly_name": "Measurement System"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.molar_volume_unit . \nVALUES ?x1 { :m.0c13h } \n?x0 :measurement_unit.molar_volume_unit.measurement_system ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "measurement_unit"
        ],
        "level": "zero-shot",
        "s_expression": "(AND measurement_unit.molar_volume_unit (JOIN measurement_unit.molar_volume_unit.measurement_system m.0c13h))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02t6rcf",
                "entity_name": "Cubic metre per mole"
            }
        ],
        "Orgs_expression": "(AND measurement_unit.molar_volume_unit (JOIN measurement_unit.molar_volume_unit.measurement_system m.0c13h))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 3200639012000,
        "question": "how many quotations can be found about the more abstract the truth you want to teach, the more thoroughly you must seduce the senses to accept it.?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "0"
            }
        ],
        "function": "count",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "media_common.quotation",
                    "class": "media_common.quotation",
                    "friendly_name": "Quotation",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "media_common.quotation_subject",
                    "class": "media_common.quotation_subject",
                    "friendly_name": "Quotation Subject",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.048gdl3",
                    "class": "media_common.quotation",
                    "friendly_name": "The more abstract the truth you want to teach, the more thoroughly you must seduce the senses to accept it.",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "media_common.quotation.subjects",
                    "friendly_name": "Subjects"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "media_common.quotation_subject.quotations_about_this_subject",
                    "friendly_name": "Quotations About This Subject"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :media_common.quotation . \n?x1 :type.object.type :media_common.quotation_subject . \nVALUES ?x2 { :m.048gdl3 } \n?x0 :media_common.quotation.subjects ?x1 . \n?x1 :media_common.quotation_subject.quotations_about_this_subject ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "media_common"
        ],
        "s_expression": "(COUNT (AND media_common.quotation (JOIN media_common.quotation.subjects (JOIN media_common.quotation_subject.quotations_about_this_subject m.048gdl3))))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "255"
            }
        ],
        "Orgs_expression": "(COUNT (AND media_common.quotation (JOIN media_common.quotation.subjects (JOIN media_common.quotation_subject.quotations_about_this_subject m.048gdl3))))",
        "Missing_KB_elements": [
            "F"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 2103063008000,
        "question": "how many ice hockey coaches are there who coached the team that is currently coached by sabres?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ],
        "function": "count",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "ice_hockey.hockey_coach",
                    "class": "ice_hockey.hockey_coach",
                    "friendly_name": "Ice hockey coach",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0j5m6",
                    "class": "ice_hockey.hockey_team",
                    "friendly_name": "sabres",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "ice_hockey.hockey_coach.current_team",
                    "friendly_name": "Current Team Coached"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :ice_hockey.hockey_coach . \nVALUES ?x1 { :m.0j5m6 } \n?x0 :ice_hockey.hockey_coach.current_team ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "ice_hockey"
        ],
        "s_expression": "(COUNT (AND ice_hockey.hockey_coach (JOIN ice_hockey.hockey_coach.current_team m.0j5m6)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ],
        "Orgs_expression": "(COUNT (AND ice_hockey.hockey_coach (JOIN ice_hockey.hockey_coach.current_team m.0j5m6)))",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 3205850003000,
        "question": "katamari fortissimo damacy had how many designers contribute to the game soundtrack?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ],
        "function": "count",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.cvg_designer",
                    "class": "cvg.cvg_designer",
                    "friendly_name": "Video Game Designer",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "cvg.computer_videogame",
                    "class": "cvg.computer_videogame",
                    "friendly_name": "Video game",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.08nnlm",
                    "class": "cvg.video_game_soundtrack",
                    "friendly_name": "Katamari Fortissimo Damacy",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "cvg.cvg_designer.games_designed",
                    "friendly_name": "Games Designed"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "cvg.computer_videogame.soundtracks",
                    "friendly_name": "Soundtracks"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.cvg_designer . \n?x1 :type.object.type :cvg.computer_videogame . \nVALUES ?x2 { :m.08nnlm } \n?x0 :cvg.cvg_designer.games_designed ?x1 . \n?x1 :cvg.computer_videogame.soundtracks ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "cvg"
        ],
        "level": "zero-shot",
        "s_expression": "(COUNT (AND cvg.cvg_designer (JOIN cvg.cvg_designer.games_designed (JOIN cvg.computer_videogame.soundtracks m.08nnlm))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ],
        "Orgs_expression": "(COUNT (AND cvg.cvg_designer (JOIN cvg.cvg_designer.games_designed (JOIN cvg.computer_videogame.soundtracks m.08nnlm))))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2103775003000,
        "question": "name the latest governing body of protected sites.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0grt36",
                "entity_name": "Queensland Parks and Wildlife Service"
            }
        ],
        "function": "argmax",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "protected_sites.governing_body_of_protected_sites",
                    "class": "protected_sites.governing_body_of_protected_sites",
                    "friendly_name": "Governing Body of Protected Sites",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "type.datetime",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "organization.organization.date_founded",
                    "friendly_name": "Date founded"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :protected_sites.governing_body_of_protected_sites . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :protected_sites.governing_body_of_protected_sites . \n?y0 :organization.organization.date_founded ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :organization.organization.date_founded ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "organization"
        ],
        "s_expression": "(ARGMAX protected_sites.governing_body_of_protected_sites organization.organization.date_founded)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0grt36",
                "entity_name": "Queensland Parks and Wildlife Service"
            }
        ],
        "Orgs_expression": "(ARGMAX protected_sites.governing_body_of_protected_sites organization.organization.date_founded)",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2103466011000,
        "question": "what's the number of types of grapes that are permissible in teran?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ],
        "function": "count",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "wine.grape_variety",
                    "class": "wine.grape_variety",
                    "friendly_name": "Grape Variety",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05h2xm",
                    "class": "food.wine_style",
                    "friendly_name": "Teran",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "food.wine_style.grape_varieties",
                    "friendly_name": "Grape varieties"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :wine.grape_variety . \nVALUES ?x1 { :m.05h2xm } \n?x1 :food.wine_style.grape_varieties ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "food"
        ],
        "s_expression": "(COUNT (AND wine.grape_variety (JOIN (R food.wine_style.grape_varieties) m.05h2xm)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ],
        "Orgs_expression": "(COUNT (AND wine.grape_variety (JOIN (R food.wine_style.grape_varieties) m.05h2xm)))",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 3200187005000,
        "question": "what was the previous model of the bell arh-70 arapaho?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04s94w",
                "entity_name": "Bell 206"
            }
        ],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "aviation.aircraft_line",
                    "class": "aviation.aircraft_line",
                    "friendly_name": "Aircraft Line",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "aviation.aircraft_model",
                    "class": "aviation.aircraft_model",
                    "friendly_name": "Aircraft model",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0bqwdc",
                    "class": "aviation.aircraft_model",
                    "friendly_name": "Bell ARH-70 Arapaho",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "aviation.aircraft_line.models_in_line",
                    "friendly_name": "Models In Line"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "aviation.aircraft_model.parent_aircraft_model",
                    "friendly_name": "Parent aircraft model"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :aviation.aircraft_line . \n?x1 :type.object.type :aviation.aircraft_model . \nVALUES ?x2 { :m.0bqwdc } \n?x0 :aviation.aircraft_line.models_in_line ?x1 . \n?x2 :aviation.aircraft_model.parent_aircraft_model ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "aviation"
        ],
        "s_expression": "(AND aviation.aircraft_line (JOIN aviation.aircraft_line.models_in_line (JOIN (R aviation.aircraft_model.parent_aircraft_model) m.0bqwdc)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04s94w",
                "entity_name": "Bell 206"
            }
        ],
        "Orgs_expression": "(AND aviation.aircraft_line (JOIN aviation.aircraft_line.models_in_line (JOIN (R aviation.aircraft_model.parent_aircraft_model) m.0bqwdc)))",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2103277008000,
        "question": "csm is supported on how many computing platforms?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ],
        "function": "count",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.computing_platform",
                    "class": "computer.computing_platform",
                    "friendly_name": "Computing Platform",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02l0321",
                    "class": "computer.file_format",
                    "friendly_name": "Csm",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "computer.computing_platform.file_formats_supported",
                    "friendly_name": "File Formats Supported"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.computing_platform . \nVALUES ?x1 { :m.02l0321 } \n?x0 :computer.computing_platform.file_formats_supported ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "computer"
        ],
        "level": "compositional",
        "s_expression": "(COUNT (AND computer.computing_platform (JOIN computer.computing_platform.file_formats_supported m.02l0321)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ],
        "Orgs_expression": "(COUNT (AND computer.computing_platform (JOIN computer.computing_platform.file_formats_supported m.02l0321)))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2101491002000,
        "question": "which digital camera has a image ratio of 4:3?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h27p1f",
                "entity_name": "Olympus E-PL3"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gg75tc",
                "entity_name": "Panasonic Lumix DMC-GF2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gywrrp",
                "entity_name": "Panasonic Lumix DMC-G2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d9377",
                "entity_name": "Canon PowerShot S3 IS"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03clq72",
                "entity_name": "Panasonic Lumix DMC-TZ3"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h27p9l",
                "entity_name": "Panasonic Lumix DMC-GF3"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gffz1r",
                "entity_name": "Canon EOS 600D"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2kj8",
                "entity_name": "Nikon Coolpix S550"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02nxhww",
                "entity_name": "Nikon Coolpix 3100"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07kc2_s",
                "entity_name": "Panasonic Lumix DMC-GF1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fqs3jf",
                "entity_name": "Panasonic Lumix DMC-LX5"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2l2c",
                "entity_name": "Fujifilm FinePix A610"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gkzs2f",
                "entity_name": "Panasonic Lumix DMC-GH2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqyqh",
                "entity_name": "Nikon Coolpix S1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2mc4",
                "entity_name": "Casio Exilim EX-Z750"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011v74fy",
                "entity_name": "Leica Digilux 2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dhm32",
                "entity_name": "Panasonic Lumix DMC-L1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h27nl5",
                "entity_name": "Olympus PEN E-P3"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04xvr8",
                "entity_name": "Canon PowerShot A75"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03d4mpt",
                "entity_name": "Ricoh GR Digital II"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gchd2",
                "entity_name": "Kodak DX7590"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "digicams.digital_camera",
                    "class": "digicams.digital_camera",
                    "friendly_name": "Digital Camera",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0220vcv",
                    "class": "digicams.camera_image_ratio",
                    "friendly_name": "4:3",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "digicams.digital_camera.image_ratio",
                    "friendly_name": "Image ratio (W:H)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :digicams.digital_camera . \nVALUES ?x1 { :m.0220vcv } \n?x0 :digicams.digital_camera.image_ratio ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "digicams"
        ],
        "s_expression": "(AND digicams.digital_camera (JOIN digicams.digital_camera.image_ratio m.0220vcv))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.011v74fy",
                "entity_name": "Leica Digilux 2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03d4mpt",
                "entity_name": "Ricoh GR Digital II"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2kj8",
                "entity_name": "Nikon Coolpix S550"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2l2c",
                "entity_name": "Fujifilm FinePix A610"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07kc2_s",
                "entity_name": "Panasonic Lumix DMC-GF1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dhm32",
                "entity_name": "Panasonic Lumix DMC-L1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fqs3jf",
                "entity_name": "Panasonic Lumix DMC-LX5"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gchd2",
                "entity_name": "Kodak DX7590"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gg75tc",
                "entity_name": "Panasonic Lumix DMC-GF2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gkzs2f",
                "entity_name": "Panasonic Lumix DMC-GH2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gywrrp",
                "entity_name": "Panasonic Lumix DMC-G2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h27nl5",
                "entity_name": "Olympus PEN E-P3"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h27p9l",
                "entity_name": "Panasonic Lumix DMC-GF3"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j1zvyk",
                "entity_name": "Olympus OM-D E-M5"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02nxhww",
                "entity_name": "Nikon Coolpix 3100"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q2mc4",
                "entity_name": "Casio Exilim EX-Z750"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04xvr8",
                "entity_name": "Canon PowerShot A75"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gffz1r",
                "entity_name": "Canon EOS 600D"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03clq72",
                "entity_name": "Panasonic Lumix DMC-TZ3"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d9377",
                "entity_name": "Canon PowerShot S3 IS"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqyqh",
                "entity_name": "Nikon Coolpix S1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h27p1f",
                "entity_name": "Olympus E-PL3"
            }
        ],
        "Orgs_expression": "(AND digicams.digital_camera (JOIN digicams.digital_camera.image_ratio m.0220vcv))",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2102194000000,
        "question": "which measurement system uses micro per degree c as inverse temperature units?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c13h",
                "entity_name": "International System of Units"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "measurement_unit.measurement_system",
                    "class": "measurement_unit.measurement_system",
                    "friendly_name": "Measurement System",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04p6lg_",
                    "class": "measurement_unit.inverse_temperature_unit",
                    "friendly_name": "micro per degree C",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "measurement_unit.measurement_system.inverse_temperature_units",
                    "friendly_name": "Inverse Temperature Units"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x1 { :m.04p6lg_ } \n?x0 :measurement_unit.measurement_system.inverse_temperature_units ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "measurement_unit"
        ],
        "level": "zero-shot",
        "s_expression": "(AND measurement_unit.measurement_system (JOIN measurement_unit.measurement_system.inverse_temperature_units m.04p6lg_))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c13h",
                "entity_name": "International System of Units"
            }
        ],
        "Orgs_expression": "(AND measurement_unit.measurement_system (JOIN measurement_unit.measurement_system.inverse_temperature_units m.04p6lg_))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2100600008000,
        "question": "who is the conference sponsor of the visweek?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fb9h",
                "entity_name": "IEEE Computer Society"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "conferences.conference_sponsor",
                    "class": "conferences.conference_sponsor",
                    "friendly_name": "Conference sponsor",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0bb4k4z",
                    "class": "conferences.conference_series",
                    "friendly_name": "VisWeek",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "conferences.conference_sponsor.conferences",
                    "friendly_name": "Conferences"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :conferences.conference_sponsor . \nVALUES ?x1 { :m.0bb4k4z } \n?x0 :conferences.conference_sponsor.conferences ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "conferences"
        ],
        "level": "zero-shot",
        "s_expression": "(AND conferences.conference_sponsor (JOIN conferences.conference_sponsor.conferences m.0bb4k4z))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fb9h",
                "entity_name": "IEEE Computer Society"
            }
        ],
        "Orgs_expression": "(AND conferences.conference_sponsor (JOIN conferences.conference_sponsor.conferences m.0bb4k4z))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2102925000000,
        "question": "what locomotive class has a weight of 129.0?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03czt71",
                "entity_name": "H\u017d series 1161"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "rail.locomotive_class",
                    "class": "rail.locomotive_class",
                    "friendly_name": "Locomotive class",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "129.0^^http://www.w3.org/2001/XMLSchema#float",
                    "class": "type.float",
                    "friendly_name": "129.0",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "rail.locomotive_class.weight",
                    "friendly_name": "Weight"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :rail.locomotive_class . \nVALUES ?x1 { \"129.0\"^^<http://www.w3.org/2001/XMLSchema#float> } \n?x0 :rail.locomotive_class.weight ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "rail"
        ],
        "level": "zero-shot",
        "s_expression": "(AND rail.locomotive_class (JOIN rail.locomotive_class.weight 129.0^^http://www.w3.org/2001/XMLSchema#float))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03czt71",
                "entity_name": "H\u017d series 1161"
            }
        ],
        "Orgs_expression": "(AND rail.locomotive_class (JOIN rail.locomotive_class.weight 129.0^^http://www.w3.org/2001/XMLSchema#float))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2103632007000,
        "question": "which invention was the most recent?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dh8s",
                "entity_name": "Mail"
            }
        ],
        "function": "argmax",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "law.invention",
                    "class": "law.invention",
                    "friendly_name": "Invention",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "type.datetime",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "law.invention.date_of_invention",
                    "friendly_name": "Date of invention"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :law.invention . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :law.invention . \n?y0 :law.invention.date_of_invention ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :law.invention.date_of_invention ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "law"
        ],
        "s_expression": "(ARGMAX law.invention law.invention.date_of_invention)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dh8s",
                "entity_name": "Mail"
            }
        ],
        "Orgs_expression": "(ARGMAX law.invention law.invention.date_of_invention)",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2100872010000,
        "question": "name the musical release that has the tracks of pretty in pink?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.030s_k8",
                "entity_name": "Spirit of the 80\u2019s"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "music.release",
                    "class": "music.release",
                    "friendly_name": "Musical Release",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.016tzf6",
                    "class": "music.recording",
                    "friendly_name": "Pretty in Pink",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "music.release.track",
                    "friendly_name": "Tracks"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :music.release . \nVALUES ?x1 { :m.016tzf6 } \n?x0 :music.release.track ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "music"
        ],
        "s_expression": "(AND music.release (JOIN music.release.track m.016tzf6))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.030s_k8",
                "entity_name": "Spirit of the 80\u2019s"
            }
        ],
        "Orgs_expression": "(AND music.release (JOIN music.release.track m.016tzf6))",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2102568016000,
        "question": "what is the name for the danish units of measurement of length?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0392s",
                "entity_name": "Geographical mile"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "measurement_unit.distance_unit",
                    "class": "measurement_unit.distance_unit",
                    "friendly_name": "Unit of Length",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07s8cg",
                    "class": "measurement_unit.measurement_system",
                    "friendly_name": "Danish units of measurement",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "measurement_unit.distance_unit.measurement_system",
                    "friendly_name": "Measurement System"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.distance_unit . \nVALUES ?x1 { :m.07s8cg } \n?x0 :measurement_unit.distance_unit.measurement_system ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "measurement_unit"
        ],
        "level": "zero-shot",
        "s_expression": "(AND measurement_unit.distance_unit (JOIN measurement_unit.distance_unit.measurement_system m.07s8cg))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0392s",
                "entity_name": "Geographical mile"
            }
        ],
        "Orgs_expression": "(AND measurement_unit.distance_unit (JOIN measurement_unit.distance_unit.measurement_system m.07s8cg))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2101237014000,
        "question": "what video game is released in 03/23/2006?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.040t_js",
                "entity_name": "Bonnie's Bookstore"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.040g_fz",
                "entity_name": "Dynasty Warriors Mahjong"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.040p136",
                "entity_name": "Super Dodge Ball"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nnz15",
                "entity_name": "Uncharted Waters"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nnz10",
                "entity_name": "Daikoukai Jidai IV: Rota Nova"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_bxyp",
                "entity_name": "Ultra Bust-A-Move"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02hlnbl",
                "entity_name": "Blazing Angels: Squadrons of WWII"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02hm6fs",
                "entity_name": "Monster 4x4 World Circuit"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045yp50",
                "entity_name": "Blazing Angels: Squadrons of WWII"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kys3xp",
                "entity_name": "Jewel Quest"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02hm1h3",
                "entity_name": "Blazing Angels: Squadrons of WWII"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.040rst5",
                "entity_name": "Under Defeat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kyrg52",
                "entity_name": "Battle of Europe"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.game_version",
                    "class": "cvg.game_version",
                    "friendly_name": "Video Game Version",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "2006-03-23^^http://www.w3.org/2001/XMLSchema#date",
                    "class": "type.datetime",
                    "friendly_name": "03/23/2006",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "cvg.game_version.release_date",
                    "friendly_name": "Release Date"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.game_version . \nVALUES ?x1 { \"2006-03-23-08:00\"^^<http://www.w3.org/2001/XMLSchema#date> } \n?x0 :cvg.game_version.release_date ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "cvg"
        ],
        "level": "zero-shot",
        "s_expression": "(AND cvg.game_version (JOIN cvg.game_version.release_date 2006-03-23^^http://www.w3.org/2001/XMLSchema#date))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.040t_js",
                "entity_name": "Bonnie's Bookstore"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.040g_fz",
                "entity_name": "Dynasty Warriors Mahjong"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.040p136",
                "entity_name": "Super Dodge Ball"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nnz15",
                "entity_name": "Uncharted Waters"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nnz10",
                "entity_name": "Daikoukai Jidai IV: Rota Nova"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_bxyp",
                "entity_name": "Ultra Bust-A-Move"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02hlnbl",
                "entity_name": "Blazing Angels: Squadrons of WWII"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02hm6fs",
                "entity_name": "Monster 4x4 World Circuit"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045yp50",
                "entity_name": "Blazing Angels: Squadrons of WWII"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kys3xp",
                "entity_name": "Jewel Quest"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02hm1h3",
                "entity_name": "Blazing Angels: Squadrons of WWII"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.040rst5",
                "entity_name": "Under Defeat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kyrg52",
                "entity_name": "Battle of Europe"
            }
        ],
        "Orgs_expression": "(AND cvg.game_version (JOIN cvg.game_version.release_date 2006-03-23^^http://www.w3.org/2001/XMLSchema#date))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2100784013000,
        "question": "who does own the wdfx-tv tv station ?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.077h3f",
                "entity_name": "Raycom Media"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "broadcast.tv_station_owner",
                    "class": "broadcast.tv_station_owner",
                    "friendly_name": "TV station owner",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0cbwrz",
                    "class": "broadcast.tv_station",
                    "friendly_name": "WDFX-TV",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "broadcast.tv_station_owner.tv_stations",
                    "friendly_name": "TV stations owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :broadcast.tv_station_owner . \nVALUES ?x1 { :m.0cbwrz } \n?x0 :broadcast.tv_station_owner.tv_stations ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "broadcast"
        ],
        "s_expression": "(AND broadcast.tv_station_owner (JOIN broadcast.tv_station_owner.tv_stations m.0cbwrz))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.077h3f",
                "entity_name": "Raycom Media"
            }
        ],
        "Orgs_expression": "(AND broadcast.tv_station_owner (JOIN broadcast.tv_station_owner.tv_stations m.0cbwrz))",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2104192002000,
        "question": "how many males film costumer designer are there?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2234"
            }
        ],
        "function": "count",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "film.film_costumer_designer",
                    "class": "film.film_costumer_designer",
                    "friendly_name": "Film costumer designer",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05zppz",
                    "class": "people.gender",
                    "friendly_name": "males",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.person.gender",
                    "friendly_name": "Gender"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :film.film_costumer_designer . \nVALUES ?x1 { :m.05zppz } \n?x0 :people.person.gender ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "people"
        ],
        "s_expression": "(COUNT (AND film.film_costumer_designer (JOIN people.person.gender m.05zppz)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "2783"
            }
        ],
        "Orgs_expression": "(COUNT (AND film.film_costumer_designer (JOIN people.person.gender m.05zppz)))",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 3202286002000,
        "question": "grace chetwin illustrated which book edition for the series the last legacy vol 1?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05q3672",
                "entity_name": "The Atheling"
            }
        ],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "book.book_edition",
                    "class": "book.book_edition",
                    "friendly_name": "Book Edition",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0g5v_yk",
                    "class": "book.book_edition_series",
                    "friendly_name": "The Last Legacy vol 1",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.05qftt_",
                    "class": "book.illustrator",
                    "friendly_name": "Grace Chetwin",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "book.book_edition_series.editions_in_this_series",
                    "friendly_name": "Editions in this series"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "book.illustrator.book_editions_illustrated",
                    "friendly_name": "Book editions illustrated"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :book.book_edition . \nVALUES ?x1 { :m.0g5v_yk } \nVALUES ?x2 { :m.05qftt_ } \n?x1 :book.book_edition_series.editions_in_this_series ?x0 . \n?x2 :book.illustrator.book_editions_illustrated ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "book"
        ],
        "s_expression": "(AND book.book_edition (AND (JOIN (R book.book_edition_series.editions_in_this_series) m.0g5v_yk) (JOIN (R book.illustrator.book_editions_illustrated) m.05qftt_)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05q3672",
                "entity_name": "The Atheling"
            }
        ],
        "Orgs_expression": "(AND book.book_edition (AND (JOIN (R book.book_edition_series.editions_in_this_series) m.0g5v_yk) (JOIN (R book.illustrator.book_editions_illustrated) m.05qftt_)))",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2101162004000,
        "question": "which system contains the meter measurement unit?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c13h",
                "entity_name": "International System of Units"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09wy3y",
                "entity_name": "Gravitational metric system"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ld2r",
                "entity_name": "Metre\u2013tonne\u2013second system of units"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "measurement_unit.measurement_system",
                    "class": "measurement_unit.measurement_system",
                    "friendly_name": "Measurement System",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04sf9",
                    "class": "measurement_unit.distance_unit",
                    "friendly_name": "Meter",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "measurement_unit.measurement_system.length_units",
                    "friendly_name": "Length Units"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x1 { :m.04sf9 } \n?x0 :measurement_unit.measurement_system.length_units ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "measurement_unit"
        ],
        "level": "zero-shot",
        "s_expression": "(AND measurement_unit.measurement_system (JOIN measurement_unit.measurement_system.length_units m.04sf9))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c13h",
                "entity_name": "International System of Units"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09wy3y",
                "entity_name": "Gravitational metric system"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ld2r",
                "entity_name": "Metre\u2013tonne\u2013second system of units"
            }
        ],
        "Orgs_expression": "(AND measurement_unit.measurement_system (JOIN measurement_unit.measurement_system.length_units m.04sf9))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2100853021000,
        "question": "name the guitar brand which is rickenbacker guitars.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ktrhq",
                "entity_name": "Rickenbacker 660/12"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "music.guitar",
                    "class": "music.guitar",
                    "friendly_name": "Guitar",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06fs7",
                    "class": "music.musical_instrument_company",
                    "friendly_name": "rickenbacker guitars",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "music.guitar.brand",
                    "friendly_name": "Brand"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :music.guitar . \nVALUES ?x1 { :m.06fs7 } \n?x0 :music.guitar.brand ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "music"
        ],
        "s_expression": "(AND music.guitar (JOIN music.guitar.brand m.06fs7))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pqjvz",
                "entity_name": "Rickenbacker 360/12"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ktrhq",
                "entity_name": "Rickenbacker 660/12"
            }
        ],
        "Orgs_expression": "(AND music.guitar (JOIN music.guitar.brand m.06fs7))",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 3204817007000,
        "question": "what video game series has an expansion designed by alan miranda?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06zlccx",
                "entity_name": "Neverwinter Nights"
            }
        ],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.game_series",
                    "class": "cvg.game_series",
                    "friendly_name": "Video Game Series",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "cvg.computer_game_expansion",
                    "class": "cvg.computer_game_expansion",
                    "friendly_name": "Video Game Expansion",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.05z_n97",
                    "class": "cvg.cvg_designer",
                    "friendly_name": "Alan Miranda",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "cvg.computer_videogame.game_series",
                    "friendly_name": "Part of game series"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "cvg.computer_videogame.designers",
                    "friendly_name": "Designers"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.game_series . \n?x1 :type.object.type :cvg.computer_game_expansion . \nVALUES ?x2 { :m.05z_n97 } \n?x1 :cvg.computer_videogame.game_series ?x0 . \n?x1 :cvg.computer_videogame.designers ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "cvg"
        ],
        "level": "zero-shot",
        "s_expression": "(AND cvg.game_series (JOIN (R cvg.computer_videogame.game_series) (JOIN cvg.computer_videogame.designers m.05z_n97)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06zlccx",
                "entity_name": "Neverwinter Nights"
            }
        ],
        "Orgs_expression": "(AND cvg.game_series (JOIN (R cvg.computer_videogame.game_series) (JOIN cvg.computer_videogame.designers m.05z_n97)))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2100081005000,
        "question": "which radio episode was about angola 3?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.063qx93",
                "entity_name": "36 Years in Solitary: Murder, Death and Justice on Angola"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "radio.radio_program_episode",
                    "class": "radio.radio_program_episode",
                    "friendly_name": "Radio program episode",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0g6zqs",
                    "class": "radio.radio_subject",
                    "friendly_name": "angola 3",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "radio.radio_program_episode.subjects",
                    "friendly_name": "Subjects"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :radio.radio_program_episode . \nVALUES ?x1 { :m.0g6zqs } \n?x0 :radio.radio_program_episode.subjects ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "radio"
        ],
        "level": "zero-shot",
        "s_expression": "(AND radio.radio_program_episode (JOIN radio.radio_program_episode.subjects m.0g6zqs))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.063qx93",
                "entity_name": "36 Years in Solitary: Murder, Death and Justice on Angola"
            }
        ],
        "Orgs_expression": "(AND radio.radio_program_episode (JOIN radio.radio_program_episode.subjects m.0g6zqs))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2102672000000,
        "question": "aunt is a character in what comic book story?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bqg2y",
                "entity_name": "Spider-Man!"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "comic_books.comic_book_story",
                    "class": "comic_books.comic_book_story",
                    "friendly_name": "Comic Book Story",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0127r1",
                    "class": "comic_books.comic_book_character",
                    "friendly_name": "aunt",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "comic_books.comic_book_story.characters",
                    "friendly_name": "Characters"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :comic_books.comic_book_story . \nVALUES ?x1 { :m.0127r1 } \n?x0 :comic_books.comic_book_story.characters ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "comic_books"
        ],
        "s_expression": "(AND comic_books.comic_book_story (JOIN comic_books.comic_book_story.characters m.0127r1))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bqg2y",
                "entity_name": "Spider-Man!"
            }
        ],
        "Orgs_expression": "(AND comic_books.comic_book_story (JOIN comic_books.comic_book_story.characters m.0127r1))",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 4301746000000,
        "question": "which version released in japan supports xbox360?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cn1dzn",
                "entity_name": "Sonic Free Riders"
            }
        ],
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.game_version",
                    "class": "cvg.game_version",
                    "friendly_name": "Video Game Version",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03_3d",
                    "class": "cvg.computer_game_region",
                    "friendly_name": "Japan",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "computer.computer_peripheral",
                    "class": "computer.computer_peripheral",
                    "friendly_name": "Computer Peripheral",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.02plp2",
                    "class": "business.brand",
                    "friendly_name": "xbox360",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "cvg.computer_game_region.versions_released_in_this_region",
                    "friendly_name": "Versions released in this region"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "computer.computer_peripheral.supporting_game_versions",
                    "friendly_name": "Supporting game versions"
                },
                {
                    "start": 3,
                    "end": 2,
                    "relation": "business.brand.products",
                    "friendly_name": "Products"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.game_version . \nVALUES ?x1 { :m.03_3d } \n?x2 :type.object.type :computer.computer_peripheral . \nVALUES ?x3 { :m.02plp2 } \n?x1 :cvg.computer_game_region.versions_released_in_this_region ?x0 . \n?x2 :computer.computer_peripheral.supporting_game_versions ?x0 . \n?x3 :business.brand.products ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domains": [
            "business",
            "cvg",
            "computer"
        ],
        "level": "zero-shot",
        "s_expression": "(AND cvg.game_version (AND (JOIN (R cvg.computer_game_region.versions_released_in_this_region) m.03_3d) (JOIN (R computer.computer_peripheral.supporting_game_versions) (JOIN (R business.brand.products) m.02plp2))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cn1dzn",
                "entity_name": "Sonic Free Riders"
            }
        ],
        "Orgs_expression": "(AND cvg.game_version (AND (JOIN (R cvg.computer_game_region.versions_released_in_this_region) m.03_3d) (JOIN (R computer.computer_peripheral.supporting_game_versions) (JOIN (R business.brand.products) m.02plp2))))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2102129013000,
        "question": "what comic series are part of the comic fantasy genre?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.010f9y6r",
                "entity_name": "Rat Queens"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "comic_books.comic_book_series",
                    "class": "comic_books.comic_book_series",
                    "friendly_name": "Comic Book Series",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0246p",
                    "class": "comic_books.comic_book_genre",
                    "friendly_name": "Comic fantasy",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "comic_books.comic_book_series.genre",
                    "friendly_name": "Genre"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :comic_books.comic_book_series . \nVALUES ?x1 { :m.0246p } \n?x0 :comic_books.comic_book_series.genre ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "comic_books"
        ],
        "s_expression": "(AND comic_books.comic_book_series (JOIN comic_books.comic_book_series.genre m.0246p))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.010f9y6r",
                "entity_name": "Rat Queens"
            }
        ],
        "Orgs_expression": "(AND comic_books.comic_book_series (JOIN comic_books.comic_book_series.genre m.0246p))",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2102103001000,
        "question": "mega man: the power battle is included in which video game compilation?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03dsxw",
                "entity_name": "Mega Man Anniversary Collection"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.computer_game_compilation",
                    "class": "cvg.computer_game_compilation",
                    "friendly_name": "Video Game Compilation",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08zpwg",
                    "class": "cvg.computer_videogame",
                    "friendly_name": "Mega Man: The Power Battle",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "cvg.computer_game_compilation.games_included",
                    "friendly_name": "Games Included"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_compilation . \nVALUES ?x1 { :m.08zpwg } \n?x0 :cvg.computer_game_compilation.games_included ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "cvg"
        ],
        "level": "zero-shot",
        "s_expression": "(AND cvg.computer_game_compilation (JOIN cvg.computer_game_compilation.games_included m.08zpwg))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03dsxw",
                "entity_name": "Mega Man Anniversary Collection"
            }
        ],
        "Orgs_expression": "(AND cvg.computer_game_compilation (JOIN cvg.computer_game_compilation.games_included m.08zpwg))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 3200101006000,
        "question": "who curates the architecture exhibition exhibitions?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cp4c43",
                "entity_name": "H\u00e9l\u00e8ne Morlier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cp4c4y",
                "entity_name": "Daniela Seidita"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cp4c54",
                "entity_name": "Jeanne de Bussac"
            }
        ],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "exhibitions.exhibition_curator",
                    "class": "exhibitions.exhibition_curator",
                    "friendly_name": "Exhibition curator",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "exhibitions.exhibition",
                    "class": "exhibitions.exhibition",
                    "friendly_name": "Exhibition",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.04dn_sc",
                    "class": "exhibitions.type_of_exhibition",
                    "friendly_name": "Architecture exhibition",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "exhibitions.exhibition.curators",
                    "friendly_name": "Curators"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "exhibitions.type_of_exhibition.exhibitions_of_this_type",
                    "friendly_name": "Exhibitions of this type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :exhibitions.exhibition_curator . \n?x1 :type.object.type :exhibitions.exhibition . \nVALUES ?x2 { :m.04dn_sc } \n?x1 :exhibitions.exhibition.curators ?x0 . \n?x2 :exhibitions.type_of_exhibition.exhibitions_of_this_type ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "exhibitions"
        ],
        "s_expression": "(AND exhibitions.exhibition_curator (JOIN (R exhibitions.exhibition.curators) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) m.04dn_sc)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cp4c43",
                "entity_name": "H\u00e9l\u00e8ne Morlier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cp4c4y",
                "entity_name": "Daniela Seidita"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cp4c54",
                "entity_name": "Jeanne de Bussac"
            }
        ],
        "Orgs_expression": "(AND exhibitions.exhibition_curator (JOIN (R exhibitions.exhibition.curators) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) m.04dn_sc)))",
        "Missing_KB_elements": [
            "none"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2103115008000,
        "question": "jehovah's witness has how many worship place types?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "3"
            }
        ],
        "function": "count",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "religion.type_of_place_of_worship",
                    "class": "religion.type_of_place_of_worship",
                    "friendly_name": "Type of place of worship",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0dtdq",
                    "class": "religion.religion",
                    "friendly_name": "jehovah's witness",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "religion.religion.types_of_places_of_worship",
                    "friendly_name": "Types of places of worship"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.type_of_place_of_worship . \nVALUES ?x1 { :m.0dtdq } \n?x1 :religion.religion.types_of_places_of_worship ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "religion"
        ],
        "level": "compositional",
        "s_expression": "(COUNT (AND religion.type_of_place_of_worship (JOIN (R religion.religion.types_of_places_of_worship) m.0dtdq)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "3"
            }
        ],
        "Orgs_expression": "(COUNT (AND religion.type_of_place_of_worship (JOIN (R religion.religion.types_of_places_of_worship) m.0dtdq)))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2101262004000,
        "question": "what is the video game mod for grand theft auto iii?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04hq69",
                "entity_name": "Multi Theft Auto"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.computer_game_mod",
                    "class": "cvg.computer_game_mod",
                    "friendly_name": "Video Game Mod",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01_m48",
                    "class": "cvg.computer_videogame",
                    "friendly_name": "Grand Theft Auto III",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "cvg.computer_game_mod.game_modded",
                    "friendly_name": "Game Modded"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_game_mod . \nVALUES ?x1 { :m.01_m48 } \n?x0 :cvg.computer_game_mod.game_modded ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "cvg"
        ],
        "level": "zero-shot",
        "s_expression": "(AND cvg.computer_game_mod (JOIN cvg.computer_game_mod.game_modded m.01_m48))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04hq69",
                "entity_name": "Multi Theft Auto"
            }
        ],
        "Orgs_expression": "(AND cvg.computer_game_mod (JOIN cvg.computer_game_mod.game_modded m.01_m48))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2102034005000,
        "question": "in which measurement system is the permittivity measured in farad per metre?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c13h",
                "entity_name": "International System of Units"
            }
        ],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "measurement_unit.measurement_system",
                    "class": "measurement_unit.measurement_system",
                    "friendly_name": "Measurement System",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02sj567",
                    "class": "measurement_unit.permittivity_unit",
                    "friendly_name": "Farad per metre",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "measurement_unit.measurement_system.permittivity_units",
                    "friendly_name": "Permittivity Units"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.measurement_system . \nVALUES ?x1 { :m.02sj567 } \n?x0 :measurement_unit.measurement_system.permittivity_units ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "measurement_unit"
        ],
        "level": "zero-shot",
        "s_expression": "(AND measurement_unit.measurement_system (JOIN measurement_unit.measurement_system.permittivity_units m.02sj567))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c13h",
                "entity_name": "International System of Units"
            }
        ],
        "Orgs_expression": "(AND measurement_unit.measurement_system (JOIN measurement_unit.measurement_system.permittivity_units m.02sj567))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2105133003000,
        "question": "what time zome has a dst offset from utc and is more than 5.0?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05br69j",
                "entity_name": "New Zealand Time Zone"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09zykc",
                "entity_name": "Chatham Island Time Zone"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0y497zw",
                "entity_name": "Australian Central Time Zone"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0y4980d",
                "entity_name": "Australian Western Time Zone"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0y49bcg",
                "entity_name": "Fiji Time Zone"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0y4d_vm",
                "entity_name": "West Samoa Time Zone"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0y4dpjf",
                "entity_name": "Lord Howe Time Zone"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0y497_m",
                "entity_name": "Australian Eastern Time Zone"
            }
        ],
        "function": ">",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "time.time_zone",
                    "class": "time.time_zone",
                    "friendly_name": "Time Zone",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "5.0^^http://www.w3.org/2001/XMLSchema#float",
                    "class": "type.float",
                    "friendly_name": "5.0",
                    "question_node": 0,
                    "function": ">"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "time.time_zone.dst_offset_from_utc",
                    "friendly_name": "DST offset from UTC"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :time.time_zone . \nFILTER (?x1 > \"5.0\"^^<http://www.w3.org/2001/XMLSchema#float>)\n?x0 :time.time_zone.dst_offset_from_utc ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "time"
        ],
        "level": "compositional",
        "s_expression": "(AND time.time_zone (gt time.time_zone.dst_offset_from_utc 5.0^^http://www.w3.org/2001/XMLSchema#float))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05br69j",
                "entity_name": "New Zealand Time Zone"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09zykc",
                "entity_name": "Chatham Island Time Zone"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0y497zw",
                "entity_name": "Australian Central Time Zone"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0y4980d",
                "entity_name": "Australian Western Time Zone"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0y49bcg",
                "entity_name": "Fiji Time Zone"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0y4d_vm",
                "entity_name": "West Samoa Time Zone"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0y4dpjf",
                "entity_name": "Lord Howe Time Zone"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0y497_m",
                "entity_name": "Australian Eastern Time Zone"
            }
        ],
        "Orgs_expression": "(AND time.time_zone (gt time.time_zone.dst_offset_from_utc 5.0^^http://www.w3.org/2001/XMLSchema#float))",
        "Missing_KB_elements": [
            "none"
        ]
    },
    {
        "qid": 2102788009000,
        "question": "what digital camera weighs 316.0?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "digicams.digital_camera",
                    "class": "digicams.digital_camera",
                    "friendly_name": "Digital Camera",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "316.0^^http://www.w3.org/2001/XMLSchema#float",
                    "class": "type.float",
                    "friendly_name": "316.0",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "digicams.digital_camera.weight",
                    "friendly_name": "Weight"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :digicams.digital_camera . \nVALUES ?x1 { \"316.0\"^^<http://www.w3.org/2001/XMLSchema#float> } \n?x0 :digicams.digital_camera.weight ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "digicams"
        ],
        "s_expression": "(AND digicams.digital_camera (JOIN digicams.digital_camera.weight 316.0^^http://www.w3.org/2001/XMLSchema#float))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04wj_22",
                "entity_name": "Canon PowerShot SX100 IS"
            }
        ],
        "Orgs_expression": "(AND digicams.digital_camera (JOIN digicams.digital_camera.weight 316.0^^http://www.w3.org/2001/XMLSchema#float))",
        "Missing_KB_elements": [
            "F"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 3200276002000,
        "question": "what olympic medal (demonstration) does canada win?",
        "answer": [],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "olympics.olympic_medal_demonstration",
                    "class": "olympics.olympic_medal_demonstration",
                    "friendly_name": "Olympic medal (demonstration)",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "olympics.olympic_demonstration_medal_honor",
                    "class": "olympics.olympic_demonstration_medal_honor",
                    "friendly_name": "Olympic athlete/demonstration competition relationship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d060g",
                    "class": "olympics.olympic_participating_country",
                    "friendly_name": "Canada",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "olympics.olympic_demonstration_medal_honor.medal",
                    "friendly_name": "Medal"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "olympics.olympic_demonstration_medal_honor.country",
                    "friendly_name": "Country"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :olympics.olympic_medal_demonstration . \n?x1 :type.object.type :olympics.olympic_demonstration_medal_honor . \nVALUES ?x2 { :m.0d060g } \n?x1 :olympics.olympic_demonstration_medal_honor.medal ?x0 . \n?x1 :olympics.olympic_demonstration_medal_honor.country ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "olympics"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02lq67",
                "entity_name": "Bronze medal"
            }
        ],
        "Orgs_expression": "(AND olympics.olympic_medal_demonstration (JOIN (R olympics.olympic_demonstration_medal_honor.medal) (JOIN olympics.olympic_demonstration_medal_honor.country m.0d060g)))",
        "Missing_KB_elements": [
            "T"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 2102820000000,
        "question": "what variety is an radio telescope?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.telescope_principle_type",
                    "class": "astronomy.telescope_principle_type",
                    "friendly_name": "Telescope principle type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0clmf",
                    "class": "astronomy.telescope_type",
                    "friendly_name": "Radio telescope",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.telescope_principle_type.telescopic_classifications_of_this_technique",
                    "friendly_name": "Telescopic classifications of this technique"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.telescope_principle_type . \nVALUES ?x1 { :m.0clmf } \n?x0 :astronomy.telescope_principle_type.telescopic_classifications_of_this_technique ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "astronomy"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09tq_h_",
                "entity_name": "Spherical reflector"
            }
        ],
        "Orgs_expression": "(AND astronomy.telescope_principle_type (JOIN astronomy.telescope_principle_type.telescopic_classifications_of_this_technique m.0clmf))",
        "Missing_KB_elements": [
            "T"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 3202600006000,
        "question": "sherlock holmes and krusty the clown have what fictional medical condition?",
        "answer": [],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "fictional_universe.medical_condition_in_fiction",
                    "class": "fictional_universe.medical_condition_in_fiction",
                    "friendly_name": "Medical condition in fiction",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0h8jd",
                    "class": "film.film_character",
                    "friendly_name": "Krusty the Clown",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.06rkl",
                    "class": "cvg.game_character",
                    "friendly_name": "Sherlock Holmes",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "fictional_universe.fictional_character.medical_conditions",
                    "friendly_name": "Medical conditions"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "fictional_universe.fictional_character.medical_conditions",
                    "friendly_name": "Medical conditions"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fictional_universe.medical_condition_in_fiction . \nVALUES ?x1 { :m.0h8jd } \nVALUES ?x2 { :m.06rkl } \n?x1 :fictional_universe.fictional_character.medical_conditions ?x0 . \n?x2 :fictional_universe.fictional_character.medical_conditions ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "fictional_universe"
        ],
        "s_expression": "(AND fictional_universe.medical_condition_in_fiction (AND (JOIN (R fictional_universe.fictional_character.medical_conditions) m.0h8jd) (JOIN (R fictional_universe.fictional_character.medical_conditions) m.06rkl)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0466pc0",
                "entity_name": "Substance dependence"
            }
        ],
        "Orgs_expression": "(AND fictional_universe.medical_condition_in_fiction (AND (JOIN (R fictional_universe.fictional_character.medical_conditions) m.0h8jd) (JOIN (R fictional_universe.fictional_character.medical_conditions) m.06rkl)))",
        "Missing_KB_elements": [
            "F"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2101904007000,
        "question": "what machines have 12 pistons?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "engineering.piston_configuration",
                    "class": "engineering.piston_configuration",
                    "friendly_name": "Piston configuration",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "12^^http://www.w3.org/2001/XMLSchema#integer",
                    "class": "type.int",
                    "friendly_name": "12",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "engineering.piston_configuration.number_of_pistons",
                    "friendly_name": "Number of pistons"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :engineering.piston_configuration . \nVALUES ?x1 { \"12\"^^<http://www.w3.org/2001/XMLSchema#integer> } \n?x0 :engineering.piston_configuration.number_of_pistons ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "engineering"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0800_",
                "entity_name": "V12 engine"
            }
        ],
        "Orgs_expression": "(AND engineering.piston_configuration (JOIN engineering.piston_configuration.number_of_pistons 12^^http://www.w3.org/2001/XMLSchema#integer))",
        "Missing_KB_elements": [
            "T"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2101977008000,
        "question": "what is the name of the html layout engine that operamini uses?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.html_layout_engine",
                    "class": "computer.html_layout_engine",
                    "friendly_name": "HTML Layout Engine",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08p9zk",
                    "class": "computer.web_browser",
                    "friendly_name": "operamini",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "computer.html_layout_engine.browsers",
                    "friendly_name": "Browsers"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.html_layout_engine . \nVALUES ?x1 { :m.08p9zk } \n?x0 :computer.html_layout_engine.browsers ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "computer"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02v2wn",
                "entity_name": "Presto"
            }
        ],
        "Orgs_expression": "(AND computer.html_layout_engine (JOIN computer.html_layout_engine.browsers m.08p9zk))",
        "Missing_KB_elements": [
            "T"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2102916023000,
        "question": "what's the mission destination of soyuz tma-13m?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.mission_destination",
                    "class": "spaceflight.mission_destination",
                    "friendly_name": "Mission destination",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0h7q91m",
                    "class": "spaceflight.space_mission",
                    "friendly_name": "Soyuz TMA-13M",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "spaceflight.mission_destination.missions_sent_here",
                    "friendly_name": "Missions sent here"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.mission_destination . \nVALUES ?x1 { :m.0h7q91m } \n?x0 :spaceflight.mission_destination.missions_sent_here ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "spaceflight"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03wky",
                "entity_name": "International Space Station"
            }
        ],
        "Orgs_expression": "(AND spaceflight.mission_destination (JOIN spaceflight.mission_destination.missions_sent_here m.0h7q91m))",
        "Missing_KB_elements": [
            "T"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 3203196006000,
        "question": "the author daniel t. o'hara contributed which book edition series?",
        "answer": [],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "book.book_edition_series",
                    "class": "book.book_edition_series",
                    "friendly_name": "Book edition series",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "book.book_edition",
                    "class": "book.book_edition",
                    "friendly_name": "Book Edition",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0_yckgw",
                    "class": "book.author",
                    "friendly_name": "Daniel T. O'Hara",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "book.book_edition_series.editions_in_this_series",
                    "friendly_name": "Editions in this series"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "book.author.contributing_author_to",
                    "friendly_name": "Contributing author to"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :book.book_edition_series . \n?x1 :type.object.type :book.book_edition . \nVALUES ?x2 { :m.0_yckgw } \n?x0 :book.book_edition_series.editions_in_this_series ?x1 . \n?x2 :book.author.contributing_author_to ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "book"
        ],
        "s_expression": "(AND book.book_edition_series (JOIN book.book_edition_series.editions_in_this_series (JOIN (R book.author.contributing_author_to) m.0_yckgw)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05qj75g",
                "entity_name": "Barnes & Noble Classics"
            }
        ],
        "Orgs_expression": "(AND book.book_edition_series (JOIN book.book_edition_series.editions_in_this_series (JOIN (R book.author.contributing_author_to) m.0_yckgw)))",
        "Missing_KB_elements": [
            "F"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 3200544017000,
        "question": "vail resorts has the same ownership as what ski area?",
        "answer": [],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "skiing.ski_area",
                    "class": "skiing.ski_area",
                    "friendly_name": "Ski Area",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "skiing.ski_area_ownership",
                    "class": "skiing.ski_area_ownership",
                    "friendly_name": "Ski Area Ownership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.049cf5",
                    "class": "skiing.ski_area_owner",
                    "friendly_name": "Vail Resorts",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "skiing.ski_area.owner",
                    "friendly_name": "Owners"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "skiing.ski_area_ownership.owner",
                    "friendly_name": "Owner"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :skiing.ski_area . \n?x1 :type.object.type :skiing.ski_area_ownership . \nVALUES ?x2 { :m.049cf5 } \n?x0 :skiing.ski_area.owner ?x1 . \n?x1 :skiing.ski_area_ownership.owner ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "skiing"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h1nv0",
                "entity_name": "Breckenridge Ski Resort"
            }
        ],
        "Orgs_expression": "(AND skiing.ski_area (JOIN skiing.ski_area.owner (JOIN skiing.ski_area_ownership.owner m.049cf5)))",
        "Missing_KB_elements": [
            "T"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 3202912004000,
        "question": "which medical trials consist of both the us food and drug administration health authority and have a randomized design?",
        "answer": [],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.medical_trial",
                    "class": "medicine.medical_trial",
                    "friendly_name": "Medical trial",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.032mx",
                    "class": "medicine.medical_trial_health_authority",
                    "friendly_name": "us food and drug administration",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01y2h6z",
                    "class": "medicine.medical_trial_design",
                    "friendly_name": "Randomized",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "medicine.medical_trial.health_authority",
                    "friendly_name": "Health authority"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "medicine.medical_trial.design",
                    "friendly_name": "Design"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_trial . \nVALUES ?x1 { :m.032mx } \nVALUES ?x2 { :m.01y2h6z } \n?x0 :medicine.medical_trial.health_authority ?x1 . \n?x0 :medicine.medical_trial.design ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "medicine"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04d3jh_",
                "entity_name": "Valganciclovir (Valcyte) for Chronic Fatigue Syndrome Patients Who Have Elevated Antibody Titers Against Human Herpes Virus 6 (HHV-6)and Epstein-Barr Virus (EBV)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03zbbwc",
                "entity_name": "Alendronate and/or Parathyroid Hormone for Osteoporosis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04d1vdb",
                "entity_name": "Efficacy and Safety of SPD417 in Treatment of Manic Symptoms in Adults With Bipolar I Disorder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04d2cxf",
                "entity_name": "Memantine in Systemic Lupus Erythematosus"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04d2sb_",
                "entity_name": "The Study of the Safety and Efficacy of Ampligen in Chronic Fatigue Syndrome"
            }
        ],
        "Orgs_expression": "(AND medicine.medical_trial (AND (JOIN medicine.medical_trial.health_authority m.032mx) (JOIN medicine.medical_trial.design m.01y2h6z)))",
        "Missing_KB_elements": [
            "T"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 2101592002000,
        "question": "what user lists the mutaytor his or her profile as a favorite musical artist?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "freebase.user_profile",
                    "class": "freebase.user_profile",
                    "friendly_name": "User Profile",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03f6c0l",
                    "class": "music.artist",
                    "friendly_name": "The Mutaytor",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "freebase.user_profile.favorite_music_artists",
                    "friendly_name": "Favorite Music Artists"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :freebase.user_profile . \nVALUES ?x1 { :m.03f6c0l } \n?x0 :freebase.user_profile.favorite_music_artists ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "freebase"
        ],
        "s_expression": "(AND freebase.user_profile (JOIN freebase.user_profile.favorite_music_artists m.03f6c0l))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01z0g0v",
                "entity_name": "egradman"
            }
        ],
        "Orgs_expression": "(AND freebase.user_profile (JOIN freebase.user_profile.favorite_music_artists m.03f6c0l))",
        "Missing_KB_elements": [
            "E"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 2100577004000,
        "question": "the tv episode segments spam fall under what subject?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "tv.tv_subject",
                    "class": "tv.tv_subject",
                    "friendly_name": "TV subject",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04vbm",
                    "class": "tv.tv_episode_segment",
                    "friendly_name": "Spam",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "tv.tv_subject.tv_episode_segments",
                    "friendly_name": "TV episode segments"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :tv.tv_subject . \nVALUES ?x1 { :m.04vbm } \n?x0 :tv.tv_subject.tv_episode_segments ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "tv"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.070rx",
                "entity_name": "Spam"
            }
        ],
        "Orgs_expression": "(AND tv.tv_subject (JOIN tv.tv_subject.tv_episode_segments m.04vbm))",
        "Missing_KB_elements": [
            "R"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 3203274000000,
        "question": "what terminal does polar air cargo use at its main hub?",
        "answer": [],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "aviation.airport_terminal",
                    "class": "aviation.airport_terminal",
                    "friendly_name": "Airport terminal",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "aviation.airport",
                    "class": "aviation.airport",
                    "friendly_name": "Airport",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0swf2",
                    "class": "aviation.airline",
                    "friendly_name": "Polar Air Cargo",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "aviation.airport_terminal.airport",
                    "friendly_name": "Airport"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "aviation.airport.focus_city_for",
                    "friendly_name": "Focus city for"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :aviation.airport_terminal . \n?x1 :type.object.type :aviation.airport . \nVALUES ?x2 { :m.0swf2 } \n?x0 :aviation.airport_terminal.airport ?x1 . \n?x1 :aviation.airport.focus_city_for ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "aviation"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05zz1vd",
                "entity_name": "SuperTerminal 1"
            }
        ],
        "Orgs_expression": "(AND aviation.airport_terminal (JOIN aviation.airport_terminal.airport (JOIN aviation.airport.focus_city_for m.0swf2)))",
        "Missing_KB_elements": [
            "T"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2102102002000,
        "question": "what battery is of the size aa batteries?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "engineering.battery",
                    "class": "engineering.battery",
                    "friendly_name": "Battery",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05f08s",
                    "class": "engineering.battery_size",
                    "friendly_name": "aa batteries",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "engineering.battery.size",
                    "friendly_name": "Size"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :engineering.battery . \nVALUES ?x1 { :m.05f08s } \n?x0 :engineering.battery.size ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "engineering"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.08mbnq1",
                "entity_name": "Duracell AA battery"
            }
        ],
        "Orgs_expression": "(AND engineering.battery (JOIN engineering.battery.size m.05f08s))",
        "Missing_KB_elements": [
            "T"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 4300803003000,
        "question": "what article about cultic studies review was written in spoken english?",
        "answer": [],
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "book.journal_article",
                    "class": "book.journal_article",
                    "friendly_name": "Journal article",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "book.journal_publication",
                    "class": "book.journal_publication",
                    "friendly_name": "Journal publication",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0109_nr2",
                    "class": "book.journal",
                    "friendly_name": "Cultic Studies Review",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.02h40lc",
                    "class": "language.human_language",
                    "friendly_name": "spoken english",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "book.journal_publication.article",
                    "friendly_name": "Article"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "book.journal_publication.journal",
                    "friendly_name": "Journal"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "book.written_work.original_language",
                    "friendly_name": "Original language"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :book.journal_article . \n?x1 :type.object.type :book.journal_publication . \nVALUES ?x2 { :m.0109_nr2 } \nVALUES ?x3 { :m.02h40lc } \n?x1 :book.journal_publication.article ?x0 . \n?x1 :book.journal_publication.journal ?x2 . \n?x0 :book.written_work.original_language ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domains": [
            "book"
        ],
        "s_expression": "(AND book.journal_article (AND (JOIN (R book.journal_publication.article) (JOIN book.journal_publication.journal m.0109_nr2)) (JOIN book.written_work.original_language m.02h40lc)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j5fqng",
                "entity_name": "Creativity and Cults from Sociological and Communication Perspectives: The Processes Involved in the Birth of a Secret Creative Self"
            }
        ],
        "Orgs_expression": "(AND book.journal_article (AND (JOIN (R book.journal_publication.article) (JOIN book.journal_publication.journal m.0109_nr2)) (JOIN book.written_work.original_language m.02h40lc)))",
        "Missing_KB_elements": [
            "F"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 3202704015000,
        "question": "which material shares the same class as grey iron?",
        "answer": [],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "engineering.material",
                    "class": "engineering.material",
                    "friendly_name": "Material",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "engineering.material",
                    "class": "engineering.material",
                    "friendly_name": "Material",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.07mh2g",
                    "class": "engineering.material",
                    "friendly_name": "grey iron",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "engineering.material.subclass",
                    "friendly_name": "Child material class"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "engineering.material.parent_material_class",
                    "friendly_name": "Parent material class"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :engineering.material . \n?x1 :type.object.type :engineering.material . \nVALUES ?x2 { :m.07mh2g } \n?x1 :engineering.material.subclass ?x0 . \n?x2 :engineering.material.parent_material_class ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "engineering"
        ],
        "s_expression": "(AND engineering.material (JOIN (R engineering.material.subclass) (JOIN (R engineering.material.parent_material_class) m.07mh2g)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04vtqt",
                "entity_name": "Ductile iron"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07mh3x",
                "entity_name": "Malleable iron"
            }
        ],
        "Orgs_expression": "(AND engineering.material (JOIN (R engineering.material.subclass) (JOIN (R engineering.material.parent_material_class) m.07mh2g)))",
        "Missing_KB_elements": [
            "F"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2100811010000,
        "question": "cleveland indians was the former name of what sports team?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "sports.sports_team",
                    "class": "sports.sports_team",
                    "friendly_name": "Sports Team",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01yhm",
                    "class": "sports.defunct_sports_team",
                    "friendly_name": "Cleveland Indians",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "sports.sports_team.previously_known_as",
                    "friendly_name": "Previously Known As"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.sports_team . \nVALUES ?x1 { :m.01yhm } \n?x0 :sports.sports_team.previously_known_as ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "sports"
        ],
        "s_expression": "(AND sports.sports_team (JOIN sports.sports_team.previously_known_as m.01yhm))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kmkc5",
                "entity_name": "Cleveland Naps"
            }
        ],
        "Orgs_expression": "(AND sports.sports_team (JOIN sports.sports_team.previously_known_as m.01yhm))",
        "Missing_KB_elements": [
            "E"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 2102927013000,
        "question": "the month of ashwin?] is in what calendar system?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "time.calendar",
                    "class": "time.calendar",
                    "friendly_name": "Calendar System",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0bmh0bh",
                    "class": "time.month",
                    "friendly_name": "Ashwin",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "time.calendar.months",
                    "friendly_name": "Months"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :time.calendar . \nVALUES ?x1 { :m.0bmh0bh } \n?x0 :time.calendar.months ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "time"
        ],
        "s_expression": "(AND time.calendar (JOIN time.calendar.months m.0bmh0bh))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05_5yxc",
                "entity_name": "Nepali calendar"
            }
        ],
        "Orgs_expression": "(AND time.calendar (JOIN time.calendar.months m.0bmh0bh))",
        "Missing_KB_elements": [
            "F"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 3204987000000,
        "question": "computers with amiga 4000t use what processor?",
        "answer": [],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.computer_processor",
                    "class": "computer.computer_processor",
                    "friendly_name": "Computer Processor",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "computer.computer",
                    "class": "computer.computer",
                    "friendly_name": "Computer",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0f8sp3",
                    "class": "computer.computer",
                    "friendly_name": "Amiga 4000T",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "computer.computer_processor.used_in_computers",
                    "friendly_name": "Used In Computers"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "computer.computer.includes_models",
                    "friendly_name": "Includes Models"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.computer_processor . \n?x1 :type.object.type :computer.computer . \nVALUES ?x2 { :m.0f8sp3 } \n?x0 :computer.computer_processor.used_in_computers ?x1 . \n?x1 :computer.computer.includes_models ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "computer"
        ],
        "s_expression": "(AND computer.computer_processor (JOIN computer.computer_processor.used_in_computers (JOIN computer.computer.includes_models m.0f8sp3)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.052vq",
                "entity_name": "Motorola 68000"
            }
        ],
        "Orgs_expression": "(AND computer.computer_processor (JOIN computer.computer_processor.used_in_computers (JOIN computer.computer.includes_models m.0f8sp3)))",
        "Missing_KB_elements": [
            "F"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 2100813004000,
        "question": "what is the name of the platform that directly followed the gm delta platform?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "automotive.platform",
                    "class": "automotive.platform",
                    "friendly_name": "Platform",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03kfwx",
                    "class": "automotive.platform",
                    "friendly_name": "GM Delta platform",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "automotive.platform.predecessor",
                    "friendly_name": "Predecessor"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :automotive.platform . \nVALUES ?x1 { :m.03kfwx } \n?x0 :automotive.platform.predecessor ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "automotive"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.043p06z",
                "entity_name": "Delta II platform"
            }
        ],
        "Orgs_expression": "(AND automotive.platform (JOIN automotive.platform.predecessor m.03kfwx))",
        "Missing_KB_elements": [
            "R"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2102720001000,
        "question": "lojban language has the conlang type of what?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "language.conlang_purpose",
                    "class": "language.conlang_purpose",
                    "friendly_name": "Conlang type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04gd7",
                    "class": "language.conlang",
                    "friendly_name": "lojban language",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "language.conlang_purpose.languages_of_this_type",
                    "friendly_name": "Languages of this type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :language.conlang_purpose . \nVALUES ?x1 { :m.04gd7 } \n?x0 :language.conlang_purpose.languages_of_this_type ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "language"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.030wpg",
                "entity_name": "Engineered language"
            }
        ],
        "Orgs_expression": "(AND language.conlang_purpose (JOIN language.conlang_purpose.languages_of_this_type m.04gd7))",
        "Missing_KB_elements": [
            "T",
            "E"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2102605002000,
        "question": "the thieves' world fictional shared universe featured which fictional material?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "fictional_universe.fictional_substance",
                    "class": "fictional_universe.fictional_substance",
                    "friendly_name": "Material in fiction",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0b_tw43",
                    "class": "fictional_universe.fictional_universe",
                    "friendly_name": "Thieves' World fictional shared universe",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "fictional_universe.fictional_substance.appears_in_fictional_universe",
                    "friendly_name": "Appears in Fictional Universe"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fictional_universe.fictional_substance . \nVALUES ?x1 { :m.0b_tw43 } \n?x0 :fictional_universe.fictional_substance.appears_in_fictional_universe ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "fictional_universe"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04tdh",
                "entity_name": "Marble"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ddt8qk",
                "entity_name": "Bandaran iron alloy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dg8dbd",
                "entity_name": "wood and sinew laminate"
            }
        ],
        "Orgs_expression": "(AND fictional_universe.fictional_substance (JOIN fictional_universe.fictional_substance.appears_in_fictional_universe m.0b_tw43))",
        "Missing_KB_elements": [
            "R"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 3204010013000,
        "question": "the universe of spider-man and captain america in doctor doom's revenge has what materials found in it?",
        "answer": [],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "fictional_universe.fictional_substance",
                    "class": "fictional_universe.fictional_substance",
                    "friendly_name": "Material in fiction",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "comic_books.comic_book_fictional_universe",
                    "class": "comic_books.comic_book_fictional_universe",
                    "friendly_name": "Comic Book Fictional Universe",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.036166",
                    "class": "fictional_universe.work_of_fiction",
                    "friendly_name": "Spider-Man and Captain America in Doctor Doom's Revenge",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "fictional_universe.fictional_substance.appears_in_fictional_universe",
                    "friendly_name": "Appears in Fictional Universe"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "fictional_universe.work_of_fiction.part_of_these_fictional_universes",
                    "friendly_name": "Part of fictional universes"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fictional_universe.fictional_substance . \n?x1 :type.object.type :comic_books.comic_book_fictional_universe . \nVALUES ?x2 { :m.036166 } \n?x0 :fictional_universe.fictional_substance.appears_in_fictional_universe ?x1 . \n?x2 :fictional_universe.work_of_fiction.part_of_these_fictional_universes ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "fictional_universe"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0817w",
                "entity_name": "Vibranium"
            }
        ],
        "Orgs_expression": "(AND fictional_universe.fictional_substance (JOIN fictional_universe.fictional_substance.appears_in_fictional_universe (JOIN (R fictional_universe.work_of_fiction.part_of_these_fictional_universes) m.036166)))",
        "Missing_KB_elements": [
            "R",
            "E"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 3201579001000,
        "question": "which dismissal type is the cricket roster batting dismissed by steve harmison?",
        "answer": [],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cricket.dismissal_type",
                    "class": "cricket.dismissal_type",
                    "friendly_name": "Dismissal Type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "cricket.cricket_roster_batting",
                    "class": "cricket.cricket_roster_batting",
                    "friendly_name": "Cricket Roster Batting",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03sqjy",
                    "class": "cricket.cricket_player",
                    "friendly_name": "Steve Harmison",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "cricket.cricket_roster_batting.dismissal_type",
                    "friendly_name": "Dismissal Type"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "cricket.cricket_roster_batting.dismissed_by",
                    "friendly_name": "Dismissed By"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cricket.dismissal_type . \n?x1 :type.object.type :cricket.cricket_roster_batting . \nVALUES ?x2 { :m.03sqjy } \n?x1 :cricket.cricket_roster_batting.dismissal_type ?x0 . \n?x1 :cricket.cricket_roster_batting.dismissed_by ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "cricket"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.040yp6",
                "entity_name": "Caught"
            }
        ],
        "Orgs_expression": "(AND cricket.dismissal_type (JOIN (R cricket.cricket_roster_batting.dismissal_type) (JOIN cricket.cricket_roster_batting.dismissed_by m.03sqjy)))",
        "Missing_KB_elements": [
            "T",
            "R"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 2100949014000,
        "question": "can you name the bottled water with a chloride measurement of 9.0?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "food.bottled_water",
                    "class": "food.bottled_water",
                    "friendly_name": "Bottled water",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "9.0^^http://www.w3.org/2001/XMLSchema#float",
                    "class": "type.float",
                    "friendly_name": "9.0",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "food.bottled_water.chloride_content",
                    "friendly_name": "Chloride (mg/l)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :food.bottled_water . \nVALUES ?x1 { \"9.0\"^^<http://www.w3.org/2001/XMLSchema#float> } \n?x0 :food.bottled_water.chloride_content ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "food"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qst50",
                "entity_name": "Brecon Carreg"
            }
        ],
        "Orgs_expression": "(AND food.bottled_water (JOIN food.bottled_water.chloride_content 9.0^^http://www.w3.org/2001/XMLSchema#float))",
        "Missing_KB_elements": [
            "R"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2100297004000,
        "question": "hellboy universe is the primary univers of which comic book character",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "comic_books.comic_book_character",
                    "class": "comic_books.comic_book_character",
                    "friendly_name": "Comic Book Character",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04cq58c",
                    "class": "comic_books.comic_book_fictional_universe",
                    "friendly_name": "Hellboy universe",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "comic_books.comic_book_character.primary_universe",
                    "friendly_name": "Primary Universe"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :comic_books.comic_book_character . \nVALUES ?x1 { :m.04cq58c } \n?x0 :comic_books.comic_book_character.primary_universe ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "comic_books"
        ],
        "s_expression": "(AND comic_books.comic_book_character (JOIN comic_books.comic_book_character.primary_universe m.04cq58c))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02jlyb",
                "entity_name": "Hellboy"
            }
        ],
        "Orgs_expression": "(AND comic_books.comic_book_character (JOIN comic_books.comic_book_character.primary_universe m.04cq58c))",
        "Missing_KB_elements": [
            "F"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 4304013015000,
        "question": "what isos from nikon corp. does nikon coolpix s700 support?",
        "answer": [],
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "digicams.camera_iso",
                    "class": "digicams.camera_iso",
                    "friendly_name": "Camera ISO Capability",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03q2q_4",
                    "class": "digicams.digital_camera",
                    "friendly_name": "Nikon Coolpix S700",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "digicams.digital_camera",
                    "class": "digicams.digital_camera",
                    "friendly_name": "Digital Camera",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.03pmfw",
                    "class": "digicams.camera_sensor_manufacturer",
                    "friendly_name": "nikon corp.",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "digicams.camera_iso.cameras",
                    "friendly_name": "Cameras"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "digicams.digital_camera.iso_setting",
                    "friendly_name": "ISO settings"
                },
                {
                    "start": 3,
                    "end": 2,
                    "relation": "digicams.camera_sensor_manufacturer.cameras",
                    "friendly_name": "Cameras"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :digicams.camera_iso . \nVALUES ?x1 { :m.03q2q_4 } \n?x2 :type.object.type :digicams.digital_camera . \nVALUES ?x3 { :m.03pmfw } \n?x0 :digicams.camera_iso.cameras ?x1 . \n?x2 :digicams.digital_camera.iso_setting ?x0 . \n?x3 :digicams.camera_sensor_manufacturer.cameras ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domains": [
            "digicams"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04l497s",
                "entity_name": "2000"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04nrl44",
                "entity_name": "160"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04nrl4h",
                "entity_name": "320"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04p7pwg",
                "entity_name": "130"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04pf295",
                "entity_name": "120"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_x",
                "entity_name": "100"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_g",
                "entity_name": "400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_p",
                "entity_name": "200"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrg4v",
                "entity_name": "3200"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrg51",
                "entity_name": "1600"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrg58",
                "entity_name": "800"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04npjzb",
                "entity_name": "1000"
            }
        ],
        "Orgs_expression": "(AND digicams.camera_iso (AND (JOIN digicams.camera_iso.cameras m.03q2q_4) (JOIN (R digicams.digital_camera.iso_setting) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.03pmfw))))",
        "Missing_KB_elements": [
            "T",
            "E"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2100097014000,
        "question": "efficacy and safety of spd417 in treatment of manic symptoms in adults with bipolar i disorder is in what type of medical trials?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.medical_trial_type",
                    "class": "medicine.medical_trial_type",
                    "friendly_name": "Medical trial type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04d1vdb",
                    "class": "medicine.medical_trial",
                    "friendly_name": "Efficacy and Safety of SPD417 in Treatment of Manic Symptoms in Adults With Bipolar I Disorder",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "medicine.medical_trial_type.medical_trials",
                    "friendly_name": "Medical trials"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_trial_type . \nVALUES ?x1 { :m.04d1vdb } \n?x0 :medicine.medical_trial_type.medical_trials ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "medicine"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03zbgdr",
                "entity_name": "Interventional"
            }
        ],
        "Orgs_expression": "(AND medicine.medical_trial_type (JOIN medicine.medical_trial_type.medical_trials m.04d1vdb))",
        "Missing_KB_elements": [
            "T"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 3200297003000,
        "question": "he kaw teh v the queen are classified in the same subject legal cases?",
        "answer": [],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "law.legal_case",
                    "class": "law.legal_case",
                    "friendly_name": "Legal case",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "law.legal_subject",
                    "class": "law.legal_subject",
                    "friendly_name": "Legal subject",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0r4w7s4",
                    "class": "law.legal_case",
                    "friendly_name": "He Kaw Teh v The Queen",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "law.legal_subject.legal_cases",
                    "friendly_name": "Legal cases"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "law.legal_case.subject",
                    "friendly_name": "Subject"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :law.legal_case . \n?x1 :type.object.type :law.legal_subject . \nVALUES ?x2 { :m.0r4w7s4 } \n?x1 :law.legal_subject.legal_cases ?x0 . \n?x2 :law.legal_case.subject ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "law"
        ],
        "s_expression": "(AND law.legal_case (JOIN (R law.legal_subject.legal_cases) (JOIN (R law.legal_case.subject) m.0r4w7s4)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02621v3",
                "entity_name": "Ewing v. California"
            }
        ],
        "Orgs_expression": "(AND law.legal_case (JOIN (R law.legal_subject.legal_cases) (JOIN (R law.legal_case.subject) m.0r4w7s4)))",
        "Missing_KB_elements": [
            "F"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 3201428007000,
        "question": "milky way galaxy is what kind of galactic interaction?",
        "answer": [],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.galactic_interaction_type",
                    "class": "astronomy.galactic_interaction_type",
                    "friendly_name": "Galactic interaction type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "astronomy.galactic_interaction",
                    "class": "astronomy.galactic_interaction",
                    "friendly_name": "Galactic interaction",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.07q38c",
                    "class": "astronomy.galaxy",
                    "friendly_name": "milky way galaxy",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.galactic_interaction_type.galaxy_s_interacting_this_way",
                    "friendly_name": "Galaxy's interacting this way"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "astronomy.galaxy.interaction",
                    "friendly_name": "Interaction"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.galactic_interaction_type . \n?x1 :type.object.type :astronomy.galactic_interaction . \nVALUES ?x2 { :m.07q38c } \n?x0 :astronomy.galactic_interaction_type.galaxy_s_interacting_this_way ?x1 . \n?x2 :astronomy.galaxy.interaction ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "astronomy"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cgl16t",
                "entity_name": "Galactic collision"
            }
        ],
        "Orgs_expression": "(AND astronomy.galactic_interaction_type (JOIN astronomy.galactic_interaction_type.galaxy_s_interacting_this_way (JOIN (R astronomy.galaxy.interaction) m.07q38c)))",
        "Missing_KB_elements": [
            "T"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 3200102009000,
        "question": "what medical trial is associated with a medical trial health authority with medical trials methadone effects on zidovudine (zdv, azt) disposition?",
        "answer": [],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.medical_trial",
                    "class": "medicine.medical_trial",
                    "friendly_name": "Medical trial",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "medicine.medical_trial_health_authority",
                    "class": "medicine.medical_trial_health_authority",
                    "friendly_name": "Medical trial health authority",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03zbbxg",
                    "class": "medicine.medical_trial",
                    "friendly_name": "Methadone Effects on Zidovudine (ZDV, AZT) Disposition",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "medicine.medical_trial.health_authority",
                    "friendly_name": "Health authority"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "medicine.medical_trial_health_authority.medical_trials",
                    "friendly_name": "Medical trials"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_trial . \n?x1 :type.object.type :medicine.medical_trial_health_authority . \nVALUES ?x2 { :m.03zbbxg } \n?x0 :medicine.medical_trial.health_authority ?x1 . \n?x1 :medicine.medical_trial_health_authority.medical_trials ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "medicine"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03zbbxm",
                "entity_name": "The Effects of Illnesses on HIV Levels in the Body"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03zbbvr",
                "entity_name": "Pharmacological Modulation of Cocaine Effects \u2013 1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03zbbw1",
                "entity_name": "Cocaine Effects in Humans: Physiology and Behavior \u2013 1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03zbbw_",
                "entity_name": "Postmenopausal Hormone Therapy in Unstable Angina"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03zbbwp",
                "entity_name": "Hypertension Prevention Trial (HPT) Feasibility Study"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03zbbwv",
                "entity_name": "Vitamin E and C to Slow Progression of Common Carotid Artery Plaque Build-up"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03zbbx4",
                "entity_name": "A Phase I Evaluation of Azidothymidine (AZT) in Children with Acquired Immune Deficiency Syndrome (AIDS) or AIDS Related Complex (ARC)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03zbbxs",
                "entity_name": "A Multi-Center Clinical Trial to Evaluate Azidothymidine (AZT) in the Treatment of Human Immunodeficiency Virus (HIV) Infection in Patients with AIDS Post First Episode PCP"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03zbbxy",
                "entity_name": "Phase II Trial of Sequential Chemotherapy and Radiotherapy for AIDS- Related Primary Central Nervous System Lymphoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03zbby2",
                "entity_name": "Safety and Effectiveness of Giving Indinavir Plus Stavudine Plus Lamivudine to HIV-Infected Children"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03zbby7",
                "entity_name": "A Study of Atvogen in Healthy Volunteers and HIV-Infected Patients Who Have No Symptoms of Infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03zbbyd",
                "entity_name": "A Phase III Study to Evaluate the Safety and Efficacy of Ganciclovir (Dihydroxypropoxymethyl Guanine [DHPG]) Treatment of Symptomatic Central Nervous System (CNS) Congenital Cytomegalovirus (CMV) Infections."
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03zbbyk",
                "entity_name": "A Study of Zidovudine in HIV-Infected Patients With Liver Disease"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04mnw6d",
                "entity_name": "Behavioral Insomnia Therapy With Chronic Fatigue Syndrome"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03zbbvx",
                "entity_name": "Feasibility Study of Take-Home LAAM Medication \u2013 3"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03zbbw6",
                "entity_name": "Rapid Evaluation of Amantadine for Treatment of Cocaine Abuse/Dependence \u2013 4"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04d1kq9",
                "entity_name": "Amoxicillin for the Treatment of Pediatric Autoimmune Disorders Associated With Streptococcal Infections"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03zbbvl",
                "entity_name": "Evaluation of Neuromuscular Disease"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04dhj52",
                "entity_name": "Role of Antibodies in Cognitive Dysfunction in Patients With Systemic Lupus Erythematosus"
            }
        ],
        "Orgs_expression": "(AND medicine.medical_trial (JOIN medicine.medical_trial.health_authority (JOIN medicine.medical_trial_health_authority.medical_trials m.03zbbxg)))",
        "Missing_KB_elements": [
            "T"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 3203002006000,
        "question": "what are the topics of the music videos that hammer and tongs directed?",
        "answer": [],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "music.music_video_subject",
                    "class": "music.music_video_subject",
                    "friendly_name": "Music video subject",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "music.music_video",
                    "class": "music.music_video",
                    "friendly_name": "Music video",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.05ln6z",
                    "class": "music.music_video_director",
                    "friendly_name": "hammer and tongs",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.music_video.music_video_subject",
                    "friendly_name": "Music video subject"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "music.music_video_director.music_videos_directed",
                    "friendly_name": "Music videos directed"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :music.music_video_subject . \n?x1 :type.object.type :music.music_video . \nVALUES ?x2 { :m.05ln6z } \n?x1 :music.music_video.music_video_subject ?x0 . \n?x2 :music.music_video_director.music_videos_directed ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "music"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0404n_",
                "entity_name": "Missing person"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.033rv2",
                "entity_name": "Carton"
            }
        ],
        "Orgs_expression": "(AND music.music_video_subject (JOIN (R music.music_video.music_video_subject) (JOIN (R music.music_video_director.music_videos_directed) m.05ln6z)))",
        "Missing_KB_elements": [
            "T"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 3201995009000,
        "question": "which periodical has a periodical subject that has the subject of black inches?",
        "answer": [],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "book.periodical",
                    "class": "book.periodical",
                    "friendly_name": "Periodical",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "book.periodical_subject",
                    "class": "book.periodical_subject",
                    "friendly_name": "Periodical Subject",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.04q8kvd",
                    "class": "book.periodical",
                    "friendly_name": "Black Inches",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "book.periodical_subject.periodicals",
                    "friendly_name": "Periodicals"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "book.periodical.subjects",
                    "friendly_name": "Subjects"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :book.periodical . \n?x1 :type.object.type :book.periodical_subject . \nVALUES ?x2 { :m.04q8kvd } \n?x1 :book.periodical_subject.periodicals ?x0 . \n?x2 :book.periodical.subjects ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "book"
        ],
        "s_expression": "(AND book.periodical (JOIN (R book.periodical_subject.periodicals) (JOIN (R book.periodical.subjects) m.04q8kvd)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0279nzc",
                "entity_name": "Sh\u014dnen Ai no Bigaku"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cqvz_",
                "entity_name": "Mandate"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_yp9",
                "entity_name": "The Advocate"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0200b_",
                "entity_name": "Out"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0277y08",
                "entity_name": "Destroyer Magazine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02y189",
                "entity_name": "Curve"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01066sbz",
                "entity_name": "Velvetpark"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pxfgw",
                "entity_name": "Huriyah"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08yqqz",
                "entity_name": "Hero"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09fyy9",
                "entity_name": "YGA"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03wcx55",
                "entity_name": "Vice Versa"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02dyrz",
                "entity_name": "Blue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.087k74",
                "entity_name": "Expreszo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025z_wt",
                "entity_name": "ENOLA"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r_15f",
                "entity_name": "Gai pied"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026mc70",
                "entity_name": "PREF mag"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06w8br8",
                "entity_name": "g3"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.079b8j",
                "entity_name": "Outcast"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qs0h5",
                "entity_name": "Wrapped"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03cqlfg",
                "entity_name": "Fusion Magazine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rvv5m",
                "entity_name": "G Magazine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027n0ht",
                "entity_name": "AXM"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.043s2rd",
                "entity_name": "Fitlads"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04q2sk1",
                "entity_name": "Homocore"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g_7_5",
                "entity_name": "Bent"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05444r",
                "entity_name": "The Body Politic"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09g5sp",
                "entity_name": "Genre"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.080933",
                "entity_name": "Journal of Homosexuality"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ptj2",
                "entity_name": "On Our Backs"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04m_dx7",
                "entity_name": "Noizemag"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03hp8gm",
                "entity_name": "Der Eigene"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026kh9n",
                "entity_name": "Chroma: A Queer Literary Journal"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0855kw",
                "entity_name": "Next Magazine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dd591",
                "entity_name": "Wayves"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03y8s75",
                "entity_name": "Conditions"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fbpjf",
                "entity_name": "My Comrade"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09p73m",
                "entity_name": "The Pillar"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04y8sgq",
                "entity_name": "Gay"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.047fhqk",
                "entity_name": "OHM"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026x8r_",
                "entity_name": "G&Y"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010bz0th",
                "entity_name": "Gay Star"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09hsqf",
                "entity_name": "David Atlanta"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c35w4",
                "entity_name": "QSaltLake"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.076_z_w",
                "entity_name": "Just Us Boys"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.050hfl",
                "entity_name": "fab"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03d8ks_",
                "entity_name": "Fyne Times"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026v415",
                "entity_name": "Gay Community News"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07lnn0",
                "entity_name": "Lavender"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0288yxd",
                "entity_name": "Transsexual News Telegraph"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.075028",
                "entity_name": "Bound & Gagged"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0531b9",
                "entity_name": "Attitude"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cch54",
                "entity_name": "RFD"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010907_d",
                "entity_name": "Gay Left"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cn06w",
                "entity_name": "QX"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0404xsz",
                "entity_name": "Butt"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07tty5",
                "entity_name": "Diva"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01_tzs",
                "entity_name": "XY"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.060wlt",
                "entity_name": "Anything That Moves"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02dkz2",
                "entity_name": "Badi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.058kb5",
                "entity_name": "Outlooks"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025_cpw",
                "entity_name": "Switch"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ghsnz",
                "entity_name": "ON Magazine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.076_ywd",
                "entity_name": "Latin inches"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.092hwf",
                "entity_name": "MetroSource"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05rmzx",
                "entity_name": "Frontiers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.043slv6",
                "entity_name": "Amazones d'Hier, Lesbiennes d'Aujourd'hui"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dd5b2",
                "entity_name": "Rites"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.066bsv",
                "entity_name": "Bi Community News"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z4cf0",
                "entity_name": "Sinister Wisdom"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z77zx",
                "entity_name": "Out in Canada"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.076_z5h",
                "entity_name": "Unzipped"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pv7w6",
                "entity_name": "Zero"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03j5hy",
                "entity_name": "Gay Times"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r_2bx",
                "entity_name": "Illico"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07xmnx",
                "entity_name": "Instinct"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074nyc",
                "entity_name": "QX"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.093pt1",
                "entity_name": "The Ladder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03d5qwx",
                "entity_name": "Pinups Magazine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.076_x3p",
                "entity_name": "All-Boy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pllqn",
                "entity_name": "GO"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.076_x64",
                "entity_name": "Badpuppy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0464h75",
                "entity_name": "Gemma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.058k8q",
                "entity_name": "Siren"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074qbh",
                "entity_name": "OutWords"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04q0fnl",
                "entity_name": "GayCalgary Magazine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025_ffs",
                "entity_name": "DNA"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02dkx_",
                "entity_name": "G-men"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09zwcw",
                "entity_name": "Metro Weekly"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04wxn1",
                "entity_name": "Lesbian Connection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09lj95",
                "entity_name": "ScotsGay"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cr8j4",
                "entity_name": "Straight"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03hn5vs",
                "entity_name": "BLK"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025zz54",
                "entity_name": "Inklusiv"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04z_z6h",
                "entity_name": "Kvir"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.076_y8d",
                "entity_name": "Inches"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f5t66",
                "entity_name": "UP magazine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.058k0_",
                "entity_name": "Fugues"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09pqyd",
                "entity_name": "Girlfriends"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g4s55",
                "entity_name": "Christopher Street"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.062r_v",
                "entity_name": "To Be"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03y4kgx",
                "entity_name": "Azalea: A Magazine by Third World Lesbians"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d145j",
                "entity_name": "OutWeek"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c0mv_",
                "entity_name": "Otoko-machi Map"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027pmhr",
                "entity_name": "Freshmen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05v6m2",
                "entity_name": "Blueboy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02df2m",
                "entity_name": "Barazoku"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bs9y4",
                "entity_name": "Gay Humanist Quarterly"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025syql",
                "entity_name": "White Crane"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064q1sz",
                "entity_name": "Odyssey Magazine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.047p4t5",
                "entity_name": "Bnews"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.084_wj",
                "entity_name": "Men"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ds6c",
                "entity_name": "Samson"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g5r9r",
                "entity_name": "After Dark"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07fvkx",
                "entity_name": "abOUT"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027zgy9",
                "entity_name": "Bear Magazine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.076_ywp",
                "entity_name": "Torso"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g8_gk",
                "entity_name": "Playguy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010bz0tz",
                "entity_name": "upstart"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02prt4x",
                "entity_name": "Angelicuss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02vn7z9",
                "entity_name": "Arena Three"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027k8rm",
                "entity_name": "Boyz"
            }
        ],
        "Orgs_expression": "(AND book.periodical (JOIN (R book.periodical_subject.periodicals) (JOIN (R book.periodical.subjects) m.04q8kvd)))",
        "Missing_KB_elements": [
            "F"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2102881009000,
        "question": "new frontiers program was sponsored by what space program?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.space_program_sponsor",
                    "class": "spaceflight.space_program_sponsor",
                    "friendly_name": "Space program sponsor",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0bf6fc",
                    "class": "spaceflight.space_program",
                    "friendly_name": "New Frontiers program",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "spaceflight.space_program_sponsor.space_programs_sponsored",
                    "friendly_name": "Space programs sponsored"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.space_program_sponsor . \nVALUES ?x1 { :m.0bf6fc } \n?x0 :spaceflight.space_program_sponsor.space_programs_sponsored ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "spaceflight"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05f4p",
                "entity_name": "NASA"
            }
        ],
        "Orgs_expression": "(AND spaceflight.space_program_sponsor (JOIN spaceflight.space_program_sponsor.space_programs_sponsored m.0bf6fc))",
        "Missing_KB_elements": [
            "T"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2101540008000,
        "question": "name a dissertation which must be written to earn a b tech degree.",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "education.dissertation",
                    "class": "education.dissertation",
                    "friendly_name": "Dissertation",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02b_jf",
                    "class": "education.educational_degree",
                    "friendly_name": "b tech",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "education.dissertation.degree",
                    "friendly_name": "Degree"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :education.dissertation . \nVALUES ?x1 { :m.02b_jf } \n?x0 :education.dissertation.degree ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "education"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_w6pq",
                "entity_name": "Process Migration in Clusters"
            }
        ],
        "Orgs_expression": "(AND education.dissertation (JOIN education.dissertation.degree m.02b_jf))",
        "Missing_KB_elements": [
            "E"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 3203260001000,
        "question": "what sports league draft does texas state university - san marcos have?",
        "answer": [],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "sports.sports_league_draft",
                    "class": "sports.sports_league_draft",
                    "friendly_name": "Sports League Draft",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "sports.sports_league_draft_pick",
                    "class": "sports.sports_league_draft_pick",
                    "friendly_name": "Sports League Draft Pick",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01sj9x",
                    "class": "education.university",
                    "friendly_name": "texas state university - san marcos",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "sports.sports_league_draft.picks",
                    "friendly_name": "Picks"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "sports.sports_league_draft_pick.school",
                    "friendly_name": "School/Institution"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.sports_league_draft . \n?x1 :type.object.type :sports.sports_league_draft_pick . \nVALUES ?x2 { :m.01sj9x } \n?x0 :sports.sports_league_draft.picks ?x1 . \n?x1 :sports.sports_league_draft_pick.school ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "sports"
        ],
        "s_expression": "(AND sports.sports_league_draft (JOIN sports.sports_league_draft.picks (JOIN sports.sports_league_draft_pick.school m.01sj9x)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04c0l3",
                "entity_name": "1999 NBA draft"
            }
        ],
        "Orgs_expression": "(AND sports.sports_league_draft (JOIN sports.sports_league_draft.picks (JOIN sports.sports_league_draft_pick.school m.01sj9x)))",
        "Missing_KB_elements": [
            "E"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 2101643007000,
        "question": "what government permit type is a haitian passport?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "government.government_permit_type",
                    "class": "government.government_permit_type",
                    "friendly_name": "Government Permit Type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03m45vx",
                    "class": "government.government_issued_permit",
                    "friendly_name": "Haitian passport",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "government.government_permit_type.permit",
                    "friendly_name": "Permit"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :government.government_permit_type . \nVALUES ?x1 { :m.03m45vx } \n?x0 :government.government_permit_type.permit ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "government"
        ],
        "s_expression": "(AND government.government_permit_type (JOIN government.government_permit_type.permit m.03m45vx))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05sv1",
                "entity_name": "Passport"
            }
        ],
        "Orgs_expression": "(AND government.government_permit_type (JOIN government.government_permit_type.permit m.03m45vx))",
        "Missing_KB_elements": [
            "F"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 3203973004000,
        "question": "which historical figures established the religion associated with sringeri sharada peetham?",
        "answer": [],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "religion.founding_figure",
                    "class": "religion.founding_figure",
                    "friendly_name": "Founding Figure",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "religion.religion",
                    "class": "religion.religion",
                    "friendly_name": "Religion",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.06_wzv",
                    "class": "religion.monastery",
                    "friendly_name": "Sringeri Sharada Peetham",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "religion.founding_figure.religion_founded",
                    "friendly_name": "Religion Founded"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "religion.monastery.religion",
                    "friendly_name": "Religion"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.founding_figure . \n?x1 :type.object.type :religion.religion . \nVALUES ?x2 { :m.06_wzv } \n?x0 :religion.founding_figure.religion_founded ?x1 . \n?x2 :religion.monastery.religion ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "religion"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "g.11bc14_6yq",
                "entity_name": "null"
            }
        ],
        "Orgs_expression": "(AND religion.founding_figure (JOIN religion.founding_figure.religion_founded (JOIN (R religion.monastery.religion) m.06_wzv)))",
        "Missing_KB_elements": [
            "R"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 2102740000000,
        "question": "nikon coolpix p3 has what format?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "digicams.camera_format",
                    "class": "digicams.camera_format",
                    "friendly_name": "Camera Format",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "g.120wrm3w",
                    "class": "digicams.digital_camera",
                    "friendly_name": "Nikon Coolpix P3",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "digicams.camera_format.cameras",
                    "friendly_name": "Cameras"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :digicams.camera_format . \nVALUES ?x1 { :g.120wrm3w } \n?x0 :digicams.camera_format.cameras ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "digicams"
        ],
        "s_expression": "(AND digicams.camera_format (JOIN digicams.camera_format.cameras g.120wrm3w))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrfxm",
                "entity_name": "Compact"
            }
        ],
        "Orgs_expression": "(AND digicams.camera_format (JOIN digicams.camera_format.cameras g.120wrm3w))",
        "Missing_KB_elements": [
            "E"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2101536000000,
        "question": "what's the name of the file format that was created on 07/10/2007?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.file_format",
                    "class": "computer.file_format",
                    "friendly_name": "File Format",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "2007-07-10^^http://www.w3.org/2001/XMLSchema#date",
                    "class": "type.datetime",
                    "friendly_name": "07/10/2007",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "computer.file_format.creation_date",
                    "friendly_name": "Creation Date"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.file_format . \nVALUES ?x1 { \"2007-07-10-08:00\"^^<http://www.w3.org/2001/XMLSchema#date> } \n?x0 :computer.file_format.creation_date ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "computer"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0600q",
                "entity_name": "Portable Document Format"
            }
        ],
        "Orgs_expression": "(AND computer.file_format (JOIN computer.file_format.creation_date 2007-07-10^^http://www.w3.org/2001/XMLSchema#date))",
        "Missing_KB_elements": [
            "R"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 4301780004000,
        "question": "who was the designer of the roller coaster that had an accident after 2004-07-13?",
        "answer": [],
        "function": ">=",
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.ride_designer",
                    "class": "amusement_parks.ride_designer",
                    "friendly_name": "Amusement Ride Designer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.roller_coaster",
                    "class": "amusement_parks.roller_coaster",
                    "friendly_name": "Roller Coaster",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "amusement_parks.accident",
                    "class": "amusement_parks.accident",
                    "friendly_name": "Amusement Ride Accident",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "2004-07-13^^http://www.w3.org/2001/XMLSchema#date",
                    "class": "type.datetime",
                    "friendly_name": "2004-07-13",
                    "question_node": 0,
                    "function": ">="
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.ride_designer.rides",
                    "friendly_name": "Rides Designed"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "amusement_parks.accident.ride",
                    "friendly_name": "Ride"
                },
                {
                    "start": 2,
                    "end": 3,
                    "relation": "amusement_parks.accident.date",
                    "friendly_name": "Date"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.ride_designer . \n?x1 :type.object.type :amusement_parks.roller_coaster . \n?x2 :type.object.type :amusement_parks.accident . \nFILTER (?x3 >= \"2004-07-13-08:00\"^^<http://www.w3.org/2001/XMLSchema#date>)\n?x0 :amusement_parks.ride_designer.rides ?x1 . \n?x2 :amusement_parks.accident.ride ?x1 . \n?x2 :amusement_parks.accident.date ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domains": [
            "amusement_parks"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04gvyp",
                "entity_name": "Walt Disney Imagineering"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06vnh2",
                "entity_name": "Werner Stengel"
            }
        ],
        "Orgs_expression": "(AND amusement_parks.ride_designer (JOIN amusement_parks.ride_designer.rides (JOIN (R amusement_parks.accident.ride) (ge amusement_parks.accident.date 2004-07-13^^http://www.w3.org/2001/XMLSchema#date))))",
        "Missing_KB_elements": [
            "R"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 2100091025000,
        "question": "the medical trials on alendronate and/or parathyroid hormone for osteoporosis is authorized by whom?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.medical_trial_health_authority",
                    "class": "medicine.medical_trial_health_authority",
                    "friendly_name": "Medical trial health authority",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03zbbwc",
                    "class": "medicine.medical_trial",
                    "friendly_name": "Alendronate and/or Parathyroid Hormone for Osteoporosis",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "medicine.medical_trial_health_authority.medical_trials",
                    "friendly_name": "Medical trials"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_trial_health_authority . \nVALUES ?x1 { :m.03zbbwc } \n?x0 :medicine.medical_trial_health_authority.medical_trials ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "medicine"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.032mx",
                "entity_name": "Food and Drug Administration"
            }
        ],
        "Orgs_expression": "(AND medicine.medical_trial_health_authority (JOIN medicine.medical_trial_health_authority.medical_trials m.03zbbwc))",
        "Missing_KB_elements": [
            "T"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 3204805005000,
        "question": "johns hopkins university sponsors which types of medical trials?",
        "answer": [],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.medical_trial_type",
                    "class": "medicine.medical_trial_type",
                    "friendly_name": "Medical trial type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "medicine.medical_trial",
                    "class": "medicine.medical_trial",
                    "friendly_name": "Medical trial",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.09kvv",
                    "class": "medicine.medical_trial_sponsor",
                    "friendly_name": "Johns Hopkins University",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "medicine.medical_trial_type.medical_trials",
                    "friendly_name": "Medical trials"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "medicine.medical_trial.sponsor",
                    "friendly_name": "Sponsor"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_trial_type . \n?x1 :type.object.type :medicine.medical_trial . \nVALUES ?x2 { :m.09kvv } \n?x0 :medicine.medical_trial_type.medical_trials ?x1 . \n?x1 :medicine.medical_trial.sponsor ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "medicine"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03zbgdr",
                "entity_name": "Interventional"
            }
        ],
        "Orgs_expression": "(AND medicine.medical_trial_type (JOIN medicine.medical_trial_type.medical_trials (JOIN medicine.medical_trial.sponsor m.09kvv)))",
        "Missing_KB_elements": [
            "T"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 2100044007000,
        "question": "the radio format of wqrw is what?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "broadcast.radio_format",
                    "class": "broadcast.radio_format",
                    "friendly_name": "Radio format",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03nxkqd",
                    "class": "broadcast.radio_station",
                    "friendly_name": "WQRW",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "broadcast.radio_format.stations",
                    "friendly_name": "Stations"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :broadcast.radio_format . \nVALUES ?x1 { :m.03nxkqd } \n?x0 :broadcast.radio_format.stations ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "broadcast"
        ],
        "level": "zero-shot",
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02vjzr",
                "entity_name": "Adult contemporary music"
            }
        ],
        "Orgs_expression": "(AND broadcast.radio_format (JOIN broadcast.radio_format.stations m.03nxkqd))",
        "Missing_KB_elements": [
            "E"
        ]
    },
    {
        "qid": 2101692014000,
        "question": "the domains bi is found in which top level domain type?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "internet.top_level_domain_type",
                    "class": "internet.top_level_domain_type",
                    "friendly_name": "Top Level Domain Type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03y23q",
                    "class": "internet.top_level_domain",
                    "friendly_name": "bi",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "internet.top_level_domain_type.domains",
                    "friendly_name": "Domains"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :internet.top_level_domain_type . \nVALUES ?x1 { :m.03y23q } \n?x0 :internet.top_level_domain_type.domains ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "internet"
        ],
        "s_expression": "(AND internet.top_level_domain_type (JOIN internet.top_level_domain_type.domains m.03y23q))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03xvw1",
                "entity_name": "Country code top-level domain"
            }
        ],
        "Orgs_expression": "(AND internet.top_level_domain_type (JOIN internet.top_level_domain_type.domains m.03y23q))",
        "Missing_KB_elements": [
            "E"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2101715006000,
        "question": "2010 fifa world cup group a - fra ./. rsa was part of which football pitch?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "soccer.football_pitch",
                    "class": "soccer.football_pitch",
                    "friendly_name": "Football Pitch",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0c43z5k",
                    "class": "soccer.football_match",
                    "friendly_name": "2010 FIFA World Cup Group A - FRA ./. RSA",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "soccer.football_pitch.matches",
                    "friendly_name": "Matches"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :soccer.football_pitch . \nVALUES ?x1 { :m.0c43z5k } \n?x0 :soccer.football_pitch.matches ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "soccer"
        ],
        "s_expression": "(AND soccer.football_pitch (JOIN soccer.football_pitch.matches m.0c43z5k))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07dg6t",
                "entity_name": "Free State Stadium"
            }
        ],
        "Orgs_expression": "(AND soccer.football_pitch (JOIN soccer.football_pitch.matches m.0c43z5k))",
        "Missing_KB_elements": [
            "F"
        ],
        "level": "zero-shot"
    },
    {
        "qid": 2102527014000,
        "question": "what team won the 1972 nba finals?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "sports.sports_team",
                    "class": "sports.sports_team",
                    "friendly_name": "Sports Team",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0cs1ny",
                    "class": "sports.sports_championship_event",
                    "friendly_name": "1972 NBA Finals",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "sports.sports_team.championships",
                    "friendly_name": "Championships"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.sports_team . \nVALUES ?x1 { :m.0cs1ny } \n?x0 :sports.sports_team.championships ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "sports"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jmk7",
                "entity_name": "Los Angeles Lakers"
            }
        ],
        "Orgs_expression": "(AND sports.sports_team (JOIN sports.sports_team.championships m.0cs1ny))",
        "Missing_KB_elements": [
            "E"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2100254005000,
        "question": "where is the work excerpt of the homeric hymns?",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "book.excerpt",
                    "class": "book.excerpt",
                    "friendly_name": "Excerpt",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0zmb844",
                    "class": "book.excerpted_work",
                    "friendly_name": "The Homeric hymns",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "book.excerpt.work_excerpted",
                    "friendly_name": "Work Excerpted"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :book.excerpt . \nVALUES ?x1 { :m.0zmb844 } \n?x0 :book.excerpt.work_excerpted ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "book"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqqzk8",
                "entity_name": "Hymns to Aphrodite"
            }
        ],
        "Orgs_expression": "(AND book.excerpt (JOIN book.excerpt.work_excerpted m.0zmb844))",
        "Missing_KB_elements": [
            "T"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 2100268011000,
        "question": "find tournaments that have women's 400m freestyle",
        "answer": [],
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "sports.tournament_event_competition",
                    "class": "sports.tournament_event_competition",
                    "friendly_name": "Tournament event competition",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0j_sc17",
                    "class": "sports.tournament_event",
                    "friendly_name": "Women's 400m freestyle",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "sports.tournament_event_competition.event",
                    "friendly_name": "Event"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.tournament_event_competition . \nVALUES ?x1 { :m.0j_sc17 } \n?x0 :sports.tournament_event_competition.event ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domains": [
            "sports"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06610_b",
                "entity_name": "Swimming at the 2003 Pan American Games \u2013 Women's 400 meter freestyle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.065nf0t",
                "entity_name": "Swimming at the 2009 Mediterranean Games - Women's 400 metre freestyle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06znh92",
                "entity_name": "Swimming at the 2009 World Aquatics Championships \u2013 Women's 400 metre freestyle"
            }
        ],
        "Orgs_expression": "(AND sports.tournament_event_competition (JOIN sports.tournament_event_competition.event m.0j_sc17))",
        "Missing_KB_elements": [
            "E"
        ],
        "level": "i.i.d."
    },
    {
        "qid": 3204160012000,
        "question": "what tv song does sia furler sing?",
        "answer": [],
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "tv.tv_song",
                    "class": "tv.tv_song",
                    "friendly_name": "TV song",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "tv.tv_episode_song_relationship",
                    "class": "tv.tv_episode_song_relationship",
                    "friendly_name": "TV episode song relationship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03ks26",
                    "class": "tv.tv_song_performer",
                    "friendly_name": "Sia Furler",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "tv.tv_episode_song_relationship.song",
                    "friendly_name": "Song"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "tv.tv_song_performer.episodes",
                    "friendly_name": "Episodes"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :tv.tv_song . \n?x1 :type.object.type :tv.tv_episode_song_relationship . \nVALUES ?x2 { :m.03ks26 } \n?x1 :tv.tv_episode_song_relationship.song ?x0 . \n?x2 :tv.tv_song_performer.episodes ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domains": [
            "tv"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yf9z4",
                "entity_name": "Chandelier"
            }
        ],
        "Orgs_expression": "(AND tv.tv_song (JOIN (R tv.tv_episode_song_relationship.song) (JOIN (R tv.tv_song_performer.episodes) m.03ks26)))",
        "Missing_KB_elements": [
            "E"
        ],
        "level": "zero-shot"
    }
]