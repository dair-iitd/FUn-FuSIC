[
    {
        "qid": 466000200,
        "question": "who manufactures the macintosh computer's processor?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0537b",
                "entity_name": "Motorola"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03s7h",
                "entity_name": "Intel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03sc8",
                "entity_name": "IBM"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02g98s",
                "entity_name": "Freescale Semiconductor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01dgmy",
                "entity_name": "VIA Technologies"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.processor_manufacturer",
                    "class": "computer.processor_manufacturer",
                    "friendly_name": "Processor Manufacturer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "computer.computer_processor",
                    "class": "computer.computer_processor",
                    "friendly_name": "Computer Processor",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0zd6",
                    "class": "computer.computer",
                    "friendly_name": "Macintosh",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "computer.computer_processor.manufacturers",
                    "friendly_name": "Manufacturers"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "computer.computer.processor",
                    "friendly_name": "Processor"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.processor_manufacturer . \n?x1 :type.object.type :computer.computer_processor . \nVALUES ?x2 { :m.0zd6 } \n?x1 :computer.computer_processor.manufacturers ?x0 . \n?x2 :computer.computer.processor ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "computer"
        ],
        "s_expression": "(AND computer.processor_manufacturer (JOIN (R computer.computer_processor.manufacturers) (JOIN (R computer.computer.processor) m.0zd6)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0537b",
                "entity_name": "Motorola"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0z64",
                "entity_name": "Advanced Micro Devices"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03s7h",
                "entity_name": "Intel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03sc8",
                "entity_name": "IBM"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02g98s",
                "entity_name": "Freescale Semiconductor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01dgmy",
                "entity_name": "VIA Technologies"
            }
        ]
    },
    {
        "qid": 354000001,
        "question": "which competition events occurred in new york?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yhp9s",
                "entity_name": "Miss India Worldwide 1996"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0by1f9w",
                "entity_name": "Miss USA 1973"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bxzv0v",
                "entity_name": "Miss USA 1971"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yn8mg",
                "entity_name": "Miss India Worldwide 1994"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b75dnh",
                "entity_name": "Miss Dominican Republic US 2009"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "award.competition",
                    "class": "award.competition",
                    "friendly_name": "Competition",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02_286",
                    "class": "location.dated_location",
                    "friendly_name": "new york",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.events",
                    "friendly_name": "Events"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :award.competition . \nVALUES ?x1 { :m.02_286 } \n?x1 :location.location.events ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "location"
        ],
        "s_expression": "(AND award.competition (JOIN (R location.location.events) m.02_286))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yhp9s",
                "entity_name": "Miss India Worldwide 1996"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0by1f9w",
                "entity_name": "Miss USA 1973"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bxzv0v",
                "entity_name": "Miss USA 1971"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yn8mg",
                "entity_name": "Miss India Worldwide 1994"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b75dnh",
                "entity_name": "Miss Dominican Republic US 2009"
            }
        ]
    },
    {
        "qid": 335000102,
        "question": "find courts that have immediate jurisdiction over the united states.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07sz1",
                "entity_name": "Supreme Court of the United States"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "law.court",
                    "class": "law.court",
                    "friendly_name": "Court",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.09c7w0",
                    "class": "law.court_jurisdiction_area",
                    "friendly_name": "united states",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "law.court_jurisdiction_area.courts",
                    "friendly_name": "Courts"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :law.court . \nVALUES ?x1 { :m.09c7w0 } \n?x1 :law.court_jurisdiction_area.courts ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "law"
        ],
        "s_expression": "(AND law.court (JOIN (R law.court_jurisdiction_area.courts) m.09c7w0))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07sz1",
                "entity_name": "Supreme Court of the United States"
            }
        ]
    },
    {
        "qid": 405000302,
        "question": "what is the darkest asteroid discovered by mount palomar observatory?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03wbdpm",
                "entity_name": "5126 Achaemenides"
            }
        ],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.asteroid",
                    "class": "astronomy.asteroid",
                    "friendly_name": "Asteroid",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.022tzk",
                    "class": "astronomy.astronomical_observatory",
                    "friendly_name": "mount palomar observatory",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.astronomical_discovery.discovery_site",
                    "friendly_name": "Discovery Site"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "astronomy.celestial_object.absolute_magnitude",
                    "friendly_name": "Absolute Magnitude"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.asteroid . \nVALUES ?x1 { :m.022tzk } \n{\nSELECT (MIN(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :astronomy.asteroid . \nVALUES ?y1 { :m.022tzk } \n?y0 :astronomy.astronomical_discovery.discovery_site ?y1 . \n?y0 :astronomy.celestial_object.absolute_magnitude ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x0 :astronomy.astronomical_discovery.discovery_site ?x1 . \n?x0 :astronomy.celestial_object.absolute_magnitude ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "(ARGMIN (AND astronomy.asteroid (JOIN astronomy.astronomical_discovery.discovery_site m.022tzk)) astronomy.celestial_object.absolute_magnitude)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03y7w1p",
                "entity_name": "5284 Orsilocus"
            }
        ]
    },
    {
        "qid": 314000300,
        "question": "can you give the number of cameras produced by hewlett-packard?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5",
                "entity_name": "5"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "digicams.digital_camera",
                    "class": "digicams.digital_camera",
                    "friendly_name": "Digital Camera",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03mnk",
                    "class": "digicams.digital_camera_manufacturer",
                    "friendly_name": "Hewlett-Packard",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "digicams.digital_camera_manufacturer.cameras",
                    "friendly_name": "Cameras"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :digicams.digital_camera . \nVALUES ?x1 { :m.03mnk } \n?x1 :digicams.digital_camera_manufacturer.cameras ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "digicams"
        ],
        "s_expression": "(COUNT (AND digicams.digital_camera (JOIN (R digicams.digital_camera_manufacturer.cameras) m.03mnk)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "7"
            }
        ]
    },
    {
        "qid": 326000201,
        "question": "how many releases has get yer ya-ya's out had?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "11",
                "entity_name": "11"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "music.release",
                    "class": "music.release",
                    "friendly_name": "Musical Release",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01hmywl",
                    "class": "music.live_album",
                    "friendly_name": "get yer ya-ya's out",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.album.releases",
                    "friendly_name": "Releases"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :music.release . \nVALUES ?x1 { :m.01hmywl } \n?x1 :music.album.releases ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "music"
        ],
        "s_expression": "(COUNT (AND music.release (JOIN (R music.album.releases) m.01hmywl)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "11"
            }
        ]
    },
    {
        "qid": 303000400,
        "question": "what disability did franklin d. roosevelt have?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0251gx",
                "entity_name": "Paraplegia"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.qualia.type_of_disability",
                    "class": "base.qualia.type_of_disability",
                    "friendly_name": "Type of disability",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02yy8",
                    "class": "base.qualia.disabled_person",
                    "friendly_name": "Franklin D. Roosevelt",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.qualia.disabled_person.type_of_disability",
                    "friendly_name": "Type of disability"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.qualia.type_of_disability . \nVALUES ?x1 { :m.02yy8 } \n?x1 :base.qualia.disabled_person.type_of_disability ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.qualia.type_of_disability (JOIN (R base.qualia.disabled_person.type_of_disability) m.02yy8))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0251gx",
                "entity_name": "Paraplegia"
            }
        ]
    },
    {
        "qid": 305000000,
        "question": "which presidents of the united states weigh not less than 80.0 kg?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02mjmr",
                "entity_name": "Barack Obama"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09b6zr",
                "entity_name": "George W. Bush"
            }
        ],
        "function": ">=",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "government.us_president",
                    "class": "government.us_president",
                    "friendly_name": "US President",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "80.0^^http://www.w3.org/2001/XMLSchema#double",
                    "class": "type.float",
                    "friendly_name": "80.0",
                    "question_node": 0,
                    "function": ">="
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.person.weight_kg",
                    "friendly_name": "Weight"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :government.us_president . \nFILTER (?x1 >= \"80.0\"^^<http://www.w3.org/2001/XMLSchema#double>)\n?x0 :people.person.weight_kg ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "people"
        ],
        "s_expression": "(AND government.us_president (ge people.person.weight_kg 80.0^^http://www.w3.org/2001/XMLSchema#double))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02mjmr",
                "entity_name": "Barack Obama"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09b6zr",
                "entity_name": "George W. Bush"
            }
        ]
    },
    {
        "qid": 471000201,
        "question": "find bordering constellations of scorpio.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04h36",
                "entity_name": "Libra"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.019d34",
                "entity_name": "Norma"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.constellation",
                    "class": "astronomy.constellation",
                    "friendly_name": "Constellation",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "astronomy.constellation_bordering_relationship",
                    "class": "astronomy.constellation_bordering_relationship",
                    "friendly_name": "Constellation bordering relationship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.06pgz",
                    "class": "astronomy.constellation",
                    "friendly_name": "scorpio",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "astronomy.constellation_bordering_relationship.constellations",
                    "friendly_name": "Constellations"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "astronomy.constellation_bordering_relationship.constellations",
                    "friendly_name": "Constellations"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.constellation . \n?x1 :type.object.type :astronomy.constellation_bordering_relationship . \nVALUES ?x2 { :m.06pgz } \n?x1 :astronomy.constellation_bordering_relationship.constellations ?x0 . \n?x1 :astronomy.constellation_bordering_relationship.constellations ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "(AND astronomy.constellation (JOIN (R astronomy.constellation_bordering_relationship.constellations) (JOIN astronomy.constellation_bordering_relationship.constellations m.06pgz)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04h36",
                "entity_name": "Libra"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01wvl",
                "entity_name": "Corona Australis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0v9n",
                "entity_name": "Ara"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05mhq",
                "entity_name": "Ophiuchus"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.019d34",
                "entity_name": "Norma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ls0",
                "entity_name": "Lupus"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06pgg",
                "entity_name": "Sagittarius"
            }
        ]
    },
    {
        "qid": 304000000,
        "question": "what kind of ideology does the brazilian communist party profess?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.058kr",
                "entity_name": "Marxism\u2013Leninism"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.021v6h",
                "entity_name": "Anti-revisionism"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "government.political_ideology",
                    "class": "government.political_ideology",
                    "friendly_name": "Political ideology",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.024wsx",
                    "class": "base.braziliangovt.brazilian_political_party",
                    "friendly_name": "Brazilian Communist Party",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "government.political_ideology.political_parties",
                    "friendly_name": "Political parties"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :government.political_ideology . \nVALUES ?x1 { :m.024wsx } \n?x0 :government.political_ideology.political_parties ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "government"
        ],
        "s_expression": "(AND government.political_ideology (JOIN government.political_ideology.political_parties m.024wsx))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.058kr",
                "entity_name": "Marxism\u2013Leninism"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01m59",
                "entity_name": "Communism"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.021v6h",
                "entity_name": "Anti-revisionism"
            }
        ]
    },
    {
        "qid": 264000302,
        "question": "who produces picmicros?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c5zfd",
                "entity_name": "Microchip Technology"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.processor_manufacturer",
                    "class": "computer.processor_manufacturer",
                    "friendly_name": "Processor Manufacturer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0196qx",
                    "class": "computer.computer_processor",
                    "friendly_name": "picmicro",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "computer.computer_processor.manufacturers",
                    "friendly_name": "Manufacturers"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.processor_manufacturer . \nVALUES ?x1 { :m.0196qx } \n?x1 :computer.computer_processor.manufacturers ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "computer"
        ],
        "s_expression": "(AND computer.processor_manufacturer (JOIN (R computer.computer_processor.manufacturers) m.0196qx))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c5zfd",
                "entity_name": "Microchip Technology"
            }
        ]
    },
    {
        "qid": 424000300,
        "question": "who endorsed products of toyota motor corporation?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r7ht6",
                "entity_name": "Greg Lutzka"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.product_endorser",
                    "class": "business.product_endorser",
                    "friendly_name": "Product Endorser",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "business.product_endorsement",
                    "class": "business.product_endorsement",
                    "friendly_name": "Product Endorsement",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.07mb6",
                    "class": "business.product_endorsee",
                    "friendly_name": "Toyota Motor Corporation",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "business.product_endorsee.endorsements",
                    "friendly_name": "Endorsements"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "business.product_endorsement.endorser",
                    "friendly_name": "Endorser"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.product_endorser . \n?x1 :type.object.type :business.product_endorsement . \nVALUES ?x2 { :m.07mb6 } \n?x2 :business.product_endorsee.endorsements ?x1 . \n?x1 :business.product_endorsement.endorser ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "business"
        ],
        "s_expression": "(AND business.product_endorser (JOIN (R business.product_endorsement.endorser) (JOIN (R business.product_endorsee.endorsements) m.07mb6)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r7ht6",
                "entity_name": "Greg Lutzka"
            }
        ]
    },
    {
        "qid": 435000101,
        "question": "in the measurement system using kelvin scale for temperature, what's the unit for magnetic field strength?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02sj414",
                "entity_name": "Ampere per metre"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "measurement_unit.magnetic_field_strength_unit",
                    "class": "measurement_unit.magnetic_field_strength_unit",
                    "friendly_name": "Unit of Magnetic Field Strength",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.047f7",
                    "class": "measurement_unit.temperature_unit",
                    "friendly_name": "kelvin scale",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "measurement_unit.measurement_system",
                    "class": "measurement_unit.measurement_system",
                    "friendly_name": "Measurement System",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "measurement_unit.measurement_system.temperature_units",
                    "friendly_name": "Temperature Units"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "measurement_unit.measurement_system.magnetic_field_strength_units",
                    "friendly_name": "Magnetic Field Strength Units"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.magnetic_field_strength_unit . \nVALUES ?x1 { :m.047f7 } \n?x2 :type.object.type :measurement_unit.measurement_system . \n?x2 :measurement_unit.measurement_system.temperature_units ?x1 . \n?x2 :measurement_unit.measurement_system.magnetic_field_strength_units ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "measurement_unit"
        ],
        "s_expression": "(AND measurement_unit.magnetic_field_strength_unit (JOIN (R measurement_unit.measurement_system.magnetic_field_strength_units) (JOIN measurement_unit.measurement_system.temperature_units m.047f7)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02sj414",
                "entity_name": "Ampere per metre"
            }
        ]
    },
    {
        "qid": 317000402,
        "question": "the human chromosome 11 has how many genes?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "837",
                "entity_name": "837"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "biology.gene",
                    "class": "biology.gene",
                    "friendly_name": "Gene",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.099wcz",
                    "class": "biology.chromosome",
                    "friendly_name": "human chromosome 11",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "biology.chromosome.gene",
                    "friendly_name": "Gene"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :biology.gene . \nVALUES ?x1 { :m.099wcz } \n?x1 :biology.chromosome.gene ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "biology"
        ],
        "s_expression": "(COUNT (AND biology.gene (JOIN (R biology.chromosome.gene) m.099wcz)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "1226"
            }
        ]
    },
    {
        "qid": 377000501,
        "question": "what are the ingredients used in mexican food that are not compatible with vegan?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.011l9w",
                "entity_name": "Lard"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f25w9",
                "entity_name": "Chicken meat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xg7s",
                "entity_name": "Chorizo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064y0m",
                "entity_name": "Oaxaca cheese"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.mexicanfood.mexican_food_ingredient",
                    "class": "base.mexicanfood.mexican_food_ingredient",
                    "friendly_name": "Mexican food ingredient",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07_hy",
                    "class": "food.dietary_restriction",
                    "friendly_name": "vegan",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "food.dietary_restriction.incompatible_ingredients",
                    "friendly_name": "Incompatible ingredients"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.mexicanfood.mexican_food_ingredient . \nVALUES ?x1 { :m.07_hy } \n?x1 :food.dietary_restriction.incompatible_ingredients ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "food"
        ],
        "s_expression": "(AND base.mexicanfood.mexican_food_ingredient (JOIN (R food.dietary_restriction.incompatible_ingredients) m.07_hy))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01nkt",
                "entity_name": "Cheese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0frq6",
                "entity_name": "Pork"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011l9w",
                "entity_name": "Lard"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f25w9",
                "entity_name": "Chicken meat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xg7s",
                "entity_name": "Chorizo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064y0m",
                "entity_name": "Oaxaca cheese"
            }
        ]
    },
    {
        "qid": 274000201,
        "question": "which operas are made by papp?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kfcjzy",
                "entity_name": "The Threepenny Opera"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "opera.opera_production",
                    "class": "opera.opera_production",
                    "friendly_name": "Opera Production",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01z1pc",
                    "class": "opera.opera_producer",
                    "friendly_name": "papp",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "opera.opera_production.producer",
                    "friendly_name": "Producer"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :opera.opera_production . \nVALUES ?x1 { :m.01z1pc } \n?x0 :opera.opera_production.producer ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "opera"
        ],
        "s_expression": "(AND opera.opera_production (JOIN opera.opera_production.producer m.01z1pc))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdd12q",
                "entity_name": "The Pirates of Penzance"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kfcjzy",
                "entity_name": "The Threepenny Opera"
            }
        ]
    },
    {
        "qid": 280000401,
        "question": "what are some bipropellant rocket engines that use h2o2 as the main oxidizer?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xlt61",
                "entity_name": "RD-550"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xlt6v",
                "entity_name": "RD-512"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xlt7j",
                "entity_name": "RD-511"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xlt87",
                "entity_name": "RD-510"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xlt9t",
                "entity_name": "RD-502"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xlvw0",
                "entity_name": "RD-161P"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.bipropellant_rocket_engine",
                    "class": "spaceflight.bipropellant_rocket_engine",
                    "friendly_name": "Bipropellant rocket engine",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03q_p",
                    "class": "spaceflight.rocket_engine_oxidizer",
                    "friendly_name": "h2o2",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "spaceflight.bipropellant_rocket_engine.oxidizer",
                    "friendly_name": "Oxidizer"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.bipropellant_rocket_engine . \nVALUES ?x1 { :m.03q_p } \n?x0 :spaceflight.bipropellant_rocket_engine.oxidizer ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "spaceflight"
        ],
        "s_expression": "(AND spaceflight.bipropellant_rocket_engine (JOIN spaceflight.bipropellant_rocket_engine.oxidizer m.03q_p))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xlt61",
                "entity_name": "RD-550"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xlt6v",
                "entity_name": "RD-512"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xlt7j",
                "entity_name": "RD-511"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xlt87",
                "entity_name": "RD-510"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xlt9t",
                "entity_name": "RD-502"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xlvw0",
                "entity_name": "RD-161P"
            }
        ]
    },
    {
        "qid": 439000800,
        "question": "the largest force in war was deployed by which country?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05vz3zq",
                "entity_name": "Soviet Union"
            }
        ],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "military.military_combatant",
                    "class": "military.military_combatant",
                    "friendly_name": "Military Combatant",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "military.force_strength",
                    "class": "military.force_strength",
                    "friendly_name": "Force Strength",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "military.force_strength.combatant",
                    "friendly_name": "Combatant"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "military.force_strength.force_size",
                    "friendly_name": "Force Size"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :military.military_combatant . \n?x1 :type.object.type :military.force_strength . \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :military.military_combatant . \n?y1 :type.object.type :military.force_strength . \n?y1 :military.force_strength.combatant ?y0 . \n?y1 :military.force_strength.force_size ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :military.force_strength.combatant ?x0 . \n?x1 :military.force_strength.force_size ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "military"
        ],
        "s_expression": "(ARGMAX military.military_combatant (R military.force_strength.combatant) military.force_strength.force_size)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05vz3zq",
                "entity_name": "Soviet Union"
            }
        ]
    },
    {
        "qid": 459000000,
        "question": "ronald reagan got which kind of injury?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05pzr_",
                "entity_name": "Hip fracture"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.disaster2.type_of_injury",
                    "class": "base.disaster2.type_of_injury",
                    "friendly_name": "Type of injury",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.disaster2.injury",
                    "class": "base.disaster2.injury",
                    "friendly_name": "Injury",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.06c0j",
                    "class": "base.disaster2.injured_person",
                    "friendly_name": "Ronald Reagan",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.disaster2.type_of_injury.people_with_this_injury",
                    "friendly_name": "People with this injury"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.disaster2.injury.injured_person",
                    "friendly_name": "Injured person"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.disaster2.type_of_injury . \n?x1 :type.object.type :base.disaster2.injury . \nVALUES ?x2 { :m.06c0j } \n?x0 :base.disaster2.type_of_injury.people_with_this_injury ?x1 . \n?x1 :base.disaster2.injury.injured_person ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.disaster2.type_of_injury (JOIN base.disaster2.type_of_injury.people_with_this_injury (JOIN base.disaster2.injury.injured_person m.06c0j)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01q1sz",
                "entity_name": "Pneumothorax"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05pzr_",
                "entity_name": "Hip fracture"
            }
        ]
    },
    {
        "qid": 292000100,
        "question": "the armistice of cassibile is the peace treaty of which war?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.081pw",
                "entity_name": "World War II"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.morelaw.war",
                    "class": "base.morelaw.war",
                    "friendly_name": "War",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08jn28",
                    "class": "base.morelaw.peace_treaty",
                    "friendly_name": "Armistice of Cassibile",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.morelaw.ceasefire.w",
                    "friendly_name": "War"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.morelaw.war . \nVALUES ?x1 { :m.08jn28 } \n?x1 :base.morelaw.ceasefire.w ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.morelaw.war (JOIN (R base.morelaw.ceasefire.w) m.08jn28))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.081pw",
                "entity_name": "World War II"
            }
        ]
    },
    {
        "qid": 487000002,
        "question": "how is the largest casino owned by harrahs themed?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0tyq",
                "entity_name": "Art Deco"
            }
        ],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.casinos.casino_theme",
                    "class": "base.casinos.casino_theme",
                    "friendly_name": "Casino theme",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.casinos.casino",
                    "class": "base.casinos.casino",
                    "friendly_name": "Casino",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.02r5dz",
                    "class": "base.casinos.casino_owner",
                    "friendly_name": "harrahs",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.casinos.casino_theme.casinos_in_this_theme",
                    "friendly_name": "Casinos in this theme"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.casinos.casino.rooms",
                    "friendly_name": "Rooms"
                },
                {
                    "start": 3,
                    "end": 1,
                    "relation": "base.casinos.casino_owner.casinos_owned",
                    "friendly_name": "Casinos owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.casinos.casino_theme . \n?x1 :type.object.type :base.casinos.casino . \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :base.casinos.casino_theme . \n?y1 :type.object.type :base.casinos.casino . \nVALUES ?y3 { :m.02r5dz } \n?y0 :base.casinos.casino_theme.casinos_in_this_theme ?y1 . \n?y1 :base.casinos.casino.rooms ?y2 . \n?y3 :base.casinos.casino_owner.casinos_owned ?y1 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\nVALUES ?x3 { :m.02r5dz } \n?x0 :base.casinos.casino_theme.casinos_in_this_theme ?x1 . \n?x1 :base.casinos.casino.rooms ?x2 . \n?x3 :base.casinos.casino_owner.casinos_owned ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(ARGMAX (AND base.casinos.casino_theme (JOIN base.casinos.casino_theme.casinos_in_this_theme (JOIN (R base.casinos.casino_owner.casinos_owned) m.02r5dz))) base.casinos.casino_theme.casinos_in_this_theme base.casinos.casino.rooms)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0tyq",
                "entity_name": "Art Deco"
            }
        ]
    },
    {
        "qid": 296000102,
        "question": "what kind of ad network is google ads?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09k38fg",
                "entity_name": "Targeted Ad Network"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.onlineadvertising.ad_network_type",
                    "class": "base.onlineadvertising.ad_network_type",
                    "friendly_name": "Ad Network Type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.036z3j",
                    "class": "base.onlineadvertising.ad_network",
                    "friendly_name": "google ads",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.onlineadvertising.ad_network.network_type",
                    "friendly_name": "Network Type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.onlineadvertising.ad_network_type . \nVALUES ?x1 { :m.036z3j } \n?x1 :base.onlineadvertising.ad_network.network_type ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.onlineadvertising.ad_network_type (JOIN (R base.onlineadvertising.ad_network.network_type) m.036z3j))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09k38fg",
                "entity_name": "Targeted Ad Network"
            }
        ]
    },
    {
        "qid": 497000300,
        "question": "what 18-hole golf course designed by jack nicklaus is the shortest?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06vfrc",
                "entity_name": "Harbour Town Golf Links"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04xw2w9",
                "entity_name": "SouthShore Golf Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04vydng",
                "entity_name": "Valhalla Golf Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04xgcgy",
                "entity_name": "Ohio State University Scarlet Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ymzzj",
                "entity_name": "Great Bear Golf Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04z4jsp",
                "entity_name": "Walnut Cove Course"
            }
        ],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "sports.golf_course",
                    "class": "sports.golf_course",
                    "friendly_name": "Golf Course",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "18^^http://www.w3.org/2001/XMLSchema#integer",
                    "class": "type.int",
                    "friendly_name": "18",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.01k7qh",
                    "class": "sports.golf_course_designer",
                    "friendly_name": "Jack Nicklaus",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "sports.golf_course.holes",
                    "friendly_name": "Number of holes"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "sports.golf_course.par",
                    "friendly_name": "Par"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "sports.golf_course.designer",
                    "friendly_name": "Designer"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.golf_course . \nVALUES ?x1 { \"18\"^^<http://www.w3.org/2001/XMLSchema#integer> } \n{\nSELECT (MIN(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :sports.golf_course . \nVALUES ?y1 { \"18\"^^<http://www.w3.org/2001/XMLSchema#integer> } \nVALUES ?y3 { :m.01k7qh } \n?y0 :sports.golf_course.holes ?y1 . \n?y0 :sports.golf_course.par ?y2 . \n?y0 :sports.golf_course.designer ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\nVALUES ?x3 { :m.01k7qh } \n?x0 :sports.golf_course.holes ?x1 . \n?x0 :sports.golf_course.par ?x2 . \n?x0 :sports.golf_course.designer ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "sports"
        ],
        "s_expression": "(ARGMIN (AND sports.golf_course (AND (JOIN sports.golf_course.holes 18^^http://www.w3.org/2001/XMLSchema#integer) (JOIN sports.golf_course.designer m.01k7qh))) sports.golf_course.par)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06vfrc",
                "entity_name": "Harbour Town Golf Links"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04xw2w9",
                "entity_name": "SouthShore Golf Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04vydng",
                "entity_name": "Valhalla Golf Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04xgcgy",
                "entity_name": "Ohio State University Scarlet Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ymzzj",
                "entity_name": "Great Bear Golf Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04z4jsp",
                "entity_name": "Walnut Cove Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04zh0kg",
                "entity_name": "Cimarron Hills Golf Course"
            }
        ]
    },
    {
        "qid": 266000000,
        "question": "what is the sex of gamera?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05zppz",
                "entity_name": "Male"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.monster.monster_gender",
                    "class": "base.monster.monster_gender",
                    "friendly_name": "Monster Gender",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0h9fv",
                    "class": "base.monster.monster",
                    "friendly_name": "Gamera",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.monster.monster.gender",
                    "friendly_name": "Gender"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.monster.monster_gender . \nVALUES ?x1 { :m.0h9fv } \n?x1 :base.monster.monster.gender ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.monster.monster_gender (JOIN (R base.monster.monster.gender) m.0h9fv))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05zppz",
                "entity_name": "Male"
            }
        ]
    },
    {
        "qid": 476000202,
        "question": "what were the weapons utilized by the perpetrators of the beslan school massacre?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05gb3y",
                "entity_name": "Gun"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.disaster2.object_used_as_weapon",
                    "class": "base.disaster2.object_used_as_weapon",
                    "friendly_name": "Thing used as weapon",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.disaster2.attack_process",
                    "class": "base.disaster2.attack_process",
                    "friendly_name": "Violence",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03st9z",
                    "class": "base.disaster2.attack",
                    "friendly_name": "beslan school massacre",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.disaster2.object_used_as_weapon.used_in_attack_s",
                    "friendly_name": "Used in attack"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.disaster2.attack_process.attack_event",
                    "friendly_name": "Attack event"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.disaster2.object_used_as_weapon . \n?x1 :type.object.type :base.disaster2.attack_process . \nVALUES ?x2 { :m.03st9z } \n?x0 :base.disaster2.object_used_as_weapon.used_in_attack_s ?x1 . \n?x1 :base.disaster2.attack_process.attack_event ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.disaster2.object_used_as_weapon (JOIN base.disaster2.object_used_as_weapon.used_in_attack_s (JOIN base.disaster2.attack_process.attack_event m.03st9z)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05gb3y",
                "entity_name": "Gun"
            }
        ]
    },
    {
        "qid": 276000300,
        "question": "multiple-image network graphics originated from what file format?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06279",
                "entity_name": "Portable Network Graphics"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.file_format",
                    "class": "computer.file_format",
                    "friendly_name": "File Format",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.052fr",
                    "class": "computer.file_format",
                    "friendly_name": "Multiple-image Network Graphics",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "computer.file_format.extended_from",
                    "friendly_name": "Extended From"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.file_format . \nVALUES ?x1 { :m.052fr } \n?x1 :computer.file_format.extended_from ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "computer"
        ],
        "s_expression": "(AND computer.file_format (JOIN (R computer.file_format.extended_from) m.052fr))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06279",
                "entity_name": "Portable Network Graphics"
            }
        ]
    },
    {
        "qid": 489000701,
        "question": "new york has over 86 mm average rainfall in which month?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xx5",
                "entity_name": "February"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_ly",
                "entity_name": "January"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05lf_",
                "entity_name": "October"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04wzr",
                "entity_name": "March"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.040fv",
                "entity_name": "July"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ll3",
                "entity_name": "August"
            }
        ],
        "function": ">",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "time.month",
                    "class": "time.month",
                    "friendly_name": "Month",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "travel.travel_destination_monthly_climate",
                    "class": "travel.travel_destination_monthly_climate",
                    "friendly_name": "Travel destination monthly climate",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02_286",
                    "class": "travel.travel_destination",
                    "friendly_name": "new york",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "86^^http://www.w3.org/2001/XMLSchema#integer",
                    "class": "type.int",
                    "friendly_name": "86",
                    "question_node": 0,
                    "function": ">"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "travel.travel_destination_monthly_climate.month",
                    "friendly_name": "Month"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "travel.travel_destination.climate",
                    "friendly_name": "Climate"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "travel.travel_destination_monthly_climate.average_rainfall_mm",
                    "friendly_name": "Average rainfall"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :time.month . \n?x1 :type.object.type :travel.travel_destination_monthly_climate . \nVALUES ?x2 { :m.02_286 } \nFILTER (?x3 > \"86\"^^<http://www.w3.org/2001/XMLSchema#integer>)\n?x1 :travel.travel_destination_monthly_climate.month ?x0 . \n?x2 :travel.travel_destination.climate ?x1 . \n?x1 :travel.travel_destination_monthly_climate.average_rainfall_mm ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "travel"
        ],
        "s_expression": "(AND time.month (JOIN (R travel.travel_destination_monthly_climate.month) (AND (JOIN (R travel.travel_destination.climate) m.02_286) (gt travel.travel_destination_monthly_climate.average_rainfall_mm 86^^http://www.w3.org/2001/XMLSchema#integer))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xx5",
                "entity_name": "February"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_ly",
                "entity_name": "January"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05lf_",
                "entity_name": "October"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04wzr",
                "entity_name": "March"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.040fv",
                "entity_name": "July"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ll3",
                "entity_name": "August"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.028kb",
                "entity_name": "December"
            }
        ]
    },
    {
        "qid": 444000100,
        "question": "in united states of america how many games published by electronic arts are available?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5",
                "entity_name": "5"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.game_version",
                    "class": "cvg.game_version",
                    "friendly_name": "Video Game Version",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01n073",
                    "class": "cvg.cvg_publisher",
                    "friendly_name": "Electronic Arts",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.09c7w0",
                    "class": "cvg.computer_game_region",
                    "friendly_name": "United States of America",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "cvg.cvg_publisher.game_versions_published",
                    "friendly_name": "Game Versions Published"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "cvg.game_version.regions",
                    "friendly_name": "Regions"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.game_version . \nVALUES ?x1 { :m.01n073 } \nVALUES ?x2 { :m.09c7w0 } \n?x1 :cvg.cvg_publisher.game_versions_published ?x0 . \n?x0 :cvg.game_version.regions ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "cvg"
        ],
        "s_expression": "(COUNT (AND cvg.game_version (AND (JOIN (R cvg.cvg_publisher.game_versions_published) m.01n073) (JOIN cvg.game_version.regions m.09c7w0))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "5"
            }
        ]
    },
    {
        "qid": 497000202,
        "question": "for those 18-hole golf courses designed by jack william nicklaus, which one is the smallest?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06vfrc",
                "entity_name": "Harbour Town Golf Links"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04xw2w9",
                "entity_name": "SouthShore Golf Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04vydng",
                "entity_name": "Valhalla Golf Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04xgcgy",
                "entity_name": "Ohio State University Scarlet Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ymzzj",
                "entity_name": "Great Bear Golf Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04z4jsp",
                "entity_name": "Walnut Cove Course"
            }
        ],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "sports.golf_course",
                    "class": "sports.golf_course",
                    "friendly_name": "Golf Course",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "18^^http://www.w3.org/2001/XMLSchema#integer",
                    "class": "type.int",
                    "friendly_name": "18",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.01k7qh",
                    "class": "sports.golf_course_designer",
                    "friendly_name": "jack william nicklaus",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "sports.golf_course.holes",
                    "friendly_name": "Number of holes"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "sports.golf_course.par",
                    "friendly_name": "Par"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "sports.golf_course.designer",
                    "friendly_name": "Designer"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.golf_course . \nVALUES ?x1 { \"18\"^^<http://www.w3.org/2001/XMLSchema#integer> } \n{\nSELECT (MIN(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :sports.golf_course . \nVALUES ?y1 { \"18\"^^<http://www.w3.org/2001/XMLSchema#integer> } \nVALUES ?y3 { :m.01k7qh } \n?y0 :sports.golf_course.holes ?y1 . \n?y0 :sports.golf_course.par ?y2 . \n?y0 :sports.golf_course.designer ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\nVALUES ?x3 { :m.01k7qh } \n?x0 :sports.golf_course.holes ?x1 . \n?x0 :sports.golf_course.par ?x2 . \n?x0 :sports.golf_course.designer ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "sports"
        ],
        "s_expression": "(ARGMIN (AND sports.golf_course (AND (JOIN sports.golf_course.holes 18^^http://www.w3.org/2001/XMLSchema#integer) (JOIN sports.golf_course.designer m.01k7qh))) sports.golf_course.par)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06vfrc",
                "entity_name": "Harbour Town Golf Links"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04xw2w9",
                "entity_name": "SouthShore Golf Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04vydng",
                "entity_name": "Valhalla Golf Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04xgcgy",
                "entity_name": "Ohio State University Scarlet Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ymzzj",
                "entity_name": "Great Bear Golf Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04z4jsp",
                "entity_name": "Walnut Cove Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04zh0kg",
                "entity_name": "Cimarron Hills Golf Course"
            }
        ]
    },
    {
        "qid": 474000002,
        "question": "what other infectious diseases could be caused by the same things that cause hiv infection?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0mh4s",
                "entity_name": "Gonorrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064fq",
                "entity_name": "Pelvic inflammatory disease"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01glh",
                "entity_name": "Bacterial vaginosis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0259ln",
                "entity_name": "Tinea cruris"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07y4wwh",
                "entity_name": "HTLV-I Infections"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dc5_q2",
                "entity_name": "Phthirus pubis infestation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqpg",
                "entity_name": "Kaposi's sarcoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.019syx",
                "entity_name": "Human papillomavirus infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gxbfm",
                "entity_name": "Herpes simplex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254yv",
                "entity_name": "Molluscum contagiosum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01qmrl",
                "entity_name": "Non-gonococcal urethritis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m72x",
                "entity_name": "Trichomoniasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yjzm",
                "entity_name": "Hepatitis A"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0167bx",
                "entity_name": "Hepatitis B"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01lvyl",
                "entity_name": "Lymphogranuloma venereum"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.disaster2.infectious_disease",
                    "class": "base.disaster2.infectious_disease",
                    "friendly_name": "Infectious disease",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "medicine.risk_factor",
                    "class": "medicine.risk_factor",
                    "friendly_name": "Risk Factor",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d19y2",
                    "class": "medicine.disease",
                    "friendly_name": "hiv infection",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "medicine.disease.risk_factors",
                    "friendly_name": "Risk Factors"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "medicine.risk_factor.diseases",
                    "friendly_name": "Diseases with this Risk Factor"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.disaster2.infectious_disease . \n?x1 :type.object.type :medicine.risk_factor . \nVALUES ?x2 { :m.0d19y2 } \n?x0 :medicine.disease.risk_factors ?x1 . \n?x1 :medicine.risk_factor.diseases ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(AND base.disaster2.infectious_disease (JOIN medicine.disease.risk_factors (JOIN medicine.risk_factor.diseases m.0d19y2)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0mh4s",
                "entity_name": "Gonorrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064fq",
                "entity_name": "Pelvic inflammatory disease"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01glh",
                "entity_name": "Bacterial vaginosis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0259ln",
                "entity_name": "Tinea cruris"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07y4wwh",
                "entity_name": "HTLV-I Infections"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dc5_q2",
                "entity_name": "Phthirus pubis infestation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqpg",
                "entity_name": "Kaposi's sarcoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.019syx",
                "entity_name": "Human papillomavirus infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gxbfm",
                "entity_name": "Herpes simplex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gv",
                "entity_name": "Candidiasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254yv",
                "entity_name": "Molluscum contagiosum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01qmrl",
                "entity_name": "Non-gonococcal urethritis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m72x",
                "entity_name": "Trichomoniasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yjzm",
                "entity_name": "Hepatitis A"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0167bx",
                "entity_name": "Hepatitis B"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01lvyl",
                "entity_name": "Lymphogranuloma venereum"
            }
        ]
    },
    {
        "qid": 394000402,
        "question": "search for the models of aircraft from general motors corporation.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02jphj",
                "entity_name": "Grumman TBF Avenger"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06sw0s",
                "entity_name": "Fisher P-75 Eagle"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "aviation.aircraft_model",
                    "class": "aviation.aircraft_model",
                    "friendly_name": "Aircraft model",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.035nm",
                    "class": "aviation.aircraft_manufacturer",
                    "friendly_name": "general motors corporation",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "aviation.aircraft_manufacturer.aircraft_models_made",
                    "friendly_name": "Aircraft Models Manufactured"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :aviation.aircraft_model . \nVALUES ?x1 { :m.035nm } \n?x1 :aviation.aircraft_manufacturer.aircraft_models_made ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "aviation"
        ],
        "s_expression": "(AND aviation.aircraft_model (JOIN (R aviation.aircraft_manufacturer.aircraft_models_made) m.035nm))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02jphj",
                "entity_name": "Grumman TBF Avenger"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06sw0s",
                "entity_name": "Fisher P-75 Eagle"
            }
        ]
    },
    {
        "qid": 442000102,
        "question": "which is the smallest roller coasters designed by disney imagineering?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bkxys",
                "entity_name": "Gadget's Go Coaster"
            }
        ],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.roller_coaster",
                    "class": "amusement_parks.roller_coaster",
                    "friendly_name": "Roller Coaster",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04gvyp",
                    "class": "amusement_parks.ride_designer",
                    "friendly_name": "disney imagineering",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "amusement_parks.ride_designer.rides",
                    "friendly_name": "Rides Designed"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "amusement_parks.ride.capacity",
                    "friendly_name": "Capacity (riders per hour)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.roller_coaster . \nVALUES ?x1 { :m.04gvyp } \n{\nSELECT (MIN(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :amusement_parks.roller_coaster . \nVALUES ?y1 { :m.04gvyp } \n?y1 :amusement_parks.ride_designer.rides ?y0 . \n?y0 :amusement_parks.ride.capacity ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :amusement_parks.ride_designer.rides ?x0 . \n?x0 :amusement_parks.ride.capacity ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "amusement_parks"
        ],
        "s_expression": "(ARGMIN (AND amusement_parks.roller_coaster (JOIN (R amusement_parks.ride_designer.rides) m.04gvyp)) amusement_parks.ride.capacity)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bkxys",
                "entity_name": "Gadget's Go Coaster"
            }
        ]
    },
    {
        "qid": 355000201,
        "question": "find all the journal publications of michael jordan.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n9_jtt",
                "entity_name": "Latent dirichlet allocation"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "book.journal_article",
                    "class": "book.journal_article",
                    "friendly_name": "Journal article",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0573h5",
                    "class": "base.bibkn.author",
                    "friendly_name": "michael jordan",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "book.written_work.author",
                    "friendly_name": "Author"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :book.journal_article . \nVALUES ?x1 { :m.0573h5 } \n?x0 :book.written_work.author ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "book"
        ],
        "s_expression": "(AND book.journal_article (JOIN book.written_work.author m.0573h5))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n9_jtt",
                "entity_name": "Latent dirichlet allocation"
            }
        ]
    },
    {
        "qid": 474000601,
        "question": "which infectious diseases may be caused by something that can also cause hiv?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0mh4s",
                "entity_name": "Gonorrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064fq",
                "entity_name": "Pelvic inflammatory disease"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01glh",
                "entity_name": "Bacterial vaginosis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0259ln",
                "entity_name": "Tinea cruris"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07y4wwh",
                "entity_name": "HTLV-I Infections"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dc5_q2",
                "entity_name": "Phthirus pubis infestation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqpg",
                "entity_name": "Kaposi's sarcoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.019syx",
                "entity_name": "Human papillomavirus infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gxbfm",
                "entity_name": "Herpes simplex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254yv",
                "entity_name": "Molluscum contagiosum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01qmrl",
                "entity_name": "Non-gonococcal urethritis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m72x",
                "entity_name": "Trichomoniasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yjzm",
                "entity_name": "Hepatitis A"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0167bx",
                "entity_name": "Hepatitis B"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01lvyl",
                "entity_name": "Lymphogranuloma venereum"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.disaster2.infectious_disease",
                    "class": "base.disaster2.infectious_disease",
                    "friendly_name": "Infectious disease",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "medicine.risk_factor",
                    "class": "medicine.risk_factor",
                    "friendly_name": "Risk Factor",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d19y2",
                    "class": "medicine.disease",
                    "friendly_name": "hiv",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "medicine.disease.risk_factors",
                    "friendly_name": "Risk Factors"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "medicine.risk_factor.diseases",
                    "friendly_name": "Diseases with this Risk Factor"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.disaster2.infectious_disease . \n?x1 :type.object.type :medicine.risk_factor . \nVALUES ?x2 { :m.0d19y2 } \n?x0 :medicine.disease.risk_factors ?x1 . \n?x1 :medicine.risk_factor.diseases ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(AND base.disaster2.infectious_disease (JOIN medicine.disease.risk_factors (JOIN medicine.risk_factor.diseases m.0d19y2)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0mh4s",
                "entity_name": "Gonorrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064fq",
                "entity_name": "Pelvic inflammatory disease"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01glh",
                "entity_name": "Bacterial vaginosis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0259ln",
                "entity_name": "Tinea cruris"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07y4wwh",
                "entity_name": "HTLV-I Infections"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dc5_q2",
                "entity_name": "Phthirus pubis infestation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqpg",
                "entity_name": "Kaposi's sarcoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.019syx",
                "entity_name": "Human papillomavirus infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gxbfm",
                "entity_name": "Herpes simplex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gv",
                "entity_name": "Candidiasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254yv",
                "entity_name": "Molluscum contagiosum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01qmrl",
                "entity_name": "Non-gonococcal urethritis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m72x",
                "entity_name": "Trichomoniasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yjzm",
                "entity_name": "Hepatitis A"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0167bx",
                "entity_name": "Hepatitis B"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01lvyl",
                "entity_name": "Lymphogranuloma venereum"
            }
        ]
    },
    {
        "qid": 444000500,
        "question": "there are how many games published by electronic arts available in the united states of america?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5",
                "entity_name": "5"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.game_version",
                    "class": "cvg.game_version",
                    "friendly_name": "Video Game Version",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01n073",
                    "class": "cvg.cvg_publisher",
                    "friendly_name": "Electronic Arts",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.09c7w0",
                    "class": "cvg.computer_game_region",
                    "friendly_name": "United States of America",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "cvg.cvg_publisher.game_versions_published",
                    "friendly_name": "Game Versions Published"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "cvg.game_version.regions",
                    "friendly_name": "Regions"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.game_version . \nVALUES ?x1 { :m.01n073 } \nVALUES ?x2 { :m.09c7w0 } \n?x1 :cvg.cvg_publisher.game_versions_published ?x0 . \n?x0 :cvg.game_version.regions ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "cvg"
        ],
        "s_expression": "(COUNT (AND cvg.game_version (AND (JOIN (R cvg.cvg_publisher.game_versions_published) m.01n073) (JOIN cvg.game_version.regions m.09c7w0))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "5"
            }
        ]
    },
    {
        "qid": 390000100,
        "question": "what dogs are there in the toy group?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01f57_",
                "entity_name": "Chinese Crested Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ysz",
                "entity_name": "Italian Greyhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0khhs",
                "entity_name": "Chihuahua"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05h0pv",
                "entity_name": "Australian Silky Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01s7fj",
                "entity_name": "Shih Tzu"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xtxb",
                "entity_name": "Cavalier King Charles Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02cyl6",
                "entity_name": "Maltese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.035xn5",
                "entity_name": "Toy Fox Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ydd_",
                "entity_name": "Havanese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04nmst",
                "entity_name": "King Charles Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04xx17",
                "entity_name": "Griffon Bruxellois"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0363rs",
                "entity_name": "Toy Manchester Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0393qn",
                "entity_name": "Phal\u00e8ne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.016wfy",
                "entity_name": "Pomeranian"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01_gx_",
                "entity_name": "Yorkshire Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01pkw7",
                "entity_name": "Papillon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03svl1",
                "entity_name": "Miniature Pinscher"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045tty",
                "entity_name": "Japanese Chin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.016wkx",
                "entity_name": "Pug"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p2dp",
                "entity_name": "Affenpinscher"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.petbreeds.dog_breed",
                    "class": "base.petbreeds.dog_breed",
                    "friendly_name": "Dog Breed",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05781x",
                    "class": "base.petbreeds.dog_breed_group",
                    "friendly_name": "Toy Group",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.petbreeds.dog_breed_group.dog_breeds",
                    "friendly_name": "Dog Breeds in Group"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.petbreeds.dog_breed . \nVALUES ?x1 { :m.05781x } \n?x1 :base.petbreeds.dog_breed_group.dog_breeds ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.petbreeds.dog_breed (JOIN (R base.petbreeds.dog_breed_group.dog_breeds) m.05781x))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01f57_",
                "entity_name": "Chinese Crested Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ysz",
                "entity_name": "Italian Greyhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0khhs",
                "entity_name": "Chihuahua"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05h0pv",
                "entity_name": "Australian Silky Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01s7fj",
                "entity_name": "Shih Tzu"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xtxb",
                "entity_name": "Cavalier King Charles Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02cyl6",
                "entity_name": "Maltese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.035xn5",
                "entity_name": "Toy Fox Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ydd_",
                "entity_name": "Havanese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04nmst",
                "entity_name": "King Charles Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04xx17",
                "entity_name": "Griffon Bruxellois"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0363rs",
                "entity_name": "Toy Manchester Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0393qn",
                "entity_name": "Phal\u00e8ne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.016wfy",
                "entity_name": "Pomeranian"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01_gx_",
                "entity_name": "Yorkshire Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01pkw7",
                "entity_name": "Papillon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03svl1",
                "entity_name": "Miniature Pinscher"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045tty",
                "entity_name": "Japanese Chin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.016wkx",
                "entity_name": "Pug"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p2dp",
                "entity_name": "Affenpinscher"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02bp0t",
                "entity_name": "Pekingese"
            }
        ]
    },
    {
        "qid": 322000000,
        "question": "how many model years does harley-davidson xl1200n have?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2",
                "entity_name": "2"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.motorcycle.motorcycle_model_year",
                    "class": "base.motorcycle.motorcycle_model_year",
                    "friendly_name": "Motorcycle model year",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03hq_72",
                    "class": "base.motorcycle.motorcycle_series",
                    "friendly_name": "Harley-Davidson XL1200N",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.motorcycle.motorcycle_series.model_year_s",
                    "friendly_name": "Model year(s)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.motorcycle.motorcycle_model_year . \nVALUES ?x1 { :m.03hq_72 } \n?x1 :base.motorcycle.motorcycle_series.model_year_s ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(COUNT (AND base.motorcycle.motorcycle_model_year (JOIN (R base.motorcycle.motorcycle_series.model_year_s) m.03hq_72)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ]
    },
    {
        "qid": 389000401,
        "question": "in which japanese prefecture did hachiko expire in?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.012xky",
                "entity_name": "Shibuya"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "location.jp_special_ward",
                    "class": "location.jp_special_ward",
                    "friendly_name": "Special ward of Tokyo, Japan",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03c9pl",
                    "class": "biology.deceased_organism",
                    "friendly_name": "hachiko",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "biology.deceased_organism.place_of_death",
                    "friendly_name": "Place of death"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :location.jp_special_ward . \nVALUES ?x1 { :m.03c9pl } \n?x1 :biology.deceased_organism.place_of_death ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "biology"
        ],
        "s_expression": "(AND location.jp_special_ward (JOIN (R biology.deceased_organism.place_of_death) m.03c9pl))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.012xky",
                "entity_name": "Shibuya"
            }
        ]
    },
    {
        "qid": 469000300,
        "question": "find other patents that are filed in the same patent office as mouse.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09tf_lf",
                "entity_name": "Multidimensional digital waveguide signal synthesis system and method"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09tgx93",
                "entity_name": "Method of synthesizing a musical sound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37s09",
                "entity_name": "Gradient characterization using fourier-transform"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37sbh",
                "entity_name": "Markerless motion capture system"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37wkf",
                "entity_name": "System and method for high-speed potentiometry using scanning probe microscope"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3873w",
                "entity_name": "Ultracapacitor current collector"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lg_q",
                "entity_name": "Method for improving SNR in low illumination conditions in a CMOS video sensor system using a self-resetting digital pixel: U.S. Patent No. 6,963,370"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lj4l",
                "entity_name": "Photocurrent estimation from multiple captures for simultaneous SNR and dynamic range improvement in CMOS image sensors: U.S. Patent No. 7,009,636"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lk9n",
                "entity_name": "Terahertz radiation generation and methods therefor: U.S. Patent No. 7,349,609"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lm8d",
                "entity_name": "Agents for treatment of HCV and methods of use: U.S. Patent No. 8,093,353"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmj2",
                "entity_name": "Partially loaded microwave waveguide resonant standing wave electro-optic modulator: U.S. Patent No. 5,414,552"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpq5",
                "entity_name": "Gene involved in mineral deposition and uses thereof: U.S. Patent No. 7,122,328"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n7_5",
                "entity_name": "Rapid measurement of time-averaged blood flow using ungated spiral phase-contrast MRI: U.S. Patent No. 6,957,097"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nb2k",
                "entity_name": "Method and apparatus for quantitative and comparative analysis of image intensities in radiographs: U.S. Patent No. 7,835,559"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nc_5",
                "entity_name": "Transesophageal heat exchange catheter for cooling of the heart: U.S. Patent No. 7,758,623"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37syg",
                "entity_name": "Micro-machined coupled capacitor devices"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37v5x",
                "entity_name": "Acoustic crosstalk reduction for capacitive micromachined ultrasonic transducers in immersion"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37v70",
                "entity_name": "Method and system for operating capacitive membrane ultrasonic transducers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zw7",
                "entity_name": "Array of capacitive micromachined ultrasonic transducer elements with through wafer via connections"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387wc",
                "entity_name": "Capacitive micromachined ultrasonic transducer array with through-substrate electrical connection and method of fabricating same"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387xm",
                "entity_name": "Electrical through wafer interconnects"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38dmv",
                "entity_name": "Optical displacement sensor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38dq4",
                "entity_name": "Capacitive micromachined ultrasonic transducer arrays with reduced cross-coupling"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljh9",
                "entity_name": "Microfluidic channels with integrated ultrasonic transducers for temperature measurement and method: U.S. Patent No. 6,789,426"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljjq",
                "entity_name": "Capacitive micromachined ultrasonic transducer(CMUT) with varying thickness membrane: U.S. Patent No. 7,615,834"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljpm",
                "entity_name": "Capacitive membrane ultrasonic transducers with reduced bulk wave generation and method: U.S. Patent No. 7,321,181"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lxbv",
                "entity_name": "Acoustic transducers and method of microfabrication: U.S. Patent No. 5,982,709"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m524",
                "entity_name": "Fabrication of capacitive micromachined ultrasonic transducers by local oxidation: U.S. Patent No. 7,745,248"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m5fr",
                "entity_name": "High quality factor resonators for liquid immersion biological and chemical sensors: U.S. Patent No. 7,694,552"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07f7rj9",
                "entity_name": "United States Patent 4552992"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnv7",
                "entity_name": "Temperature-controlled optical modulator: U.S. Patent No. 7,515,776"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lp2v",
                "entity_name": "Thin buffer layers for SiGe growth on mismatched substrates: U.S. Patent No. 7,902,046"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lzgc",
                "entity_name": "Device and approach for integration of optical devices and waveguides therefor: U.S. Patent No. 7,418,166"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387_y",
                "entity_name": "Molecular layers covalently bonded to silicon surfaces"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38810",
                "entity_name": "Method of detecting microscopic defects existing on a silicon wafer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37x4n",
                "entity_name": "Transfection and genetic manipulations in obligate intracellular parasites"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37x5z",
                "entity_name": "Composition and method for distinguishing virulent and non-virulent toxoplasma infections"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37x78",
                "entity_name": "Diagnostic genes for toxoplasmosis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37w2x",
                "entity_name": "Concurrent voice to text and sketch processing with synchronized replay"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zt_",
                "entity_name": "Inorganic metal chalcogen cluster precursors and methods for forming colloidal metal chalcogenide nanoparticles using the same"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3l_x5",
                "entity_name": "Mice comprising engrafted functional human hepatocytes: U.S. Patent No. 6,660,905"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljly",
                "entity_name": "Electromagnetic trigger switch: U.S. Patent No. 4,401,958"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkzv",
                "entity_name": "System and method for indexing, accessing and retrieving audio/video with concurrent sketch activity: U.S. Patent No. 6,724,918"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lqp1",
                "entity_name": "Method of preventing progression of hypertension-induced heart failure with PKC peptides: U.S. Patent No. 7,741,290"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lwx3",
                "entity_name": "Scalable sensor localization for wireless sensor networks: U.S. Patent No. 7,970,574"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m65h",
                "entity_name": "MRI method of determining time-optimal gradient waveforms with gradient amplitude as a function of arc-length in k-space: U.S. Patent No. 7,791,338"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n7x0",
                "entity_name": "Expression of heterologous functional oxygen-sensitive proteins in filamentous cyanobacteria: U.S. Patent No. 7,820,406"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nc6t",
                "entity_name": "Catalytic depolymerization of polymers containing electrophilic linkages using nucleophilic reagents: U.S. Patent No. 6,916,936"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xm5",
                "entity_name": "Protein modulators of resistance to alkylating agents"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnhr2",
                "entity_name": "Method and apparatus for MR image reconstruction using correlation values: U.S. Patent No. 7,768,264"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02k6sjn",
                "entity_name": "Use of web usage trail data to identify related links"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07cx4",
                "entity_name": "Telephone"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jbsj",
                "entity_name": "Composite mechanical transducers and approaches therefor: U.S. Patent No. 7,806,586"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhfr",
                "entity_name": "K-T sparse: high frame-rate dynamic magnetic resonance imaging exploiting spatio-temporal sparsity: U.S. Patent No. 7,602,183"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38b58",
                "entity_name": "High-efficiency high-power amplifier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38b7k",
                "entity_name": "Method for handoff in wireless communication systems using pattern recognition"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnfxh",
                "entity_name": "Estrogen receptor intramolecular folding systems, estrogen receptor intramolecular folding sensors, methods of use thereof, methods of detecting ER ligands, and methods of detecting ER agonists and antagonists: U.S. Patent No. 8,178,654"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljbt",
                "entity_name": "Method and composition for enhancing transport across biological membranes: U.S. Patent No. 6,495,663"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpp2",
                "entity_name": "Bryostatin analogues, synthetic methods and uses: U.S. Patent No. 7,256,286"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lwgw",
                "entity_name": "Guanidinium transport reagents and conjugates: U.S. Patent No. 7,169,814"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mfvw",
                "entity_name": "Transporters comprising spaced arginine moieties: U.S. Patent No. 7,585,834"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9sk",
                "entity_name": "Kinase inhibitors and associated pharmaceutical compositions and methods of use: U.S. Patent No. 7,232,842"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387lg",
                "entity_name": "Methods and compositions for modulating angiogenesis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3l3c3",
                "entity_name": "Neurodegenerative protein aggregation inhibition methods and compounds: U.S. Patent No. 7,485,706"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37t5g",
                "entity_name": "Method for magnetic resonance spectroscopic imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lqlw",
                "entity_name": "Fast metabolic imaging of systems with sparse spectra using spiral CSI: U.S. Patent No. 7,709,266"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rnn",
                "entity_name": "Cable guide for bicycles"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37scm",
                "entity_name": "Methods for making multi-branched polymers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37sq2",
                "entity_name": "Reusable wafer support for semiconductor processing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3872r",
                "entity_name": "Sealing an ultracapacitor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38cjd",
                "entity_name": "System and method for re-ordering memory references for access to memory"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jf0z",
                "entity_name": "Methods for view angle tilt imaging of interventional devices providing adjustment of device contrast: U.S. Patent No. 6,256,526"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljcr",
                "entity_name": "Adjuvant treatment by in vivo activation of dendritic cells: U.S. Patent No. 6,423,539"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ll_k",
                "entity_name": "Sampling in volumetric computed tomography: U.S. Patent No. 7,103,138"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lm0q",
                "entity_name": "Conus californicus neurotoxins: U.S. Patent No. 7,341,998"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m5w6",
                "entity_name": "Microfabricated ultrasonic immersion transducer: U.S. Patent No. 5,894,452"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37sxc",
                "entity_name": "Interdigital deflection sensor for microcantilevers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37q__",
                "entity_name": "Magnetic resonance spectroscopic imaging method to monitor progression and treatment of neurodegenerative conditions"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37r0n",
                "entity_name": "High order shimming of MRI magnetic fields using regularization"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37r1b",
                "entity_name": "Spectroscopic magnetic resonance imaging using spiral trajectories"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rfm",
                "entity_name": "Motion corrected tensor magnetic resonance imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37v2r",
                "entity_name": "Method for fabricating efficient sources of electromagnetic radiation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vtj",
                "entity_name": "System and method for indexing electronic text"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vyt",
                "entity_name": "Method and apparatus for vehicle control, navigation and positioning"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37z_3",
                "entity_name": "In-plane mechanically coupled microelectromechanical tuning fork resonators"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j386tw",
                "entity_name": "Identification and isolation of transitional cell carcinoma stem cells"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387v7",
                "entity_name": "Circular nucleic acid vectors, and methods for making and using the same"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38crj",
                "entity_name": "Rapid, informative diagnostic assay for influenza viruses including H5N1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3l150",
                "entity_name": "NF-AT polypeptides and polynucleotides: U.S. Patent No. 5,837,840"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ll1_",
                "entity_name": "Nonvolatile memory for logic circuits: U.S. Patent No. 7,336,525"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmxv",
                "entity_name": "Ultra precision and reliable bonding method: U.S. Patent No. 6,284,085"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m2yg",
                "entity_name": "Non-contact mechanical resonance method for determining the near surface carrier mobility in conductors: U.S. Patent No. 6,489,776"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n4zs",
                "entity_name": "Time-reversal block transmit diversity system for channels with intersymbol interference and method: U.S. Patent No. 7,362,815"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdng9r",
                "entity_name": "Circular nucleic acid vectors, and methods for making and using the same: U.S. Patent No. 8,124,407"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_c7",
                "entity_name": "Fuel cell and method for making the same"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37pz4",
                "entity_name": "Method for detecting and classifying a structure of interest in medical images"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lm77",
                "entity_name": "Antibiotics targeting MreB: U.S. Patent No. 7,855,228"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnxf",
                "entity_name": "Excitable target marker detection: U.S. Patent No. 7,604,981"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lp57",
                "entity_name": "Dual purpose electroactive copolymers, preparation thereof, and use in opto-electronic devices: U.S. Patent No. 6,355,756"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpk5",
                "entity_name": "Near-field aperture having a fractal iterate shape: U.S. Patent No. 7,423,265"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8bh",
                "entity_name": "Higher order diffraction in holography: U.S. Patent No. 5,291,320"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8g1",
                "entity_name": "Active queue management toward fair bandwidth allocation: U.S. Patent No. 7,324,442"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vlx",
                "entity_name": "Microfabricated tissue as a substrate for pigment epithelium transplantation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37wvy",
                "entity_name": "Artificial cornea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37wys",
                "entity_name": "Self-sufficient retinal prosthesis powered by intraocular photovoltaic cells"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389rm",
                "entity_name": "High-density data storage using atomic force microscope"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n59j",
                "entity_name": "Cantilever for scanning probe microscope including piezoelectric element and method of using the same: U.S. Patent No. 5,742,377"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5c0",
                "entity_name": "Atomic force microscope for high speed imaging including integral actuator and sensor: U.S. Patent No. 5,883,705"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5cv",
                "entity_name": "Vibrating probe for a scanning probe microscope: U.S. Patent No. 6,075,585"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n998",
                "entity_name": "Detection of macromolecular complexes with harmonic cantilevers: U.S. Patent No. 7,989,164"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9cw",
                "entity_name": "Torsional harmonic cantilevers for detection of high frequency force components in atomic force microscopy: U.S. Patent No. 7,089,787"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9f4",
                "entity_name": "Torsional harmonic cantilevers for detection of high frequency force components in atomic force microscopy: U.S. Patent No. 7,302,833"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9g9",
                "entity_name": "Atomic force microscope using a torsional harmonic cantilever: U.S. Patent No. 7,404,314"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9hr",
                "entity_name": "Near field scanning optical and force microscope including cantilever and optical waveguide: U.S. Patent No. 5,354,985"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38b31",
                "entity_name": "Mismatch repair detection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38bvc",
                "entity_name": "Contrast and resolution enhancement with signal compensation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38clv",
                "entity_name": "System and method for implementing conditional vector operations in which an input vector containing multiple operands to be used in conditional operations is divided into two or more output vectors based on a condition vector"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38cnk",
                "entity_name": "System and method for performing efficient conditional vector operations for data parallel architectures involving both input and conditional vector values"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3kl_d",
                "entity_name": "Mismatch repair detection: U.S. Patent No. 6,406,847"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mkl6",
                "entity_name": "Methods of modulating angiogenesis: U.S. Patent No. 7,947,278"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n7d6",
                "entity_name": "Quantification of vascular irregularity: U.S. Patent No. 7,379,574"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9yb",
                "entity_name": "Replication and transfer of microstructures and nanostructures: U.S. Patent No. 7,345,002"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbtm",
                "entity_name": "Dumbbell-like nanoparticles and a process of forming the same: U.S. Patent No. 7,288,134"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lqdw",
                "entity_name": "Compton backscattered collimated x-ray source: U.S. Patent No. 5,825,847"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lqfz",
                "entity_name": "Compton backscattered collmated X-ray source: U.S. Patent No. 6,035,015"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n6jv",
                "entity_name": "Electrokinetic instability micromixer: U.S. Patent No. 7,070,681"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lm_1",
                "entity_name": "Composite rotors for flywheels and methods of fabrication thereof: U.S. Patent No. 6,868,753"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbzw",
                "entity_name": "Composite grid/frame structures: U.S. Patent No. 5,888,608"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llyc",
                "entity_name": "Gate electrode with depletion suppression and tunable workfunction: U.S. Patent No. 7,867,859"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jck3",
                "entity_name": "System and method for indexing electronic text: U.S. Patent No. 6,535,873"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvzv",
                "entity_name": "US patent 618704 - Method of Manufacturing Filaments for Electric Lamps"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37t00",
                "entity_name": "Gain correction for a CT system"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388p8",
                "entity_name": "Method and apparatus for echo cancellation with discrete multitone modulation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38cyp",
                "entity_name": "Highly parallel and sensitive method for identifying drugs and drug targets"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ll51",
                "entity_name": "Mitofusins, Fzo Homologs and functional derivatives thereof: U.S. Patent No. 6,953,680"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpr9",
                "entity_name": "Ceramic/metal and A15/metal superconducting composite materials exploiting the superconducting proximity effect and method of making the same: U.S. Patent No. 5,998,336"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lw1y",
                "entity_name": "Bi-directional synthesis of oligoguanidine transport agents: U.S. Patent No. 7,067,698"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n4pd",
                "entity_name": "Charge multiplexed array of solid-state photosensitive detectors: U.S. Patent No. 7,495,201"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5ks",
                "entity_name": "Eliciting analgesia by transcranial electrical stimulation: U.S. Patent No. 6,567,702"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmnx",
                "entity_name": "Sonar based drowning monitor: U.S. Patent No. 7,330,123"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388by",
                "entity_name": "Methods and compositions for determining risk of treatment toxicity"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m7zc",
                "entity_name": "Modular, wireless damage monitoring system for structures: U.S. Patent No. 6,292,108"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_90",
                "entity_name": "Method to track three-dimensional target motion with a dynamical multi-leaf collimator"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37q1s",
                "entity_name": "Nitroreductase enzymes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n985",
                "entity_name": "Method for selecting beam orientations in intensity modulated radiation therapy: U.S. Patent No. 6,504,899"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ncd0",
                "entity_name": "Method for checking positional accuracy of the leaves of a multileaf collimator: U.S. Patent No. 6,891,178"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ncf8",
                "entity_name": "Verification method of monitor units and fluence map in intensity modulated radiation therapy: U.S. Patent No. 6,697,452"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37thz",
                "entity_name": "Cross-linked organic thin-film dielectrics"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vkt",
                "entity_name": "Light-driven energy generation using proteorhodopsin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37x_5",
                "entity_name": "Dimension measurement approach for metal-material"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387zv",
                "entity_name": "Electrically addressable liquid dispenser"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3897w",
                "entity_name": "Biplanar homogeneous field electromagnets and method for making same"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3kb0t",
                "entity_name": "Biplanar homogeneous field electromagnets and method for making same: U.S. Patent No. 6,208,143"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljg5",
                "entity_name": "Optical cavity emitter arrangements with spectral alignment and methods therefor: U.S. Patent No. 7,994,467"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljw8",
                "entity_name": "MR compatible rotating anode x-ray tube: U.S. Patent No. 7,701,215"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lm1t",
                "entity_name": "Chemical micromachined microsensors: U.S. Patent No. 7,305,883"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n718",
                "entity_name": "Prevention of deficits in neurogenesis with anti-inflammatory agents: U.S. Patent No. 7,998,460"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nb3n",
                "entity_name": "Treatment planning method and apparatus for radiosurgery and radiation therapy: U.S. Patent No. 5,458,125"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llmf",
                "entity_name": "Fluorescent glycosides and methods for their use: U.S. Patent No. 7,423,133"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j386rm",
                "entity_name": "Distributed acoustic reverberation for audio collaboration"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rhd",
                "entity_name": "Dynamic resource allocation and media access control for a wireless ATM network"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37s1d",
                "entity_name": "Adaptive control for mitigating interference in a multimode transmission medium"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38d0t",
                "entity_name": "Multiplexed assay and probes for identification of HPV types"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jcpn",
                "entity_name": "Fuel cell: U.S. Patent No. 7,341,800"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3kgxx",
                "entity_name": "Methods of reducing angiogenesis: U.S. Patent No. 7,390,821"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lh3s",
                "entity_name": "Miniature scanning confocal microscope: U.S. Patent No. 5,907,425"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lh5k",
                "entity_name": "Miniature scanning confocal microscope: U.S. Patent No. 6,154,305"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vxq",
                "entity_name": "GPS control of a tractor-towed implement"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37w05",
                "entity_name": "Methods for analysis of large sets of multiparameter data"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37wmx",
                "entity_name": "Microfabricated apertures for supporting bilayer lipid membranes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388wy",
                "entity_name": "Sub-micron object control arrangement and approach therefor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lk2f",
                "entity_name": "Adaptive optical signal processing with multimode waveguides: U.S. Patent No. 7,509,002"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ll77",
                "entity_name": "In vivo models for rabGEF1-dependent signaling and functions: U.S. Patent No. 7,365,239"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llds",
                "entity_name": "Ligand-regulable transactivation systems, methods of use thereof, methods of detecting estrogen receptor ligands, and methods of differentiating estrogen receptor ligand agonists and antagonists: U.S. Patent No. 8,076,159"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpbm",
                "entity_name": "Internet-linked system for directory protocol based data storage, retrieval and analysis: U.S. Patent No. 7,650,351"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpf_",
                "entity_name": "System and method for internet-accessible tools and knowledge base for protocol design, metadata capture and laboratory experiment management: U.S. Patent No. 7,555,492"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ltf8",
                "entity_name": "Methods for diagnosing and evaluating treatment of blood disorders: U.S. Patent No. 7,514,229"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5_7",
                "entity_name": "Method for pre-identification of spectral overlaps within fluorescent dye and detector combinations used in flow cytometry: U.S. Patent No. 7,932,503"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n73z",
                "entity_name": "Phase-sensitive method of radio-frequency field mapping for magnetic resonance imaging: U.S. Patent No. 6,268,728"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9rg",
                "entity_name": "Atomic force microscopy devices, arrangements and systems: U.S. Patent No. 8,082,593"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnh9b",
                "entity_name": "Apparatus and method for phased subarray imaging: U.S. Patent No. 7,972,271"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhgv",
                "entity_name": "Translating active Gurney flap to alleviate aircraft wake vortex hazard: U.S. Patent No. 7,740,206"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0505x",
                "entity_name": "Mimeograph"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cpk7",
                "entity_name": "Incandescent light bulb"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3874_",
                "entity_name": "Method of making an ultracapacitor electrode"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3877_",
                "entity_name": "Drying an ultracapacitor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38823",
                "entity_name": "Method and system for using tissue-scattered coincidence photons for imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38bb2",
                "entity_name": "High-speed inter-modality image registration via iterative feature matching"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lgv0",
                "entity_name": "T cell regulatory genes and methods of use thereof: U.S. Patent No. 7,553,939"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lgw3",
                "entity_name": "Method of converting a Th2-type allergic immune response into a Th1-type immune response: U.S. Patent No. 6,086,898"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lgx6",
                "entity_name": "Adjuvant therapy: U.S. Patent No. 7,214,380"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljr_",
                "entity_name": "Scatter correction for x-ray imaging using modulation of primary x-ray spatial spectrum: U.S. Patent No. 7,463,712"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llrz",
                "entity_name": "Method of subspace beamforming using adaptive transmitting antennas with feedback: U.S. Patent No. 5,634,199"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lltf",
                "entity_name": "Method for minimizing cross-talk in adaptive transmission antennas: U.S. Patent No. 5,471,647"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lm3y",
                "entity_name": "Low cost fabrication of microelectrode arrays for cell-based biosensors and drug discovery methods: U.S. Patent No. 7,501,301"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmyz",
                "entity_name": "Hydroxide-catalyzed bonding: U.S. Patent No. 6,548,176"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnd0",
                "entity_name": "Live-cell biosensor polypeptides and methods of use: U.S. Patent No. 7,655,434"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lvnz",
                "entity_name": "Methods for use in three-dimensional structural determination: U.S. Patent No. 6,604,052"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mbkr",
                "entity_name": "Detection of chemical ligation using fluorescence quenching leaving groups: U.S. Patent No. 7,749,699"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n63w",
                "entity_name": "Diminishing variance process for real-time reduction of motion artifacts in MRI: U.S. Patent No. 5,427,101"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38c9d",
                "entity_name": "Patterned growth of single-walled carbon nanotubes from elevated wafer structures"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3k1f7",
                "entity_name": "Germanium substrate-type materials and approach therefor: U.S. Patent No. 7,495,313"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ln5w",
                "entity_name": "Catalytic compositions and methods for asymmetric allylic alkylation: U.S. Patent No. 6,130,349"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ln9l",
                "entity_name": "Catalytic compositions and methods for asymmetric allylic alkylation: U.S. Patent No. 6,747,152"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lq6k",
                "entity_name": "Screening for agents that modulate relaxin function: U.S. Patent No. 7,531,313"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ls6r",
                "entity_name": "Catalytic compositions and methods for asymmetric aldol reactions: U.S. Patent No. 6,919,456"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n82h",
                "entity_name": "Use of .beta.-catenin in the expansion of stem and progenitor cells: U.S. Patent No. 6,465,249"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n86z",
                "entity_name": "Detection of nucleic acid heteroduplex molecules by denaturing high-performance liquid chromatography and methods for comparative sequencing: U.S. Patent No. 5,795,976"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbyr",
                "entity_name": "Method of coating an electrospray emitter: U.S. Patent No. 7,446,311"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j8t3r_",
                "entity_name": "Gating device and driver for modulation of charged particle beams: U.S. Patent No. 7,067,803"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388gb",
                "entity_name": "Atomic force microscopy data storage system with tracking servo from lateral force-sensing cantilever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389t1",
                "entity_name": "Nucleic acid encoding human DNA polymerase .alpha."
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmbt",
                "entity_name": "Agents for treatment of HCV and methods of use: U.S. Patent No. 7,326,536"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmk5",
                "entity_name": "Composite thermal interface material including particles and nanofibers: U.S. Patent No. 7,504,453"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m4nt",
                "entity_name": "Method of detecting directly undetectable analytes using directly detectable spacer molecules: U.S. Patent No. 7,951,278"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8kn",
                "entity_name": "Wireless communication system with adaptive beam selection: U.S. Patent No. 6,438,389"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdng59",
                "entity_name": "Diamondoid monolayers as electron emitters: U.S. Patent No. 8,154,185"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05bh8r2",
                "entity_name": "Kinematograph Apparatus for the Production of Colored Pictures"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05yn93f",
                "entity_name": "US Patent 17722 - Brown truss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37v97",
                "entity_name": "System and method of parallel imaging with calibration to a separate coil"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xj_",
                "entity_name": "Self-calibration methods for parallel imaging and multipoint water-fat separation methods"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvyf",
                "entity_name": "US patent 230309 - Electric lamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvyx",
                "entity_name": "US patent 247084 - Incandescent Electric Lamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_b3",
                "entity_name": "Dialogue management using scripts"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vwm",
                "entity_name": "Determination and control of vehicle sideslip using GPS"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xsy",
                "entity_name": "Moving table MRI with frequency-encoding in the z-direction"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387j7",
                "entity_name": "Optimized spectral-spatial pulse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lh75",
                "entity_name": "Miniature scanning confocal microscope: U.S. Patent No. 6,749,346"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lq0h",
                "entity_name": "Apparatus and method for capturing a scene using staggered triggering of dense camera arrays: U.S. Patent No. 8,027,531"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5vk",
                "entity_name": "Calibration maps for parallel imaging free of chemical shift artifact: U.S. Patent No. 7,741,842"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37sdr",
                "entity_name": "Method and apparatus for modulating a light beam"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37shk",
                "entity_name": "Method of making a deformable grating apparatus for modulating a light beam and including means for obviating stiction between grating elements and underlying substrate"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37yw6",
                "entity_name": "Genes involved in neuropsychiatric disorders"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zxb",
                "entity_name": "Methods and compositions for genomic modification"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38dtj",
                "entity_name": "Press"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3k1wk",
                "entity_name": "Germanium substrate-type materials and approach therefor: U.S. Patent No. 7,772,078"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhcj",
                "entity_name": "Motor control amplifier: U.S. Patent No. 7,710,061"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpv5",
                "entity_name": "Dynamic wake prediction and visualization with uncertainty analysis: U.S. Patent No. 6,963,291"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n6_s",
                "entity_name": "Interconnect circuit for data transmission in an integrated circuit: U.S. Patent No. 6,853,679"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n7vs",
                "entity_name": "Device and method for medical interventions of body lumens: U.S. Patent No. 7,549,974"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbxn",
                "entity_name": "Compounds for activating TGF-.beta. signaling: U.S. Patent No. 8,097,645"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3884d",
                "entity_name": "Semiconductor device manufacturing method to reduce process induced stress and crystalline defects"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmdg",
                "entity_name": "Robust motion correction for functional magnetic resonance imaging: U.S. Patent No. 8,055,041"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkxn",
                "entity_name": "Interpenetrating polymer network hydrogel corneal prosthesis: U.S. Patent No. 7,909,867"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvzc",
                "entity_name": "US patent 283629 - Electric Lamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lp7f",
                "entity_name": "Circadian rhythm reset method and device: U.S. Patent No. 6,623,512"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38bp_",
                "entity_name": "Method and system for chalcogenide-based nanowire memory"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388d0",
                "entity_name": "Cooling by resonator-induced coherent scattering of radiation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n4_m",
                "entity_name": "Fabrication of group III-nitride photocathode having Cs activation layer: U.S. Patent No. 7,455,565"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37s46",
                "entity_name": "Coupled photonic crystal resonator array arrangements and applications"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387nn",
                "entity_name": "Noncovalent sidewall functionalization of carbon nanotubes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387pr",
                "entity_name": "Photodesorption in carbon nanotubes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lgy0",
                "entity_name": "Optoelectronic switch having cascaded optical nodes: U.S. Patent No. 7,466,914"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lh7_",
                "entity_name": "Miniature scanning confocal microscope: U.S. Patent No. 6,088,145"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lm9p",
                "entity_name": "Methods and compositions for identifying anti-HCV agents: U.S. Patent No. 7,655,419"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lqbh",
                "entity_name": "Blip design for random sampling compressed sensing of flyback 3D-MRSI: U.S. Patent No. 7,659,718"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbr3",
                "entity_name": "Method of improved magnetic resonance spectroscopic localization using spectral-spatial pulses: U.S. Patent No. 6,304,084"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37wh6",
                "entity_name": "Method and apparatus for B.sub.0 eddy current compensation by B.sub.1 phase modulation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387kb",
                "entity_name": "Hyperpolarized dynamic chemical shift imaging with tailored multiband excitation pulses"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m3d0",
                "entity_name": "Method and apparatus for correcting gradient system and static magnetic field in magnetic resonance imaging: U.S. Patent No. 5,905,377"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37s59",
                "entity_name": "Optical communication with phase encoding and phase shifting"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38769",
                "entity_name": "Sealed ultracapacitor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387h3",
                "entity_name": "Modulation of T cell signaling threshold and T cell sensitivity to antigens"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhk1",
                "entity_name": "Puck interface adapter including drivers for interfacing serial device to host wherein puck implements command mode and pass through mode: U.S. Patent No. 6,901,464"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lk8j",
                "entity_name": "Polypeptide complex that regulates cell cycle and anergy: U.S. Patent No. 7,964,369"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n4vm",
                "entity_name": "Tubular compliant mechanisms for ultrasonic imaging systems and intravascular interventional devices: U.S. Patent No. 7,115,092"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5sg",
                "entity_name": "Method for forming a nitrided germanium-containing layer using plasma processing: U.S. Patent No. 7,517,818"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n55r",
                "entity_name": "CMOS power amplifier with reduced harmonics and improved efficiency: U.S. Patent No. 6,359,513"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnk80",
                "entity_name": "Artifact reduction in SSFP MRI using super field view reconstruction: U.S. Patent No. 7,132,828"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zy_",
                "entity_name": "Multi-ring resonator system and method"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m2hf",
                "entity_name": "Method of making a nanogap for variable capacitive elements, and device having a nanogap: U.S. Patent No. 7,172,917"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388hf",
                "entity_name": "High-k dielectric for thermodynamically-stable substrate-type materials"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388jy",
                "entity_name": "Germanium substrate-type materials and approach therefor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljqx",
                "entity_name": "Memory circuit with quantum well-type carrier storage: U.S. Patent No. 8,064,239"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389hl",
                "entity_name": "Nicotine in therapeutic angiogenesis and vasculogenesis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lj7z",
                "entity_name": "Gate for modulating beam of charged particles and method for making same: U.S. Patent No. 6,664,545"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkyr",
                "entity_name": "Method and apparatus for improved temporal resolution in dynamic MRI: U.S. Patent No. 5,653,233"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lp6b",
                "entity_name": "Process for preparing a patterned continuous polymeric brush on a substrate surface: U.S. Patent No. 6,423,465"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mcgh",
                "entity_name": "Compositions and methods for high throughput screening of pharmacological chaperones: U.S. Patent No. 7,790,364"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8_l",
                "entity_name": "Magnetic resonance imaging with fat-water signal separation: U.S. Patent No. 6,856,134"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8cv",
                "entity_name": "Method for characterizing shapes in medical images: U.S. Patent No. 7,043,064"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37tkq",
                "entity_name": "Method of forming organic thin film and method of manufacturing semiconductor device using the same"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37tpl",
                "entity_name": "Method for encoding and decoding digital data in holographic storage media"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xl2",
                "entity_name": "Apparatus and method for socially intelligent virtual entity"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmrx",
                "entity_name": "Systems and methods for using visual hulls to determine the number of people in a crowd: U.S. Patent No. 6,987,885"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lq5d",
                "entity_name": "Intermedin and its uses: U.S. Patent No. 6,965,013"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01292yrz",
                "entity_name": "Method and means for recognizing complex patterns"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37tww",
                "entity_name": "Backswitch poling method for domain patterning of ferroelectric materials"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vp9",
                "entity_name": "Artificial synapse chip"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xd_",
                "entity_name": "Cell-free extracts and synthesis of active hydrogenase"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lh_p",
                "entity_name": "CMOS image sensor system with self-reset digital pixel architecture for improving SNR and dynamic range: U.S. Patent No. 6,927,796"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhxg",
                "entity_name": "Thin and thick gate oxide transistors on a functional block of a CMOS circuit residing within the core of an IC chip: U.S. Patent No. 6,642,543"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkh3",
                "entity_name": "Retinal light processing using carbon nanotubes: U.S. Patent No. 6,755,530"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkj6",
                "entity_name": "Interface for making spatially resolved electrical contact to neural cells in a biological neural network: U.S. Patent No. 7,058,455"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkk9",
                "entity_name": "Optically controlled microfluidic chip: U.S. Patent No. 7,556,621"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkms",
                "entity_name": "Bucky paper as a support membrane in retinal cell transplantation: U.S. Patent No. 7,135,172"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8j9",
                "entity_name": "Method for pulse shape design for OFDM: U.S. Patent No. 7,656,786"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8w6",
                "entity_name": "Volumetric computed tomography (VCT): U.S. Patent No. 7,072,436"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04zjmqn",
                "entity_name": "Patent for Screw Pile Foundations"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37z0b",
                "entity_name": "Distortion-free magnetic resonance imaging near metallic implants"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n52b",
                "entity_name": "Magnetic resonance field map estimation for species separation: U.S. Patent No. 7,924,002"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n53f",
                "entity_name": "Method and apparatus for field map estimation: U.S. Patent No. 7,952,353"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37w8p",
                "entity_name": "Sequential reporter enzyme luminescence (SRL) methods and compositions for practicing the same"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnhfy",
                "entity_name": "Method of preparing fuel cell comprising proton conducting solid perovskite electrolyte membrane with improved low temperature ion conductivity, and membrane electrode assembly of fuel cell prepared by the method: U.S. Patent No. 7,691,523"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37skw",
                "entity_name": "Ultrashort-pulse source with controllable wavelength output"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37wsp",
                "entity_name": "User-retainable temperature and impedance monitoring methods and devices"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38dr8",
                "entity_name": "Viral vectors useful in induction of humoral or cellular immunity"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ll33",
                "entity_name": "Mitofusin genes and their uses: U.S. Patent No. 6,127,159"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmwr",
                "entity_name": "3D cones gradient waveform generation: U.S. Patent No. 7,548,062"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nb0c",
                "entity_name": "Detection of toxigenic marine diatoms of the genus Pseudo-nitzschia: U.S. Patent No. 5,958,689"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkq6",
                "entity_name": "Collection mode lens system: U.S. Patent No. 6,477,298"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5lx",
                "entity_name": "X-ray collimator for imaging with multiple sources and detectors: U.S. Patent No. 7,496,181"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnt4",
                "entity_name": "Electrostatically tunable optical device and optical interconnect for processors: U.S. Patent No. 5,291,502"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37q_9",
                "entity_name": "Nitroreductase enzymes for bioremediation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lgz3",
                "entity_name": "Semiconductor device for rapid optical switch by modulated absorption: U.S. Patent No. 6,680,791"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09tgj4p",
                "entity_name": "Passive nonlinear filter for digital musical sound synthesizer and method"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lqh0",
                "entity_name": "Electroosmotic micropumps with applications to fluid dispensing and field sampling: U.S. Patent No. 7,231,839"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5fk",
                "entity_name": "Spatially distributed SMA actuator film providing unrestricted movement in three dimensional space: U.S. Patent No. 5,405,337"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xw7",
                "entity_name": "MRI method and apparatus for selective image suppression of material based on T1 and T2 relation times"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389cf",
                "entity_name": "Inversion recovery MRI"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38br2",
                "entity_name": "Artifact reduction in steady-state free precession imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38bs5",
                "entity_name": "Enhanced spectral selectivity for steady-state free precession imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38bt8",
                "entity_name": "Multiple repetition time steady-state free precession imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lns1",
                "entity_name": "Catalyzing the transient response in steady-state MRI sequences: U.S. Patent No. 6,452,387"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nb__",
                "entity_name": "Dipole induced transparency drop-filter cavity-waveguide system: U.S. Patent No. 7,630,604"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xxb",
                "entity_name": "Time-of-flight mass spectrometer and ion analysis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38d66",
                "entity_name": "Arrangements for satellite-based navigation and methods therefor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n6ww",
                "entity_name": "Nanotube logic circuits: U.S. Patent No. 7,911,234"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8nb",
                "entity_name": "Method and apparatus for reconstruction of non-uniformly sampled data: U.S. Patent No. 6,975,751"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03sfz2d",
                "entity_name": "Programmable branch prediction system and method for inserting prediction operation which is independent of execution of program code"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnj5k",
                "entity_name": "Method to discriminate arrhythmias in cardiac rhythm management devices: U.S. Patent No. 8,204,581"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnjz7",
                "entity_name": "Continuous fluoroscopic MRI using spiral k-space scanning: U.S. Patent No. 5,485,086"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38839",
                "entity_name": "Band-structure modulation of nano-structures in an electric field"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvy1",
                "entity_name": "US patent 208252 - Electric lamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvy4",
                "entity_name": "US patent 230310 - Electric lamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvy7",
                "entity_name": "US patent 230953 - Electric lamps"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvy_",
                "entity_name": "US patent 247085 - Process of Manufacturing Carbon Conductors"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvyb",
                "entity_name": "US patent 230954 - Process for removing air from globes of electric lamps"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvyj",
                "entity_name": "US patent 234835 - Electrical lamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvym",
                "entity_name": "US patent 237198 - Process of manufacturing carbon conductors"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvyq",
                "entity_name": "US patent 244277 - Electric Lamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvyt",
                "entity_name": "US patent 247083 - Process of Manufacturing Carbons"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvz2",
                "entity_name": "US patent 247380 - Electric Lamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvz5",
                "entity_name": "US patent 255308 - Electrical meter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvz8",
                "entity_name": "US patent 277846 - Process of Manufacturing Carbons for Incandescent Lamps"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvzg",
                "entity_name": "US patent 405239 - Apparatus for the Manufacture of Filaments for Incandescent Lamps"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvzk",
                "entity_name": "US patent 405170 - Manufacture of Filaments for Electric Lamps"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvzn",
                "entity_name": "US patent 430212 - Manufacture of explosive"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvzr",
                "entity_name": "US patent 618703 - Apparatus for Manufacturing Filaments for Electric Lamps"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnjgf",
                "entity_name": "Organic semiconductors and growth approaches therefor: U.S. Patent No. 8,119,445"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_44",
                "entity_name": "Effect of the plasmonic dispersion relation on the transmission properties of subwavelength holes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37s72",
                "entity_name": "Optical communication with phase encoding and optical filtering"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387mk",
                "entity_name": "Apparatus and method for an electronically tuned, wavelength-dependent optical detector"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lp1c",
                "entity_name": "Optical imaging system having an illumination source between object and image: U.S. Patent No. 7,504,613"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n4n7",
                "entity_name": "Method and system of adaptive exposure for a camera: U.S. Patent No. 7,777,191"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lj5q",
                "entity_name": "Multizone bake/chill thermal cycling module: U.S. Patent No. 5,802,856"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j8t3m0",
                "entity_name": "Feeder layer and serum independent embryonic stem cells: U.S. Patent No. 7,641,897"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdngxd",
                "entity_name": "Delayed decision feedback sequence estimator: U.S. Patent No. 8,116,366"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37t6k",
                "entity_name": "Power controlled multiple access (PCMA) in wireless communication networks"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zdk",
                "entity_name": "Micromachined high reflectance deformable mirror"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zl8",
                "entity_name": "Method using a monolithic crystalline material for producing radiation by quasi-phase-matching, diffusion bonded monolithic crystalline material for quasi-phase-matching, and method for fabricating same"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389fm",
                "entity_name": "Nicotine receptor agonists in stem cell and progenitor cell recruitment"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389m_",
                "entity_name": "Methods of reducing angiogenesis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3j98x",
                "entity_name": "Electric field domain patterning: U.S. Patent No. 6,156,255"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3kcz_",
                "entity_name": "Nicotine receptor agonists in stem cell and progenitor cell recruitment: U.S. Patent No. 6,720,340"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3kdtl",
                "entity_name": "Nicotine in therapeutic angiogenesis and vasculogenesis: U.S. Patent No. 6,417,205"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387fk",
                "entity_name": "Self-oriented bundles of carbon nanotubes and method of making same: US Patent No. 6,900,580"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3890m",
                "entity_name": "Imaging device for optically extracting features of an object"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389dj",
                "entity_name": "Workspace expansion controller for human interface systems"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lh9x",
                "entity_name": "Method and apparatus for adaptive transmission beam forming in a wireless communication system: U.S. Patent No. 6,665,545"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhbq",
                "entity_name": "Method and apparatus for adaptive transmission beam forming in a wireless communication system: U.S. Patent No. 7,286,855"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lk55",
                "entity_name": "Creating large bandwidth line defects by embedding dielectric waveguides into photonic crystal slabs: U.S. Patent No. 6,957,003"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkg0",
                "entity_name": "Learning enhanced simulated annealing: U.S. Patent No. 7,840,504"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03k0n64",
                "entity_name": "#223898"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37szx",
                "entity_name": "Data normalization in inverse geometry computed tomography system"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xrs",
                "entity_name": "MRI methods for combining separate species and quantifying a species"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkvg",
                "entity_name": "Human neutralizing monoclonal antibodies to H5N1 influenza A virus: U.S. Patent No. 7,879,326"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnbr",
                "entity_name": "Long-wavelength FPs: U.S. Patent No. 7,326,771"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mfj0",
                "entity_name": "Polymerase chain reaction assays for monitoring antiviral therapy and making therapeutic decisions in the treatment of acquired immunodeficiency syndrome: U.S. Patent No. 5,856,086"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n7lx",
                "entity_name": "Method for beam hardening correction in quantitative computed X-ray tomography: U.S. Patent No. 6,324,240"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09thblc",
                "entity_name": "Sound Reproduction System"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37r8y",
                "entity_name": "Compositions and methods for diagnosing and treating neuropsychiatric disorders"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rb0",
                "entity_name": "Compositions and methods for diagnosing and treating mood disorders"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37smb",
                "entity_name": "Aperiodic quasi-phasematching gratings for chirp adjustments and frequency conversion of ultra-short pulses"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vg7",
                "entity_name": "Polyp identification through subtraction of models of medical images"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vqv",
                "entity_name": "Method of control leukocyte extravasation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389x8",
                "entity_name": "Drug design assay using human DNA polymerase .alpha.-catalytic polypeptide"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mk4c",
                "entity_name": "Multiplex cellular assays using detectable cell barcodes: U.S. Patent No. 8,003,312"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01039r0s",
                "entity_name": "U.S. Patent 4378116 - Spatial logical toy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012014pl",
                "entity_name": " US Patent D47789 "
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.022qzwl",
                "entity_name": "Microorganisms having multiple compatible degradative energy-generating plasmids and preparation thereof"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02k76d4",
                "entity_name": "Digital cartoon and animation process"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03jp6n3",
                "entity_name": "US775134"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.043jf_s",
                "entity_name": "Systems and method for resolving ambiguity"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04_h_9b",
                "entity_name": "confocal scanning microscope"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04_h_rk",
                "entity_name": "First Head-Mounted Graphical Display"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05m585v",
                "entity_name": "Method and system for filtering text messages"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08vcq9y",
                "entity_name": "Electronic still camera"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gb56p8",
                "entity_name": "Improvement in Adjustable and Detachable Straps for Garments"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gb56s7",
                "entity_name": "Memory Builder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hzy_q1",
                "entity_name": "6,004,596"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_1z",
                "entity_name": "System and method for detecting integrated circuit pattern defects"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_57",
                "entity_name": "Integrated waveguide and method for designing integrated waveguide"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_6b",
                "entity_name": "System and method for estimating physical properties of objects and illuminants in a scene using modulated light emission"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_7x",
                "entity_name": "Integrated color pixel (ICP)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_h8",
                "entity_name": "Fuel cell assembly and method for making the same"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37psp",
                "entity_name": "Universal linker compositions for the release or transfer of chemical agents from a polynucleotide"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37pxk",
                "entity_name": "Method for matching and registering medical image data"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37qyc",
                "entity_name": "Three-dimensional pattern recognition method to detect shapes in medical images"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37qz1",
                "entity_name": "Heat diffusion based detection of structures of interest in medical images"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37r3y",
                "entity_name": "Concurrent frequency-sharing multi-user communication system with rate allocation approach"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37r5g",
                "entity_name": "Binary translation using peephole translation rules"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37r6k",
                "entity_name": "Isolation of mesenchymal stem cells"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37r7p",
                "entity_name": "Casting sharpened microminiature tips"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37r_6",
                "entity_name": "Flow imaging using balanced phase contrast steady state free precession magnetic resonance imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rdh",
                "entity_name": "Motion corrected magnetic resonance imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rjx",
                "entity_name": "GPS/INS vehicle attitude system"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rl1",
                "entity_name": "Method of fabricating cantilever for atomic force microscope having piezoresistive deflection detector"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rwx",
                "entity_name": "Method for temporally resolved, three-dimensional MR volume acquisitions"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rz3",
                "entity_name": "Modified X-ray tube for use in the presence of magnetic fields"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37s2h",
                "entity_name": "High regression rate hybrid rocket propellants"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37s85",
                "entity_name": "Micro-optical analysis system and approach therefor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37s9b",
                "entity_name": "Two-reporter FACS analysis of mammalian cells using green fluorescent proteins"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37snz",
                "entity_name": "Process for displaying and navigating panoramic video, and method and user interface for streaming panoramic video and images between a server and browser-based client application"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37t9t",
                "entity_name": "Data throughput over lossy communication links"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37tn2",
                "entity_name": "Method and system of using intrinsic-based photosensing with high-speed line scanning for characterization of biological thick tissue including muscle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vjp",
                "entity_name": "Nonlinear optical frequency converter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vr_",
                "entity_name": "Method to control leukocyte extravasation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37w5l",
                "entity_name": "Semi-definite programming method for ad hoc network node localization"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37wcp",
                "entity_name": "Isolation, growth, differentiation and genetic engineering of human muscle cells"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37wqb",
                "entity_name": "Anergy associated genes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xcx",
                "entity_name": "Optimization and design method for configurable analog circuits and devices"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xg8",
                "entity_name": "Fuel cell"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xng",
                "entity_name": "Method, apparatus and computer program for capturing motion of a cartoon and retargetting the motion to another object"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xqp",
                "entity_name": "Homodyne reconstruction of water and fat images based on iterative decomposition of MRI signals"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xv1",
                "entity_name": "Sliding window reconstruction and phase/field map updating for dynamic chemical shift imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xyf",
                "entity_name": "Induction of immune response to antigens expressed by recombinant adeno-associated virus"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37y1g",
                "entity_name": "Anaerobe targeted enzyme-mediated prodrug therapy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37y3m",
                "entity_name": "Anaerobe targeted enzyme mediated prodrug therapy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37yh4",
                "entity_name": "Microarrays of polypeptides"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37ym2",
                "entity_name": "Method for analyzing gene expression patterns"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37ypc",
                "entity_name": "Microarray for determining the relative abundances of polynuceotide sequences"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37ys_",
                "entity_name": "System and method for performing compound vector operations"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37yxh",
                "entity_name": "Target for regulating multiple sclerosis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37yz4",
                "entity_name": "Reduction of blurring in view angle tilting MRI"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37z3z",
                "entity_name": "Non-invasive measurement of frozen tissue temperature using MRI signal"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37z6r",
                "entity_name": "Mitigation of photodarkening to achieve laser oscillation and amplification with highly doped fibers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zcg",
                "entity_name": "Laser-driven deflection arrangements and methods involving charged particle beams"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zfq",
                "entity_name": "Method of electrically controlling regions of ferroelectric polarization domains in solid state bodies"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zh1",
                "entity_name": "Method of controlling regions of ferroelectric polarization domains in solid state bodies"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zhw",
                "entity_name": "Monolithic total internal reflection optical resonator"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zk5",
                "entity_name": "Transverse-pumped sLAB laser/amplifier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zr3",
                "entity_name": "Patterned poled structure devices having increased aperture size, increased power handling and three dimensional patterning capabilities"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j386qh",
                "entity_name": "Osteopontin-related compositions and methods"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j386vz",
                "entity_name": "Dual-axis confocal microscope having improved performance for thick samples"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j386x1",
                "entity_name": "Modified antisense nucleotides complementary to a section of the human Ha-ras gene"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j386zf",
                "entity_name": "Extendable connector and network"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387cm",
                "entity_name": "Electrostatically-controlled cantilever apparatus for continuous tuning of the resonance wavelength of a fabry-perot cavity"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387dq",
                "entity_name": "High performance micromechanical tunable verticle cavity surface emitting laser"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387r_",
                "entity_name": "Crystalline-type device and approach therefor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3887b",
                "entity_name": "Method for equalizing a multicarrier signal in a multicarrier communication system"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3888j",
                "entity_name": "Method and apparatus for adaptive, variable bandwidth, high-speed data transmission of a multicarrier signal over digital subscriber lines"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388_1",
                "entity_name": "Methods and compositions for treating a subject having an anthrax toxin mediated condition"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388f6",
                "entity_name": "Methods of bonding optical structures, bonding and silylation of optical structures, bonded optical structures, and silylated bonded optical structures"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388n2",
                "entity_name": "Method and apparatus for respiratory audio-visual biofeedback for imaging and radiotherapy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388qd",
                "entity_name": "Peak to average power ratio reduction"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388tj",
                "entity_name": "Cytotoxic T-cell lymphocyte (\"CTL\") activity regulation by class I MHC peptides"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388vn",
                "entity_name": "Immunomodulating dimers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388y0",
                "entity_name": "Modulating SOS response induction by antimicrobial agents"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3891t",
                "entity_name": "Methods and compositions for regeneration of aged skeletal muscle tissues"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38945",
                "entity_name": "Method of making optimized, air-core electromagnets"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38958",
                "entity_name": "Method for designing electromagnets having arbitrary geometrical constraints"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3896q",
                "entity_name": "Short bore-length asymmetric electromagnets for magnetic resonance imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389b9",
                "entity_name": "Correction of local field inhomogeneity in magnetic resonance imaging apparatus"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389vn",
                "entity_name": "Mutagenicity screening method using human DNA polymerase or catalytic polypeptide"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389zy",
                "entity_name": "FACS-optimized mutants of the green fluorescent protein (GFP)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38b8z",
                "entity_name": "Efficient radio signal diversity combining using a small set of discrete amplitude and phase weights"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38bjz",
                "entity_name": "NF-AT polynucleotides"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38bnw",
                "entity_name": "Methods of identifying anti-viral agents"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38bx4",
                "entity_name": "RF field mapping for magnetic resonance imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38bzt",
                "entity_name": "System and method for computing cumulative densities of data represented by gaussian distributions"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38c15",
                "entity_name": "Carbon nanotube devices"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38c62",
                "entity_name": "Integrated nanotube sensor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38c75",
                "entity_name": "Nanoparticles with controlled growth"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38ccl",
                "entity_name": "Drug delivery platform"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38cvq",
                "entity_name": "DNA fingerprinting using a branch migration assay"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38d23",
                "entity_name": "Automatic phase alignment for high-bandwidth cartesian-feedback power amplifiers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38d36",
                "entity_name": "Predicting changes in hydrofrac orientation in depleting oil and gas reservoirs"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38dbc",
                "entity_name": "Resolution of dynamic memory allocation/deallocation and pointers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38dsd",
                "entity_name": "Scroll manufacturing tool"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3j97j",
                "entity_name": "Electric field domain patterning: U.S. Patent No. 5,800,767"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3j986",
                "entity_name": "Electric field domain patterning: U.S. Patent No. 6,013,221"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jcq_",
                "entity_name": "Fuel cell: U.S. Patent No. 7,670,699"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jcqb",
                "entity_name": "Fuel cell: U.S. Patent No. 7,700,218"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jdhg",
                "entity_name": "Methods for fabricating microarrays of biological samples: U.S. Patent No. 5,807,522"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jf_9",
                "entity_name": "Fuel cell assembly: U.S. Patent No. 7,108,936"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jfc0",
                "entity_name": "Fuel cell and method for making the same: U.S. Patent No. 7,273,671"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jkwb",
                "entity_name": "Extendable connector and network: U.S. Patent No. 7,834,424"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jql2",
                "entity_name": "Self-oriented bundles of carbon nanotubes and method of making same: U.S. Patent No. 6,232,706"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jvc0",
                "entity_name": "Crystalline-type device and approach therefor: U.S. Patent No. 7,749,872"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3k3yv",
                "entity_name": "Peak to average power ratio reduction: U.S. Patent No. 6,424,681"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3l863",
                "entity_name": "Carbon nanotube devices: U.S. Patent No. 7,416,699"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3l_32",
                "entity_name": "Adenoviral vector and methods for making and using the same: U.S. Patent No. 7,045,344"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3l_gv",
                "entity_name": "Liver-specific gene expression cassettes, and methods of use: U.S. Patent No. 7,351,813"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lgpf",
                "entity_name": "DNA fingerprinting using a branch migration assay: U.S. Patent No. 7,238,486"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lgrr",
                "entity_name": "Bioluminescence resonance energy transfer (BRET) systems and methods of use thereof: U.S. Patent No. 7,507,565"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhdn",
                "entity_name": "Thin films having rock-salt-like structure deposited on amorphous surfaces: U.S. Patent No. 6,190,752"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhr9",
                "entity_name": "Serial analog-to-digital converter using successive comparisons: U.S. Patent No. 5,801,657"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhsg",
                "entity_name": "Method and apparatus for converting a low dynamic range analog signal to a large dynamic range floating-point digital representation: U.S. Patent No. 6,369,737"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhtl",
                "entity_name": "Method and apparatus for converting a low dynamic range analog signal to a large dynamic range floating-point digital representation: U.S. Patent No. 6,538,593"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhw9",
                "entity_name": "Methods for simultaneous analog-to-digital conversion and multiplication: U.S. Patent No. 6,362,767"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lj6w",
                "entity_name": "Multipath and tracking error reduction method for spread-spectrum receivers: U.S. Patent No. 6,868,110"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljdv",
                "entity_name": "Optical microcavity emitter arrangements and methods therefor: U.S. Patent No. 7,778,296"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljv5",
                "entity_name": "Adaptive anisotropic filtering of projection data for computed tomography: U.S. Patent No. 7,656,990"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljyg",
                "entity_name": "Photonic crystal reflectors/filters and displacement sensing applications: U.S. Patent No. 7,155,087"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lk09",
                "entity_name": "Photonic crystal reflectors/filters and displacement sensing applications: U.S. Patent No. 7,412,127"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lk19",
                "entity_name": "Adaptive optical signal processing with multimode waveguides: U.S. Patent No. 7,327,914"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lk68",
                "entity_name": "Sensors for electrochemical, electrical or topographical analysis: U.S. Patent No. 7,444,856"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lk7f",
                "entity_name": "Gene therapy for the prevention of autoimmune disease: U.S. Patent No. 7,378,089"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkcv",
                "entity_name": "Apparatus and method for quasi-phase-matched nonlinear frequency mixing between different transverse width modes: U.S. Patent No. 6,970,276"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lknw",
                "entity_name": "Fiber optics digital communication system and method using an optical resonator for optical signal processing: U.S. Patent No. 5,793,513"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkrb",
                "entity_name": "Nogo epitopic fragments for modulating immune response: U.S. Patent No. 7,867,976"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lksg",
                "entity_name": "SleepSmart: U.S. Patent No. 6,468,234"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ll62",
                "entity_name": "Analysis of cerebral white matter for prognosis and diagnosis of neurological disorders: U.S. Patent No. 6,463,315"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ll8b",
                "entity_name": "Protein phosphorylation imaging systems, methods of making phosphorylation imaging systems, and methods of use thereof: U.S. Patent No. 7,834,148"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llbk",
                "entity_name": "Split protein self complementing fragments, systems, and methods of use thereof: U.S. Patent No. 7,601,517"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llhw",
                "entity_name": "Multiple GaInNAs quantum wells for high power applications: U.S. Patent No. 7,645,626"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llps",
                "entity_name": "Apparatus and method employing multilayer thin-film stacks for spatially shifting light: U.S. Patent No. 7,088,884"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llqw",
                "entity_name": "Method for dispersing light using multilayered structures: U.S. Patent No. 6,591,035"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lm51",
                "entity_name": "Video communications in a peer-to-peer network: U.S. Patent No. 7,969,997"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmfx",
                "entity_name": "Method of efficient data encoding in dynamic magnetic resonance imaging: U.S. Patent No. 6,144,873"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmg_",
                "entity_name": "Methods of screening for B cell activity modulators: U.S. Patent No. 6,913,882"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lml8",
                "entity_name": "Negative differential resistance devices and approaches therefor: U.S. Patent No. 7,508,701"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmr2",
                "entity_name": "Chimeric AAV capsid proteins: U.S. Patent No. 8,067,014"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lms_",
                "entity_name": "Oxygen sensor: U.S. Patent No. 5,827,415"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmvb",
                "entity_name": "Solid-state direct methanol thin film fuel cell: U.S. Patent No. 7,811,714"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnf9",
                "entity_name": "Electrostatic ultrasonic transducer: U.S. Patent No. 5,619,476"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lngp",
                "entity_name": "Method of fabricating an electrostatic ultrasonic transducer: U.S. Patent No. 6,004,832"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnj8",
                "entity_name": "DNA-templated combinatorial library chemistry: U.S. Patent No. 7,479,472"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnl7",
                "entity_name": "Gas sensor for ammonia, carbon dioxide and water: U.S. Patent No. 6,787,776"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnmc",
                "entity_name": "Methods for structural analysis of proteins: U.S. Patent No. 7,288,382"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnq3",
                "entity_name": "Independent phase modulation for efficient dual-band 3D imaging: U.S. Patent No. 7,710,115"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnwb",
                "entity_name": "Optical modulator and optical modulator array: U.S. Patent No. 5,909,303"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lp_4",
                "entity_name": "Sputtered silicon for microstructures and microcavities: U.S. Patent No. 6,822,304"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpgy",
                "entity_name": "Methods, software, and systems for knowledge base coordination: U.S. Patent No. 7,734,557"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpj1",
                "entity_name": "Methods for activating peripheral blood mononuclear cells (PBMCs) by administering human immunodeficiency virus (HIV) Tat under physiological oxygen levels: U.S. Patent No. 8,080,369"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpsx",
                "entity_name": "Ceramic superconductor/metal composite materials employing the superconducting proximity effect: U.S. Patent No. 6,420,318"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpw8",
                "entity_name": "Polymerase chain reaction assays for monitoring antiviral therapy and making therapeutic decisions in the treatment of acquired immunodeficiency syndrome: U.S. Patent No. 5,968,730"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpxc",
                "entity_name": "Polymerase chain reaction assays for monitoring antiviral therapy and making therapeutic decisions in the treatment of acquired immunodeficiency syndrome: U.S. Patent No. 6,503,705"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpz1",
                "entity_name": "Method and dosage form using an antagonist to gamma interferon to control MHC-associated autoimmune disease: U.S. Patent No. 6,036,956"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lq30",
                "entity_name": "Multiple interconnected ring oscillator circuit: U.S. Patent No. 5,475,344"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lq43",
                "entity_name": "Array oscillator circuit: U.S. Patent No. 5,717,362"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lq9d",
                "entity_name": "Forward viewing ultrasonic imaging catheter: U.S. Patent No. 5,651,366"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lqy9",
                "entity_name": "Three dimensional magnetic resonance imaging using spiral trajectories in k-space: U.S. Patent No. 6,404,194"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lsn3",
                "entity_name": "Modulation of cell division by an early mitotic inhibitor protein: U.S. Patent No. 7,189,569"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lv5_",
                "entity_name": "Medical diagnostic ultrasound system and method for flow analysis: U.S. Patent No. 6,503,202"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ly5x",
                "entity_name": "Elastomer spatial light modulators for extreme ultraviolet lithography: U.S. Patent No. 7,092,138"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lz1t",
                "entity_name": "Silicon compatible integrated light communicator: U.S. Patent No. 7,875,522"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m12m",
                "entity_name": "Methods of in vivo gene transfer using a sleeping beauty transposon system: U.S. Patent No. 6,613,752"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m1mm",
                "entity_name": "Method and system for four dimensional intensity modulated radiation therapy for motion compensated treatments: U.S. Patent No. 7,835,493"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m231",
                "entity_name": "System and method for using prospective evaluation of displacement and velocity of a respiratory trace in a five dimensional parameter space to reduce artifacts and dosage in four dimensional computed tomography: U.S. Patent No. 7,894,571"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m3sh",
                "entity_name": "Torque-position transformer for task control of position controlled robots: U.S. Patent No. 7,211,979"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m45n",
                "entity_name": "Torque-position transformer for task control of position controlled robots: U.S. Patent No. 7,405,531"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m6kv",
                "entity_name": "Signatures for human aging: U.S. Patent No. 7,908,090"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m71w",
                "entity_name": "Dual axis fluorescence microscope with modulated input: U.S. Patent No. 7,130,042"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m8df",
                "entity_name": "Thermally and/or photochemically crosslinked electroactive polymers in the manufacture of opto-electronic devices: U.S. Patent No. 6,107,452"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m8vs",
                "entity_name": "Polymeric light-emitting device: U.S. Patent No. 5,998,045"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m97m",
                "entity_name": "Method for obtaining G protein-coupled receptor (GPCR) diffraction-quality crystals employing a monoclonal antibody that binds to the third intracellular loop (IL3): U.S. Patent No. 7,947,807"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m9pg",
                "entity_name": "Crystal structure .beta..sub.2 adrenoreceptor: U.S. Patent No. 7,912,654"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mc0j",
                "entity_name": "Telomere-encoding synthetic DNA nanocircles, and their use for the elongation of telomere repeats: U.S. Patent No. 7,482,332"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mg7f",
                "entity_name": "Enhancer sequences for late T cell expressed genes: U.S. Patent No. 6,448,039"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mh1n",
                "entity_name": "Self-aligned vertical combdrive actuator and method of fabrication: U.S. Patent No. 6,713,367"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mj6q",
                "entity_name": "Methods for manipulating curves constrained to unparameterized surfaces: U.S. Patent No. 6,256,039"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mjpz",
                "entity_name": "Parameterized surface fitting technique having independent control of fitting and parameterization: U.S. Patent No. 6,256,038"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mlg6",
                "entity_name": "Method and compositions for modulating lifespan of hematolymphoid cells: U.S. Patent No. 5,614,397"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mlrg",
                "entity_name": "Method of screening for neuroprotective agents: U.S. Patent No. 6,265,147"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mmkj",
                "entity_name": "Document security method utilizing microdrop combinatorics, ink set and ink composition used therein, and product formed: U.S. Patent No. 6,786,954"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mmyw",
                "entity_name": "Universal fluid droplet ejector: U.S. Patent No. 5,943,075"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n4mf",
                "entity_name": "Uses of diterpenoid triepoxides as an anti-proliferative agent: U.S. Patent No. 6,949,510"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n4rz",
                "entity_name": "Semiconductor crystal high resolution imager: U.S. Patent No. 8,063,380"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n4t1",
                "entity_name": "Enhancement of B cell lymphoma and tumor resistance using idiotype/cytokine conjugates: U.S. Patent No. 6,099,846"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n4xf",
                "entity_name": "Fast method for dynamic MR imaging: U.S. Patent No. 6,784,664"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n50r",
                "entity_name": "Room-temperature source of single photons based on a single molecule in a condensed matter host: U.S. Patent No. 7,068,698"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n54k",
                "entity_name": "Somatic recombination: U.S. Patent No. 7,282,621"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5jm",
                "entity_name": "Electrically activated multi-jointed manipulator: U.S. Patent No. 5,996,346"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5qh",
                "entity_name": "Electrochemical memory with internal boundary: U.S. Patent No. 8,058,643"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5tk",
                "entity_name": "Method and system for forming a nitrided germanium-containing layer using plasma processing: U.S. Patent No. 7,517,812"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5wn",
                "entity_name": "Maximum likelihood estimator in the presence of non-identically distributed noise for decomposition of chemical species in MRI: U.S. Patent No. 7,592,807"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5yy",
                "entity_name": "Switching systems and methods of operation of switching systems: U.S. Patent No. 6,351,466"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n61h",
                "entity_name": "Method and apparatus for single longitudinal mode operation of pulsed laser oscillators using efficient self-seeding: U.S. Patent No. 6,249,537"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n64_",
                "entity_name": "Full echo spiral-in/spiral-out magnetic resonance imaging: U.S. Patent No. 5,539,313"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n663",
                "entity_name": "Full echo spiral-in/spiral-out magnetic resonance imaging: U.S. Patent No. 5,650,723"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n682",
                "entity_name": "Calcium biosensor polypeptides and methods of use: U.S. Patent No. 7,481,994"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n6g7",
                "entity_name": "Optical imaging of molecular characteristics of biological specimen: U.S. Patent No. 7,767,414"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n6p4",
                "entity_name": "Optical modulator with side access: U.S. Patent No. 7,532,379"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n6t0",
                "entity_name": "Methods and apparatus for interactive point-of-view authoring of digital video content: U.S. Patent No. 7,823,058"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n6v5",
                "entity_name": "Detection of malicious programs: U.S. Patent No. 7,870,610"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n759",
                "entity_name": "Electric field induced spin-polarized current: U.S. Patent No. 7,037,807"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n783",
                "entity_name": "Method and apparatus for improved pumping medium for electro-osmotic pumps: U.S. Patent No. 7,458,783"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n7c2",
                "entity_name": "Quantification of aortoiliac endoluminal irregularity: U.S. Patent No. 7,324,675"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n7jw",
                "entity_name": "Quantification method of vessel calcification: U.S. Patent No. 7,330,576"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n81d",
                "entity_name": "Fluorescent dye binding peptides: U.S. Patent No. 7,332,356"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n881",
                "entity_name": "Oscillating dual-equilibrium steady state angiography using magnetic resonance imaging: U.S. Patent No. 6,552,542"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n896",
                "entity_name": "Cooperative OFDMA and distributed MIMO relaying over dense wireless networks: U.S. Patent No. 8,027,301"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8dz",
                "entity_name": "Neural prosthesis based on photomechanical deflectors and tactile sensory cells: U.S. Patent No. 7,447,547"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8lr",
                "entity_name": "Linear precoding for multi-input systems based on channel estimate and channel statistics: U.S. Patent No. 7,680,212"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8r8",
                "entity_name": "System and method for aerial image sensing: U.S. Patent No. 6,906,305"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8sd",
                "entity_name": "Electron bombardment of wide bandgap semiconductors for generating high brightness and narrow energy spread emission electrons: U.S. Patent No. 7,005,795"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8th",
                "entity_name": "X-ray tube for operating in a magnetic field: U.S. Patent No. 6,810,110"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n93k",
                "entity_name": "Convex parimutuel contingent claim market mechanism: U.S. Patent No. 7,801,804"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n94n",
                "entity_name": "Magnetic sifter: U.S. Patent No. 7,615,382"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n95r",
                "entity_name": "Biomolecule immobilization on biosensors: U.S. Patent No. 7,989,396"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n96w",
                "entity_name": "Distributed magnetic field positioning system using code division multiple access: U.S. Patent No. 6,549,004"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9ld",
                "entity_name": "Cy7-allophycocyanin conjugates for use in multiplex fluorescence detection assays: U.S. Patent No. 5,714,386"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9w3",
                "entity_name": "Cosmetic powder dispenser and applicator: U.S. Patent No. 4,671,690"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9x6",
                "entity_name": "Replication and transfer of microstructures and nanostructures: U.S. Patent No. 6,849,558"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nb4r",
                "entity_name": "Transmission line techniques for MRI catheter coil miniaturization and tuning: U.S. Patent No. 6,766,185"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nb61",
                "entity_name": "Naked cuticle genes and their uses: U.S. Patent No. 6,630,323"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nb74",
                "entity_name": "Devices and methods for interfacing human users with electronic devices: U.S. Patent No. 6,083,270"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nb9l",
                "entity_name": "Devices and methods for interfacing human users with electronic devices: U.S. Patent No. 6,983,418"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbck",
                "entity_name": "Integration manager and natural interaction processor: U.S. Patent No. 7,480,619"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbdn",
                "entity_name": "Apparatus and method for hydraulic fracture imaging by joint inversion of deformation and seismicity: U.S. Patent No. 7,460,436"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbfr",
                "entity_name": "Devices for treating circadian rhythm disorders using LED's: U.S. Patent No. 6,350,275"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbgx",
                "entity_name": "Phototherapy of jaundiced newborns using garments containing semiconductor light-emitting devices: U.S. Patent No. 6,596,016"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nblh",
                "entity_name": "Fiber lasers having a complex-valued Vc-parameter for gain-guiding: U.S. Patent No. 6,751,388"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbnr",
                "entity_name": "Reconfigurable wavelength multiplexers and filters employing micromirror array in a gires-tournois interferometer: U.S. Patent No. 6,804,429"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbsj",
                "entity_name": "Methods and apparatus for characterizing lesions in blood vessels and other body lumens: U.S. Patent No. 6,782,289"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nc1_",
                "entity_name": "Sequence database search with sequence search trees: U.S. Patent No. 6,633,817"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nc38",
                "entity_name": "Method and apparatus for shooting simulation of ballistic ammunition _with movable targets: U.S. Patent No. 4,478,581"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nc5g",
                "entity_name": "Catalytic depolymerization of polymers containing electrophilic linkages using nucleophilic reagents: U.S. Patent No. 6,911,546"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nc7n",
                "entity_name": "Heteroatom-stabilized carbenes and precursors thereto as depolymerization catalysts: U.S. Patent No. 7,053,221"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nc8s",
                "entity_name": "Catalytic depolymerization of polymers containing electrophilic linkages using nucleophilic reagents: U.S. Patent No. 7,544,800"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ncby",
                "entity_name": "System and method for securely logging onto a remotely located computer: U.S. Patent No. 6,539,479"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nctq",
                "entity_name": "Method of making gate for charged particle motion: U.S. Patent No. 7,448,131"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ncvv",
                "entity_name": "Time-of-flight mass spectrometer system: U.S. Patent No. 6,870,157"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ncxy",
                "entity_name": "Microfabricated beam modulation device: U.S. Patent No. 7,176,452"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nd0g",
                "entity_name": "Methods and compositions for use in preparing siRNAs: U.S. Patent No. 7,556,944"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnf8n",
                "entity_name": "Magnetic resonance apparatus employing delayed self-refocusing RF excitation: U.S. Patent No. 5,280,245"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnfg0",
                "entity_name": "System and method for encoding document ranking vectors: U.S. Patent No. 8,166,039"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnfms",
                "entity_name": "Photonic crystal and method of fabrication: U.S. Patent No. 8,155,492"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnfry",
                "entity_name": "Spreadsheet system and method for managing photos: U.S. Patent No. 8,166,385"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdng0t",
                "entity_name": "Luciferases and methods for making and using the same: U.S. Patent No. 8,173,791"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdngg9",
                "entity_name": "Hedgehog pathway antagonists methods of use: U.S. Patent No. 8,119,640"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnglt",
                "entity_name": "Cochlear optical analysis system and approach therefor: U.S. Patent No. 8,099,156"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnh0c",
                "entity_name": "Direct wafer bonded 2-D CUMT array: U.S. Patent No. 7,846,102"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnh51",
                "entity_name": "High-temperature electrostatic transducers and fabrication method: U.S. Patent No. 7,843,022"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnhwf",
                "entity_name": "Cone-beam CT imaging scheme: U.S. Patent No. 8,144,829"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnj0d",
                "entity_name": "Fluorogenic compounds converted to fluorophores by photochemical or chemical means and their use in biological systems: U.S. Patent No. 8,153,446"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnjrb",
                "entity_name": "Method of removing dynamic nonlinear phase errors from MRI data: U.S. Patent No. 6,853,191"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnk35",
                "entity_name": "Anti-aliased magnetic resonance image reconstruction using partially parallel encoded data: U.S. Patent No. 7,439,739"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnkx5",
                "entity_name": "High frequency feedback in telerobotics: U.S. Patent No. 8,190,292"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnl5l",
                "entity_name": "Steady state free precession magnetic resonance imaging using phase detection of material separation: U.S. Patent No. 6,922,054"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnm_n",
                "entity_name": "Method and system for deriving location information from utility lines: U.S. Patent No. 8,120,533"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnmq7",
                "entity_name": "Shape completion, animation and marker-less motion capture of people, animals or characters: U.S. Patent No. 8,139,067"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnngd",
                "entity_name": "Generalized MRI reconstruction with correction for multiple image distortion: U.S. Patent No. 7,408,345"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnnm0",
                "entity_name": "SSFP MRI with increased signal bandwidth: U.S. Patent No. 7,332,908"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnnsd",
                "entity_name": "Detection of molecular interactions by .beta.-lactamase reporter fragment complementation: U.S. Patent No. 8,148,110"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "law.us_patent",
                    "class": "law.us_patent",
                    "friendly_name": "Patent",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "law.patent_office",
                    "class": "law.patent_office",
                    "friendly_name": "Patent office",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.020lf",
                    "class": "law.us_patent",
                    "friendly_name": "Mouse",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "law.us_patent.patent_office",
                    "friendly_name": "Patent office"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "law.us_patent.patent_office",
                    "friendly_name": "Patent office"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :law.us_patent . \n?x1 :type.object.type :law.patent_office . \nVALUES ?x2 { :m.020lf } \n?x0 :law.us_patent.patent_office ?x1 . \n?x2 :law.us_patent.patent_office ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "law"
        ],
        "s_expression": "(AND law.us_patent (JOIN law.us_patent.patent_office (JOIN (R law.us_patent.patent_office) m.020lf)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09tf_lf",
                "entity_name": "Multidimensional digital waveguide signal synthesis system and method"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09tg1f8",
                "entity_name": "Multidimensional digital waveguide signal synthesis system and method (tetrahedral extension)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09tgx93",
                "entity_name": "Method of synthesizing a musical sound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37s09",
                "entity_name": "Gradient characterization using fourier-transform"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37sbh",
                "entity_name": "Markerless motion capture system"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37wkf",
                "entity_name": "System and method for high-speed potentiometry using scanning probe microscope"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xpl",
                "entity_name": "Crystal structure of SNAP-25 in complex with botulinum neurotoxin and uses thereof"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3873w",
                "entity_name": "Ultracapacitor current collector"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lg_q",
                "entity_name": "Method for improving SNR in low illumination conditions in a CMOS video sensor system using a self-resetting digital pixel: U.S. Patent No. 6,963,370"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhl5",
                "entity_name": "Helper dependent adenoviral vector system and methods for using the same: U.S. Patent No. 6,943,012"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lj4l",
                "entity_name": "Photocurrent estimation from multiple captures for simultaneous SNR and dynamic range improvement in CMOS image sensors: U.S. Patent No. 7,009,636"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lk9n",
                "entity_name": "Terahertz radiation generation and methods therefor: U.S. Patent No. 7,349,609"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llfl",
                "entity_name": "Multimodality imaging of reporter gene expression using a novel fusion vector in living cells and animals: U.S. Patent No. 7,524,674"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lm8d",
                "entity_name": "Agents for treatment of HCV and methods of use: U.S. Patent No. 8,093,353"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmj2",
                "entity_name": "Partially loaded microwave waveguide resonant standing wave electro-optic modulator: U.S. Patent No. 5,414,552"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpq5",
                "entity_name": "Gene involved in mineral deposition and uses thereof: U.S. Patent No. 7,122,328"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lqmz",
                "entity_name": "Method for increasing temporal resolution of MR fluoroscopy: U.S. Patent No. 5,697,370"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lt0c",
                "entity_name": "Devices and methods to form a randomly ordered array of magnetic beads and uses thereof: U.S. Patent No. 7,682,837"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n7_5",
                "entity_name": "Rapid measurement of time-averaged blood flow using ungated spiral phase-contrast MRI: U.S. Patent No. 6,957,097"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9mp",
                "entity_name": "Treatment of demyelinating autoimmune disease with ordered peptides: U.S. Patent No. 6,531,130"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nb2k",
                "entity_name": "Method and apparatus for quantitative and comparative analysis of image intensities in radiographs: U.S. Patent No. 7,835,559"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nc_5",
                "entity_name": "Transesophageal heat exchange catheter for cooling of the heart: U.S. Patent No. 7,758,623"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37syg",
                "entity_name": "Micro-machined coupled capacitor devices"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37v5x",
                "entity_name": "Acoustic crosstalk reduction for capacitive micromachined ultrasonic transducers in immersion"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37v70",
                "entity_name": "Method and system for operating capacitive membrane ultrasonic transducers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zw7",
                "entity_name": "Array of capacitive micromachined ultrasonic transducer elements with through wafer via connections"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387wc",
                "entity_name": "Capacitive micromachined ultrasonic transducer array with through-substrate electrical connection and method of fabricating same"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387xm",
                "entity_name": "Electrical through wafer interconnects"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38dmv",
                "entity_name": "Optical displacement sensor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38dq4",
                "entity_name": "Capacitive micromachined ultrasonic transducer arrays with reduced cross-coupling"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljh9",
                "entity_name": "Microfluidic channels with integrated ultrasonic transducers for temperature measurement and method: U.S. Patent No. 6,789,426"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljjq",
                "entity_name": "Capacitive micromachined ultrasonic transducer(CMUT) with varying thickness membrane: U.S. Patent No. 7,615,834"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljkt",
                "entity_name": "Trench isolated capacitive micromachined ultrasonic transducer arrays with a supporting frame: U.S. Patent No. 7,741,686"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljn0",
                "entity_name": "Micromachined ultrasonic transducers and method of fabrication: U.S. Patent No. 6,958,255"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljpm",
                "entity_name": "Capacitive membrane ultrasonic transducers with reduced bulk wave generation and method: U.S. Patent No. 7,321,181"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lp43",
                "entity_name": "Compact transform spectrometer based on sampling a standing wave: U.S. Patent No. 6,618,150"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lxbv",
                "entity_name": "Acoustic transducers and method of microfabrication: U.S. Patent No. 5,982,709"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m524",
                "entity_name": "Fabrication of capacitive micromachined ultrasonic transducers by local oxidation: U.S. Patent No. 7,745,248"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m5fr",
                "entity_name": "High quality factor resonators for liquid immersion biological and chemical sensors: U.S. Patent No. 7,694,552"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07f7rj9",
                "entity_name": "United States Patent 4552992"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnv7",
                "entity_name": "Temperature-controlled optical modulator: U.S. Patent No. 7,515,776"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnyj",
                "entity_name": "Ge-Si quantum well structures: U.S. Patent No. 7,599,593"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnz_",
                "entity_name": "Silicon-based Ge/SiGe optical interconnects: U.S. Patent No. 7,515,777"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lp0h",
                "entity_name": "Surface parallel modulator: U.S. Patent No. 7,457,487"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lp2v",
                "entity_name": "Thin buffer layers for SiGe growth on mismatched substrates: U.S. Patent No. 7,902,046"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lzgc",
                "entity_name": "Device and approach for integration of optical devices and waveguides therefor: U.S. Patent No. 7,418,166"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387_y",
                "entity_name": "Molecular layers covalently bonded to silicon surfaces"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38810",
                "entity_name": "Method of detecting microscopic defects existing on a silicon wafer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37x4n",
                "entity_name": "Transfection and genetic manipulations in obligate intracellular parasites"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37x5z",
                "entity_name": "Composition and method for distinguishing virulent and non-virulent toxoplasma infections"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37x78",
                "entity_name": "Diagnostic genes for toxoplasmosis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xbd",
                "entity_name": "P30 peptides of Toxoplasma gondii"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37w2x",
                "entity_name": "Concurrent voice to text and sketch processing with synchronized replay"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zt_",
                "entity_name": "Inorganic metal chalcogen cluster precursors and methods for forming colloidal metal chalcogenide nanoparticles using the same"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3l_x5",
                "entity_name": "Mice comprising engrafted functional human hepatocytes: U.S. Patent No. 6,660,905"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljly",
                "entity_name": "Electromagnetic trigger switch: U.S. Patent No. 4,401,958"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkzv",
                "entity_name": "System and method for indexing, accessing and retrieving audio/video with concurrent sketch activity: U.S. Patent No. 6,724,918"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lq1s",
                "entity_name": "Microscopy arrangements and approaches: U.S. Patent No. 7,723,662"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lqp1",
                "entity_name": "Method of preventing progression of hypertension-induced heart failure with PKC peptides: U.S. Patent No. 7,741,290"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lwx3",
                "entity_name": "Scalable sensor localization for wireless sensor networks: U.S. Patent No. 7,970,574"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m65h",
                "entity_name": "MRI method of determining time-optimal gradient waveforms with gradient amplitude as a function of arc-length in k-space: U.S. Patent No. 7,791,338"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n7x0",
                "entity_name": "Expression of heterologous functional oxygen-sensitive proteins in filamentous cyanobacteria: U.S. Patent No. 7,820,406"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nc6t",
                "entity_name": "Catalytic depolymerization of polymers containing electrophilic linkages using nucleophilic reagents: U.S. Patent No. 6,916,936"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j5gh2s",
                "entity_name": "Classification technique using random decision forests"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03m6j6r",
                "entity_name": "Phenidone"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xm5",
                "entity_name": "Protein modulators of resistance to alkylating agents"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnhr2",
                "entity_name": "Method and apparatus for MR image reconstruction using correlation values: U.S. Patent No. 7,768,264"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02k6sjn",
                "entity_name": "Use of web usage trail data to identify related links"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07cx4",
                "entity_name": "Telephone"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37r2w",
                "entity_name": "Composite mechanical transducers and approaches therefor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jbsj",
                "entity_name": "Composite mechanical transducers and approaches therefor: U.S. Patent No. 7,806,586"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhfr",
                "entity_name": "K-T sparse: high frame-rate dynamic magnetic resonance imaging exploiting spatio-temporal sparsity: U.S. Patent No. 7,602,183"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38b58",
                "entity_name": "High-efficiency high-power amplifier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38b7k",
                "entity_name": "Method for handoff in wireless communication systems using pattern recognition"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnfxh",
                "entity_name": "Estrogen receptor intramolecular folding systems, estrogen receptor intramolecular folding sensors, methods of use thereof, methods of detecting ER ligands, and methods of detecting ER agonists and antagonists: U.S. Patent No. 8,178,654"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lj97",
                "entity_name": "Method and composition for enhancing transport across biological membranes: U.S. Patent No. 6,306,993"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljbt",
                "entity_name": "Method and composition for enhancing transport across biological membranes: U.S. Patent No. 6,495,663"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpmy",
                "entity_name": "Byrostatin analogues, synthetic methods and uses: U.S. Patent No. 6,624,189"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpp2",
                "entity_name": "Bryostatin analogues, synthetic methods and uses: U.S. Patent No. 7,256,286"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ltvb",
                "entity_name": "Apoptolidin analogs and derivatives for inducing apoptosis in transformed cells: U.S. Patent No. 7,151,116"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lwgw",
                "entity_name": "Guanidinium transport reagents and conjugates: U.S. Patent No. 7,169,814"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mfvw",
                "entity_name": "Transporters comprising spaced arginine moieties: U.S. Patent No. 7,585,834"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9sk",
                "entity_name": "Kinase inhibitors and associated pharmaceutical compositions and methods of use: U.S. Patent No. 7,232,842"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0svpg7m",
                "entity_name": "Independently variably controlled pulsed R.F. plasma chemical vapor processing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387lg",
                "entity_name": "Methods and compositions for modulating angiogenesis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38bmb",
                "entity_name": "Neurodegenerative protein aggregation inhibition methods and compounds"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3l3c3",
                "entity_name": "Neurodegenerative protein aggregation inhibition methods and compounds: U.S. Patent No. 7,485,706"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37t3y",
                "entity_name": "Slice-selective tunable-flip adiabatic low peak power excitation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37t5g",
                "entity_name": "Method for magnetic resonance spectroscopic imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lqlw",
                "entity_name": "Fast metabolic imaging of systems with sparse spectra using spiral CSI: U.S. Patent No. 7,709,266"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rnn",
                "entity_name": "Cable guide for bicycles"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37scm",
                "entity_name": "Methods for making multi-branched polymers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37sq2",
                "entity_name": "Reusable wafer support for semiconductor processing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37y09",
                "entity_name": "Phase-contrast MRI using phased-array multicoil"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37z1f",
                "entity_name": "Methods for view angle tilt imaging of interventional devices providing adjustment of device contrast"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3872r",
                "entity_name": "Sealing an ultracapacitor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38cjd",
                "entity_name": "System and method for re-ordering memory references for access to memory"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38dp0",
                "entity_name": "Fluidic device with integrated capacitive micromachined ultrasonic transducers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jf0z",
                "entity_name": "Methods for view angle tilt imaging of interventional devices providing adjustment of device contrast: U.S. Patent No. 6,256,526"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljcr",
                "entity_name": "Adjuvant treatment by in vivo activation of dendritic cells: U.S. Patent No. 6,423,539"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ll_k",
                "entity_name": "Sampling in volumetric computed tomography: U.S. Patent No. 7,103,138"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lm0q",
                "entity_name": "Conus californicus neurotoxins: U.S. Patent No. 7,341,998"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m5w6",
                "entity_name": "Microfabricated ultrasonic immersion transducer: U.S. Patent No. 5,894,452"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n66_",
                "entity_name": "Rapid method of optimal gradient waveform design for MRI: U.S. Patent No. 6,020,739"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37sv6",
                "entity_name": "Harmonic cantilevers and imaging methods for atomic force microscopy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37sxc",
                "entity_name": "Interdigital deflection sensor for microcantilevers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jcbk",
                "entity_name": "Harmonic cantilevers and imaging methods for atomic force microscopy: U.S. Patent No. 6,935,167"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37q__",
                "entity_name": "Magnetic resonance spectroscopic imaging method to monitor progression and treatment of neurodegenerative conditions"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37r0n",
                "entity_name": "High order shimming of MRI magnetic fields using regularization"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37r1b",
                "entity_name": "Spectroscopic magnetic resonance imaging using spiral trajectories"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rfm",
                "entity_name": "Motion corrected tensor magnetic resonance imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37v2r",
                "entity_name": "Method for fabricating efficient sources of electromagnetic radiation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vtj",
                "entity_name": "System and method for indexing electronic text"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vyt",
                "entity_name": "Method and apparatus for vehicle control, navigation and positioning"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37yfl",
                "entity_name": "Proteomic sample analysis and systems therefor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37z_3",
                "entity_name": "In-plane mechanically coupled microelectromechanical tuning fork resonators"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j386tw",
                "entity_name": "Identification and isolation of transitional cell carcinoma stem cells"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387v7",
                "entity_name": "Circular nucleic acid vectors, and methods for making and using the same"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38crj",
                "entity_name": "Rapid, informative diagnostic assay for influenza viruses including H5N1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3l150",
                "entity_name": "NF-AT polypeptides and polynucleotides: U.S. Patent No. 5,837,840"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ll1_",
                "entity_name": "Nonvolatile memory for logic circuits: U.S. Patent No. 7,336,525"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmxv",
                "entity_name": "Ultra precision and reliable bonding method: U.S. Patent No. 6,284,085"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m2yg",
                "entity_name": "Non-contact mechanical resonance method for determining the near surface carrier mobility in conductors: U.S. Patent No. 6,489,776"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n4zs",
                "entity_name": "Time-reversal block transmit diversity system for channels with intersymbol interference and method: U.S. Patent No. 7,362,815"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8y4",
                "entity_name": "Regularized species separation: U.S. Patent No. 7,508,211"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9_8",
                "entity_name": "Molecular transfer lithography: U.S. Patent No. 7,125,639"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdng9r",
                "entity_name": "Circular nucleic acid vectors, and methods for making and using the same: U.S. Patent No. 8,124,407"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_c7",
                "entity_name": "Fuel cell and method for making the same"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37pz4",
                "entity_name": "Method for detecting and classifying a structure of interest in medical images"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lm77",
                "entity_name": "Antibiotics targeting MreB: U.S. Patent No. 7,855,228"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnr6",
                "entity_name": "Magnetic resonance imaging with bipolar multi-echo sequences: U.S. Patent No. 7,777,486"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnxf",
                "entity_name": "Excitable target marker detection: U.S. Patent No. 7,604,981"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lp57",
                "entity_name": "Dual purpose electroactive copolymers, preparation thereof, and use in opto-electronic devices: U.S. Patent No. 6,355,756"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpk5",
                "entity_name": "Near-field aperture having a fractal iterate shape: U.S. Patent No. 7,423,265"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m080",
                "entity_name": "Enhanced sleeping beauty transposon system and methods for using the same: U.S. Patent No. 7,985,739"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8bh",
                "entity_name": "Higher order diffraction in holography: U.S. Patent No. 5,291,320"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8g1",
                "entity_name": "Active queue management toward fair bandwidth allocation: U.S. Patent No. 7,324,442"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8q2",
                "entity_name": "Apparatus and method for decreasing magnetic field sensitivity of long RF pulses: U.S. Patent No. 5,488,298"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9jv",
                "entity_name": "Method and system for training dynamic nonlinear adaptive filters which have embedded memory: U.S. Patent No. 6,351,740"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vlx",
                "entity_name": "Microfabricated tissue as a substrate for pigment epithelium transplantation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vn0",
                "entity_name": "Artificial synapse chip interface for electronic prosthetic retina"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37wvy",
                "entity_name": "Artificial cornea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37wys",
                "entity_name": "Self-sufficient retinal prosthesis powered by intraocular photovoltaic cells"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387qw",
                "entity_name": "Carbon nanotubes and methods of fabrication thereof using a liquid phase catalyst precursor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389rm",
                "entity_name": "High-density data storage using atomic force microscope"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38c88",
                "entity_name": "Carbon nanotube structures made using catalyst islands"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n59j",
                "entity_name": "Cantilever for scanning probe microscope including piezoelectric element and method of using the same: U.S. Patent No. 5,742,377"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5c0",
                "entity_name": "Atomic force microscope for high speed imaging including integral actuator and sensor: U.S. Patent No. 5,883,705"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5cv",
                "entity_name": "Vibrating probe for a scanning probe microscope: U.S. Patent No. 6,075,585"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n998",
                "entity_name": "Detection of macromolecular complexes with harmonic cantilevers: U.S. Patent No. 7,989,164"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9cw",
                "entity_name": "Torsional harmonic cantilevers for detection of high frequency force components in atomic force microscopy: U.S. Patent No. 7,089,787"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9f4",
                "entity_name": "Torsional harmonic cantilevers for detection of high frequency force components in atomic force microscopy: U.S. Patent No. 7,302,833"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9g9",
                "entity_name": "Atomic force microscope using a torsional harmonic cantilever: U.S. Patent No. 7,404,314"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9hr",
                "entity_name": "Near field scanning optical and force microscope including cantilever and optical waveguide: U.S. Patent No. 5,354,985"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38b31",
                "entity_name": "Mismatch repair detection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38bvc",
                "entity_name": "Contrast and resolution enhancement with signal compensation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38clv",
                "entity_name": "System and method for implementing conditional vector operations in which an input vector containing multiple operands to be used in conditional operations is divided into two or more output vectors based on a condition vector"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38cnk",
                "entity_name": "System and method for performing efficient conditional vector operations for data parallel architectures involving both input and conditional vector values"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3kl_d",
                "entity_name": "Mismatch repair detection: U.S. Patent No. 6,406,847"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3kmc4",
                "entity_name": "Mismatch repair detection: U.S. Patent No. 6,709,827"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lf5w",
                "entity_name": "System and method for performing efficient conditional vector operations for data parallel architectures involving both input and conditional vector values: U.S. Patent No. 7,100,026"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llzg",
                "entity_name": "Identification of thymically derived CD4 T cells by protein tyrosine kinase 7 expression: U.S. Patent No. 7,960,125"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mkl6",
                "entity_name": "Methods of modulating angiogenesis: U.S. Patent No. 7,947,278"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n7d6",
                "entity_name": "Quantification of vascular irregularity: U.S. Patent No. 7,379,574"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9pb",
                "entity_name": "Treatment of demyelinating autoimmune disease with ordered peptides: U.S. Patent No. 7,070,780"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9yb",
                "entity_name": "Replication and transfer of microstructures and nanostructures: U.S. Patent No. 7,345,002"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbtm",
                "entity_name": "Dumbbell-like nanoparticles and a process of forming the same: U.S. Patent No. 7,288,134"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbvq",
                "entity_name": "Dumbbell-like nanoparticles and a process of forming the same: U.S. Patent No. 7,766,993"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lqdw",
                "entity_name": "Compton backscattered collimated x-ray source: U.S. Patent No. 5,825,847"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lqfz",
                "entity_name": "Compton backscattered collmated X-ray source: U.S. Patent No. 6,035,015"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n6jv",
                "entity_name": "Electrokinetic instability micromixer: U.S. Patent No. 7,070,681"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lm_1",
                "entity_name": "Composite rotors for flywheels and methods of fabrication thereof: U.S. Patent No. 6,868,753"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbzw",
                "entity_name": "Composite grid/frame structures: U.S. Patent No. 5,888,608"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llyc",
                "entity_name": "Gate electrode with depletion suppression and tunable workfunction: U.S. Patent No. 7,867,859"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jck3",
                "entity_name": "System and method for indexing electronic text: U.S. Patent No. 6,535,873"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvzv",
                "entity_name": "US patent 618704 - Method of Manufacturing Filaments for Electric Lamps"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rtq",
                "entity_name": "Charge management of electrically isolated objects via modulated photoelectric charge transfer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37t00",
                "entity_name": "Gain correction for a CT system"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388p8",
                "entity_name": "Method and apparatus for echo cancellation with discrete multitone modulation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38cyp",
                "entity_name": "Highly parallel and sensitive method for identifying drugs and drug targets"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhmb",
                "entity_name": "Methods and compositions for identifying anti-HCV agents: U.S. Patent No. 7,582,428"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ll51",
                "entity_name": "Mitofusins, Fzo Homologs and functional derivatives thereof: U.S. Patent No. 6,953,680"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpr9",
                "entity_name": "Ceramic/metal and A15/metal superconducting composite materials exploiting the superconducting proximity effect and method of making the same: U.S. Patent No. 5,998,336"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lw1y",
                "entity_name": "Bi-directional synthesis of oligoguanidine transport agents: U.S. Patent No. 7,067,698"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mcwf",
                "entity_name": "Micromachined fluidic coupler: U.S. Patent No. 5,890,745"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n4pd",
                "entity_name": "Charge multiplexed array of solid-state photosensitive detectors: U.S. Patent No. 7,495,201"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5ks",
                "entity_name": "Eliciting analgesia by transcranial electrical stimulation: U.S. Patent No. 6,567,702"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8z4",
                "entity_name": "Spatiotemporal finite element method for motion analysis with velocity data: U.S. Patent No. 6,236,738"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbkd",
                "entity_name": "Isolation and characterization of muscle regenerating cells: U.S. Patent No. 7,749,754"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387yr",
                "entity_name": "Methods for treating cerebrovascular disease comprising administering an agent that inhibits prokineticin receptor activity"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmnx",
                "entity_name": "Sonar based drowning monitor: U.S. Patent No. 7,330,123"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388by",
                "entity_name": "Methods and compositions for determining risk of treatment toxicity"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m7zc",
                "entity_name": "Modular, wireless damage monitoring system for structures: U.S. Patent No. 6,292,108"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mnrx",
                "entity_name": "Noise-reducing arrangement and method for signal processing: U.S. Patent No. 6,963,626"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n60c",
                "entity_name": "Communication arrangement and method with fast tracking receiver for spread spectrum signals: U.S. Patent No. 6,614,834"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_90",
                "entity_name": "Method to track three-dimensional target motion with a dynamical multi-leaf collimator"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37q1s",
                "entity_name": "Nitroreductase enzymes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n985",
                "entity_name": "Method for selecting beam orientations in intensity modulated radiation therapy: U.S. Patent No. 6,504,899"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ncd0",
                "entity_name": "Method for checking positional accuracy of the leaves of a multileaf collimator: U.S. Patent No. 6,891,178"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ncf8",
                "entity_name": "Verification method of monitor units and fluence map in intensity modulated radiation therapy: U.S. Patent No. 6,697,452"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37thz",
                "entity_name": "Cross-linked organic thin-film dielectrics"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vkt",
                "entity_name": "Light-driven energy generation using proteorhodopsin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37w18",
                "entity_name": "Bacterial poly(hydroxy alkanoate) polymer and natural fiber composites"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37x_5",
                "entity_name": "Dimension measurement approach for metal-material"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387zv",
                "entity_name": "Electrically addressable liquid dispenser"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388sf",
                "entity_name": "Artificial Antimicrobial peptides"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3897w",
                "entity_name": "Biplanar homogeneous field electromagnets and method for making same"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389qj",
                "entity_name": "Oligocarbonate molecular transporters"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3kb0t",
                "entity_name": "Biplanar homogeneous field electromagnets and method for making same: U.S. Patent No. 6,208,143"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljg5",
                "entity_name": "Optical cavity emitter arrangements with spectral alignment and methods therefor: U.S. Patent No. 7,994,467"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljw8",
                "entity_name": "MR compatible rotating anode x-ray tube: U.S. Patent No. 7,701,215"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lm1t",
                "entity_name": "Chemical micromachined microsensors: U.S. Patent No. 7,305,883"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n718",
                "entity_name": "Prevention of deficits in neurogenesis with anti-inflammatory agents: U.S. Patent No. 7,998,460"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nb3n",
                "entity_name": "Treatment planning method and apparatus for radiosurgery and radiation therapy: U.S. Patent No. 5,458,125"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llmf",
                "entity_name": "Fluorescent glycosides and methods for their use: U.S. Patent No. 7,423,133"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j386rm",
                "entity_name": "Distributed acoustic reverberation for audio collaboration"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rhd",
                "entity_name": "Dynamic resource allocation and media access control for a wireless ATM network"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37s1d",
                "entity_name": "Adaptive control for mitigating interference in a multimode transmission medium"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38d0t",
                "entity_name": "Multiplexed assay and probes for identification of HPV types"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jcpn",
                "entity_name": "Fuel cell: U.S. Patent No. 7,341,800"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3kgxx",
                "entity_name": "Methods of reducing angiogenesis: U.S. Patent No. 7,390,821"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lh3s",
                "entity_name": "Miniature scanning confocal microscope: U.S. Patent No. 5,907,425"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lh5k",
                "entity_name": "Miniature scanning confocal microscope: U.S. Patent No. 6,154,305"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vxq",
                "entity_name": "GPS control of a tractor-towed implement"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37w05",
                "entity_name": "Methods for analysis of large sets of multiparameter data"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37wmx",
                "entity_name": "Microfabricated apertures for supporting bilayer lipid membranes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388wy",
                "entity_name": "Sub-micron object control arrangement and approach therefor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lk2f",
                "entity_name": "Adaptive optical signal processing with multimode waveguides: U.S. Patent No. 7,509,002"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ll77",
                "entity_name": "In vivo models for rabGEF1-dependent signaling and functions: U.S. Patent No. 7,365,239"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llds",
                "entity_name": "Ligand-regulable transactivation systems, methods of use thereof, methods of detecting estrogen receptor ligands, and methods of differentiating estrogen receptor ligand agonists and antagonists: U.S. Patent No. 8,076,159"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lp92",
                "entity_name": "Internet-linked system for directory protocol based data storage, retrieval and analysis: U.S. Patent No. 6,947,953"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpbm",
                "entity_name": "Internet-linked system for directory protocol based data storage, retrieval and analysis: U.S. Patent No. 7,650,351"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpf_",
                "entity_name": "System and method for internet-accessible tools and knowledge base for protocol design, metadata capture and laboratory experiment management: U.S. Patent No. 7,555,492"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ltf8",
                "entity_name": "Methods for diagnosing and evaluating treatment of blood disorders: U.S. Patent No. 7,514,229"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mp1t",
                "entity_name": "Uses of diterpenoid triepoxides as an anti-proliferative agent: U.S. Patent No. 6,294,546"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5_7",
                "entity_name": "Method for pre-identification of spectral overlaps within fluorescent dye and detector combinations used in flow cytometry: U.S. Patent No. 7,932,503"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n72d",
                "entity_name": "Methods and systems for data analysis: U.S. Patent No. 6,954,722"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n73z",
                "entity_name": "Phase-sensitive method of radio-frequency field mapping for magnetic resonance imaging: U.S. Patent No. 6,268,728"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9rg",
                "entity_name": "Atomic force microscopy devices, arrangements and systems: U.S. Patent No. 8,082,593"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbmm",
                "entity_name": "Predicting risk of serious gastrointestinal complications in patients taking nonsteroidal anti-inflammatory drugs: U.S. Patent No. 6,560,541"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnh9b",
                "entity_name": "Apparatus and method for phased subarray imaging: U.S. Patent No. 7,972,271"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhgv",
                "entity_name": "Translating active Gurney flap to alleviate aircraft wake vortex hazard: U.S. Patent No. 7,740,206"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0505x",
                "entity_name": "Mimeograph"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cpk7",
                "entity_name": "Incandescent light bulb"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g4w96_",
                "entity_name": "Plant Patent 591"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rc4",
                "entity_name": "Dual-element microstrip patch antenna for mitigating radio frequency interference"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37yj7",
                "entity_name": "MHC-antigen arrays for detection and characterization of immune responses"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3870g",
                "entity_name": "Ultracapacitor separator"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3871l",
                "entity_name": "Ultracapacitor electroyte"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3874_",
                "entity_name": "Method of making an ultracapacitor electrode"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3877_",
                "entity_name": "Drying an ultracapacitor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38823",
                "entity_name": "Method and system for using tissue-scattered coincidence photons for imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38bb2",
                "entity_name": "High-speed inter-modality image registration via iterative feature matching"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3kppn",
                "entity_name": "High-speed inter-modality image registration via iterative feature matching: U.S. Patent No. 5,901,199"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lgv0",
                "entity_name": "T cell regulatory genes and methods of use thereof: U.S. Patent No. 7,553,939"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lgw3",
                "entity_name": "Method of converting a Th2-type allergic immune response into a Th1-type immune response: U.S. Patent No. 6,086,898"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lgx6",
                "entity_name": "Adjuvant therapy: U.S. Patent No. 7,214,380"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljr_",
                "entity_name": "Scatter correction for x-ray imaging using modulation of primary x-ray spatial spectrum: U.S. Patent No. 7,463,712"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llnl",
                "entity_name": "Logical spreadsheets: U.S. Patent No. 7,707,486"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llrz",
                "entity_name": "Method of subspace beamforming using adaptive transmitting antennas with feedback: U.S. Patent No. 5,634,199"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lltf",
                "entity_name": "Method for minimizing cross-talk in adaptive transmission antennas: U.S. Patent No. 5,471,647"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lm3y",
                "entity_name": "Low cost fabrication of microelectrode arrays for cell-based biosensors and drug discovery methods: U.S. Patent No. 7,501,301"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmyz",
                "entity_name": "Hydroxide-catalyzed bonding: U.S. Patent No. 6,548,176"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnd0",
                "entity_name": "Live-cell biosensor polypeptides and methods of use: U.S. Patent No. 7,655,434"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lvnz",
                "entity_name": "Methods for use in three-dimensional structural determination: U.S. Patent No. 6,604,052"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mbkr",
                "entity_name": "Detection of chemical ligation using fluorescence quenching leaving groups: U.S. Patent No. 7,749,699"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n63w",
                "entity_name": "Diminishing variance process for real-time reduction of motion artifacts in MRI: U.S. Patent No. 5,427,101"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38c9d",
                "entity_name": "Patterned growth of single-walled carbon nanotubes from elevated wafer structures"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3k1f7",
                "entity_name": "Germanium substrate-type materials and approach therefor: U.S. Patent No. 7,495,313"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lcyh",
                "entity_name": "System and method for re-ordering memory references for access to memory: U.S. Patent No. 7,216,214"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhyr",
                "entity_name": "Biological analysis arrangement and approach therefor: U.S. Patent No. 7,595,883"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ln5w",
                "entity_name": "Catalytic compositions and methods for asymmetric allylic alkylation: U.S. Patent No. 6,130,349"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ln6z",
                "entity_name": "Catalytic compositions and methods for asymmetric allylic alkylation: U.S. Patent No. 7,005,521"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ln8d",
                "entity_name": "Catalytic compositions and methods for asymmetric allylic alkylation: U.S. Patent No. 6,541,655"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ln9l",
                "entity_name": "Catalytic compositions and methods for asymmetric allylic alkylation: U.S. Patent No. 6,747,152"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lq6k",
                "entity_name": "Screening for agents that modulate relaxin function: U.S. Patent No. 7,531,313"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lq82",
                "entity_name": "BDNF facilitation of oocyte, zygote and pre-implantation embryo maturation: U.S. Patent No. 7,763,462"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lr9z",
                "entity_name": "Magnetic field inhomogeneity correction in MRI using estimated linear magnetic field map: U.S. Patent No. 5,617,028"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ls6r",
                "entity_name": "Catalytic compositions and methods for asymmetric aldol reactions: U.S. Patent No. 6,919,456"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ml00",
                "entity_name": "Use of WNT inhibitors to augment therapeutic index of chemotherapy: U.S. Patent No. 7,803,783"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n82h",
                "entity_name": "Use of .beta.-catenin in the expansion of stem and progenitor cells: U.S. Patent No. 6,465,249"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n85l",
                "entity_name": "Method for determining genetic affiliation, substructure and gene flow within human populations: U.S. Patent No. 6,929,911"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n86z",
                "entity_name": "Detection of nucleic acid heteroduplex molecules by denaturing high-performance liquid chromatography and methods for comparative sequencing: U.S. Patent No. 5,795,976"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbpv",
                "entity_name": "Phase unwrapping of MR phase images using poisson equation: U.S. Patent No. 5,432,447"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbyr",
                "entity_name": "Method of coating an electrospray emitter: U.S. Patent No. 7,446,311"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j8t3r_",
                "entity_name": "Gating device and driver for modulation of charged particle beams: U.S. Patent No. 7,067,803"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388gb",
                "entity_name": "Atomic force microscopy data storage system with tracking servo from lateral force-sensing cantilever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389t1",
                "entity_name": "Nucleic acid encoding human DNA polymerase .alpha."
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmbt",
                "entity_name": "Agents for treatment of HCV and methods of use: U.S. Patent No. 7,326,536"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmk5",
                "entity_name": "Composite thermal interface material including particles and nanofibers: U.S. Patent No. 7,504,453"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m4nt",
                "entity_name": "Method of detecting directly undetectable analytes using directly detectable spacer molecules: U.S. Patent No. 7,951,278"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3md8m",
                "entity_name": "Closed-loop electrical stimulation system for cell cultures: U.S. Patent No. 7,993,906"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8kn",
                "entity_name": "Wireless communication system with adaptive beam selection: U.S. Patent No. 6,438,389"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdng59",
                "entity_name": "Diamondoid monolayers as electron emitters: U.S. Patent No. 8,154,185"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05bh8r2",
                "entity_name": "Kinematograph Apparatus for the Production of Colored Pictures"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05yn93f",
                "entity_name": "US Patent 17722 - Brown truss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37v97",
                "entity_name": "System and method of parallel imaging with calibration to a separate coil"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vbq",
                "entity_name": "System and method for accelerated magnetic resonance parallel imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xj_",
                "entity_name": "Self-calibration methods for parallel imaging and multipoint water-fat separation methods"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvyf",
                "entity_name": "US patent 230309 - Electric lamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvyx",
                "entity_name": "US patent 247084 - Incandescent Electric Lamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_b3",
                "entity_name": "Dialogue management using scripts"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37v83",
                "entity_name": "Superconducting magnetoresistive memory element using controlled exchange interaction"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vwm",
                "entity_name": "Determination and control of vehicle sideslip using GPS"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xsy",
                "entity_name": "Moving table MRI with frequency-encoding in the z-direction"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37yv3",
                "entity_name": "Virtual machine monitors for scalable multiprocessors"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37z5g",
                "entity_name": "Grating angle magnification enhanced angular sensor and scanner"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387j7",
                "entity_name": "Optimized spectral-spatial pulse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38d4m",
                "entity_name": "Bioluminescence resonance energy transfer (BRET) systems and methods of use thereof"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lh75",
                "entity_name": "Miniature scanning confocal microscope: U.S. Patent No. 6,749,346"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lq0h",
                "entity_name": "Apparatus and method for capturing a scene using staggered triggering of dense camera arrays: U.S. Patent No. 8,027,531"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mhxl",
                "entity_name": "Creating and modifying parameterizations of surfaces: U.S. Patent No. 6,271,856"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5vk",
                "entity_name": "Calibration maps for parallel imaging free of chemical shift artifact: U.S. Patent No. 7,741,842"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37sdr",
                "entity_name": "Method and apparatus for modulating a light beam"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37shk",
                "entity_name": "Method of making a deformable grating apparatus for modulating a light beam and including means for obviating stiction between grating elements and underlying substrate"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37yw6",
                "entity_name": "Genes involved in neuropsychiatric disorders"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zxb",
                "entity_name": "Methods and compositions for genomic modification"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38dtj",
                "entity_name": "Press"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jf6v",
                "entity_name": "Methods and compositions for genomic modification: U.S. Patent No. 6,632,672"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3k1wk",
                "entity_name": "Germanium substrate-type materials and approach therefor: U.S. Patent No. 7,772,078"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhcj",
                "entity_name": "Motor control amplifier: U.S. Patent No. 7,710,061"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmmt",
                "entity_name": "Method and apparatus for selection and use of optimal antennas in wireless systems: U.S. Patent No. 6,917,820"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpv5",
                "entity_name": "Dynamic wake prediction and visualization with uncertainty analysis: U.S. Patent No. 6,963,291"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5gt",
                "entity_name": "Electrically activated multi-jointed manipulator: U.S. Patent No. 5,556,370"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n6_s",
                "entity_name": "Interconnect circuit for data transmission in an integrated circuit: U.S. Patent No. 6,853,679"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n6zm",
                "entity_name": "Adaptive vehicle: U.S. Patent No. 4,829,434"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n7vs",
                "entity_name": "Device and method for medical interventions of body lumens: U.S. Patent No. 7,549,974"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbxn",
                "entity_name": "Compounds for activating TGF-.beta. signaling: U.S. Patent No. 8,097,645"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3884d",
                "entity_name": "Semiconductor device manufacturing method to reduce process induced stress and crystalline defects"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmdg",
                "entity_name": "Robust motion correction for functional magnetic resonance imaging: U.S. Patent No. 8,055,041"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_31",
                "entity_name": "Artificial corneal implant"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkwk",
                "entity_name": "Interpenetrating polymer network hydrogel contact lenses: U.S. Patent No. 7,857,447"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkxn",
                "entity_name": "Interpenetrating polymer network hydrogel corneal prosthesis: U.S. Patent No. 7,909,867"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvzc",
                "entity_name": "US patent 283629 - Electric Lamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lp7f",
                "entity_name": "Circadian rhythm reset method and device: U.S. Patent No. 6,623,512"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38bp_",
                "entity_name": "Method and system for chalcogenide-based nanowire memory"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388d0",
                "entity_name": "Cooling by resonator-induced coherent scattering of radiation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n4_m",
                "entity_name": "Fabrication of group III-nitride photocathode having Cs activation layer: U.S. Patent No. 7,455,565"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37s46",
                "entity_name": "Coupled photonic crystal resonator array arrangements and applications"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387nn",
                "entity_name": "Noncovalent sidewall functionalization of carbon nanotubes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387pr",
                "entity_name": "Photodesorption in carbon nanotubes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38byq",
                "entity_name": "Self navigating cartesian trajectory"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38dch",
                "entity_name": "Glutathione deficiency as a prognosis for survival in aids"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3l7r0",
                "entity_name": "Carbon nanotube devices: U.S. Patent No. 6,528,020"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lgy0",
                "entity_name": "Optoelectronic switch having cascaded optical nodes: U.S. Patent No. 7,466,914"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lh7_",
                "entity_name": "Miniature scanning confocal microscope: U.S. Patent No. 6,088,145"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lm9p",
                "entity_name": "Methods and compositions for identifying anti-HCV agents: U.S. Patent No. 7,655,419"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lqbh",
                "entity_name": "Blip design for random sampling compressed sensing of flyback 3D-MRSI: U.S. Patent No. 7,659,718"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mb3h",
                "entity_name": "Nonpolar thymidine analogs: U.S. Patent No. 7,473,683"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbr3",
                "entity_name": "Method of improved magnetic resonance spectroscopic localization using spectral-spatial pulses: U.S. Patent No. 6,304,084"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37wh6",
                "entity_name": "Method and apparatus for B.sub.0 eddy current compensation by B.sub.1 phase modulation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387kb",
                "entity_name": "Hyperpolarized dynamic chemical shift imaging with tailored multiband excitation pulses"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m3d0",
                "entity_name": "Method and apparatus for correcting gradient system and static magnetic field in magnetic resonance imaging: U.S. Patent No. 5,905,377"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37s59",
                "entity_name": "Optical communication with phase encoding and phase shifting"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zsl",
                "entity_name": "Methods of diagnosing and treating rheumatoid arthritis and osteoarthritis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38769",
                "entity_name": "Sealed ultracapacitor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387h3",
                "entity_name": "Modulation of T cell signaling threshold and T cell sensitivity to antigens"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhk1",
                "entity_name": "Puck interface adapter including drivers for interfacing serial device to host wherein puck implements command mode and pass through mode: U.S. Patent No. 6,901,464"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lk8j",
                "entity_name": "Polypeptide complex that regulates cell cycle and anergy: U.S. Patent No. 7,964,369"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n4vm",
                "entity_name": "Tubular compliant mechanisms for ultrasonic imaging systems and intravascular interventional devices: U.S. Patent No. 7,115,092"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5sg",
                "entity_name": "Method for forming a nitrided germanium-containing layer using plasma processing: U.S. Patent No. 7,517,818"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9zg",
                "entity_name": "Replication and transfer of microstructures and nanostructures: U.S. Patent No. 7,981,814"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbbd",
                "entity_name": "Intelligent total access system: U.S. Patent No. 7,363,398"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n55r",
                "entity_name": "CMOS power amplifier with reduced harmonics and improved efficiency: U.S. Patent No. 6,359,513"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnk80",
                "entity_name": "Artifact reduction in SSFP MRI using super field view reconstruction: U.S. Patent No. 7,132,828"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zy_",
                "entity_name": "Multi-ring resonator system and method"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m2hf",
                "entity_name": "Method of making a nanogap for variable capacitive elements, and device having a nanogap: U.S. Patent No. 7,172,917"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388hf",
                "entity_name": "High-k dielectric for thermodynamically-stable substrate-type materials"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388jy",
                "entity_name": "Germanium substrate-type materials and approach therefor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljqx",
                "entity_name": "Memory circuit with quantum well-type carrier storage: U.S. Patent No. 8,064,239"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9q4",
                "entity_name": "Method of forming of a semiconductor film, method of manufacture of a semiconductor device and a semiconductor device: U.S. Patent No. 7,968,434"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_0l",
                "entity_name": "Compositions and methods for modulating activity of capped small RNAs"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389hl",
                "entity_name": "Nicotine in therapeutic angiogenesis and vasculogenesis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lj7z",
                "entity_name": "Gate for modulating beam of charged particles and method for making same: U.S. Patent No. 6,664,545"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkyr",
                "entity_name": "Method and apparatus for improved temporal resolution in dynamic MRI: U.S. Patent No. 5,653,233"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lp6b",
                "entity_name": "Process for preparing a patterned continuous polymeric brush on a substrate surface: U.S. Patent No. 6,423,465"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mcgh",
                "entity_name": "Compositions and methods for high throughput screening of pharmacological chaperones: U.S. Patent No. 7,790,364"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8_l",
                "entity_name": "Magnetic resonance imaging with fat-water signal separation: U.S. Patent No. 6,856,134"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8cv",
                "entity_name": "Method for characterizing shapes in medical images: U.S. Patent No. 7,043,064"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37t2n",
                "entity_name": "Long elements method for simulation of deformable objects"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37tkq",
                "entity_name": "Method of forming organic thin film and method of manufacturing semiconductor device using the same"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37tpl",
                "entity_name": "Method for encoding and decoding digital data in holographic storage media"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xl2",
                "entity_name": "Apparatus and method for socially intelligent virtual entity"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38bdg",
                "entity_name": "NF-AT polypeptides and polynucleotides"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmrx",
                "entity_name": "Systems and methods for using visual hulls to determine the number of people in a crowd: U.S. Patent No. 6,987,885"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lq5d",
                "entity_name": "Intermedin and its uses: U.S. Patent No. 6,965,013"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lrr6",
                "entity_name": "Method of shallow junction formation in semiconductor devices using gas immersion laser doping: U.S. Patent No. 5,316,969"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n56w",
                "entity_name": "Reduced field-of-view method for cine magnetic resonance imaging: U.S. Patent No. 6,353,752"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5xs",
                "entity_name": "Simultaneous chemical species separation and T.sub.2* measurement using MRI: U.S. Patent No. 7,468,605"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n770",
                "entity_name": "Surgical method and apparatus for identification of fluorescence: U.S. Patent No. 7,996,068"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n90y",
                "entity_name": "Magnetic resonance imaging of different chemical species in a system having magnetic field heterogeneities: U.S. Patent No. 7,349,729"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01292yrz",
                "entity_name": "Method and means for recognizing complex patterns"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37tww",
                "entity_name": "Backswitch poling method for domain patterning of ferroelectric materials"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vp9",
                "entity_name": "Artificial synapse chip"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xd_",
                "entity_name": "Cell-free extracts and synthesis of active hydrogenase"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387t2",
                "entity_name": "RFLAT-1: a transcription factor that activates RANTES gene expression"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lh24",
                "entity_name": "Miniature scanning confocal microscope: U.S. Patent No. 5,742,419"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lh_p",
                "entity_name": "CMOS image sensor system with self-reset digital pixel architecture for improving SNR and dynamic range: U.S. Patent No. 6,927,796"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhxg",
                "entity_name": "Thin and thick gate oxide transistors on a functional block of a CMOS circuit residing within the core of an IC chip: U.S. Patent No. 6,642,543"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkh3",
                "entity_name": "Retinal light processing using carbon nanotubes: U.S. Patent No. 6,755,530"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkj6",
                "entity_name": "Interface for making spatially resolved electrical contact to neural cells in a biological neural network: U.S. Patent No. 7,058,455"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkk9",
                "entity_name": "Optically controlled microfluidic chip: U.S. Patent No. 7,556,621"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkms",
                "entity_name": "Bucky paper as a support membrane in retinal cell transplantation: U.S. Patent No. 7,135,172"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8j9",
                "entity_name": "Method for pulse shape design for OFDM: U.S. Patent No. 7,656,786"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8w6",
                "entity_name": "Volumetric computed tomography (VCT): U.S. Patent No. 7,072,436"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8x9",
                "entity_name": "Volumetric computed tomography (VCT): U.S. Patent No. 7,145,981"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04zjmqn",
                "entity_name": "Patent for Screw Pile Foundations"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37z0b",
                "entity_name": "Distortion-free magnetic resonance imaging near metallic implants"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n52b",
                "entity_name": "Magnetic resonance field map estimation for species separation: U.S. Patent No. 7,924,002"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n53f",
                "entity_name": "Method and apparatus for field map estimation: U.S. Patent No. 7,952,353"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37w8p",
                "entity_name": "Sequential reporter enzyme luminescence (SRL) methods and compositions for practicing the same"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnhfy",
                "entity_name": "Method of preparing fuel cell comprising proton conducting solid perovskite electrolyte membrane with improved low temperature ion conductivity, and membrane electrode assembly of fuel cell prepared by the method: U.S. Patent No. 7,691,523"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rvt",
                "entity_name": "High precision interferometer apparatus employing a grating beamsplitter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37sjs",
                "entity_name": "Use of aperiodic quasi-phase-matched gratings in ultrashort pulse sources"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37skw",
                "entity_name": "Ultrashort-pulse source with controllable wavelength output"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37t7v",
                "entity_name": "Method of optimizing wireless communication links using stored channel characteristics of different locations"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37v3n",
                "entity_name": "Electron sources utilizing negative electron affinity photocathodes with ultra-small emission areas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37wsp",
                "entity_name": "User-retainable temperature and impedance monitoring methods and devices"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38dr8",
                "entity_name": "Viral vectors useful in induction of humoral or cellular immunity"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ll33",
                "entity_name": "Mitofusin genes and their uses: U.S. Patent No. 6,127,159"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ll47",
                "entity_name": "Mitofusin genes and their uses: U.S. Patent No. 6,284,507"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmp_",
                "entity_name": "AAV capsid library and AAV capsid proteins: U.S. Patent No. 7,588,772"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmwr",
                "entity_name": "3D cones gradient waveform generation: U.S. Patent No. 7,548,062"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mncg",
                "entity_name": "Methods for producing target cell reactive lymphocytes: U.S. Patent No. 7,598,223"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nb0c",
                "entity_name": "Detection of toxigenic marine diatoms of the genus Pseudo-nitzschia: U.S. Patent No. 5,958,689"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nb1g",
                "entity_name": "Compositions and methods for detecting raphidophytes: U.S. Patent No. 6,787,648"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkq6",
                "entity_name": "Collection mode lens system: U.S. Patent No. 6,477,298"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5lx",
                "entity_name": "X-ray collimator for imaging with multiple sources and detectors: U.S. Patent No. 7,496,181"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnt4",
                "entity_name": "Electrostatically tunable optical device and optical interconnect for processors: U.S. Patent No. 5,291,502"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37q_9",
                "entity_name": "Nitroreductase enzymes for bioremediation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lgz3",
                "entity_name": "Semiconductor device for rapid optical switch by modulated absorption: U.S. Patent No. 6,680,791"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09tgj4p",
                "entity_name": "Passive nonlinear filter for digital musical sound synthesizer and method"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37t1h",
                "entity_name": "3-D interconnected multi-layer microstructure of thermoplastic materials"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37yqx",
                "entity_name": "Substrates comprising polynucleotide microarrays"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j386sq",
                "entity_name": "Method for evaluating quality of service of a digital network connection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lqh0",
                "entity_name": "Electroosmotic micropumps with applications to fluid dispensing and field sampling: U.S. Patent No. 7,231,839"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5fk",
                "entity_name": "Spatially distributed SMA actuator film providing unrestricted movement in three dimensional space: U.S. Patent No. 5,405,337"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5pd",
                "entity_name": "Chimeric immunocompromised mammal comprosing vascularized fetal organ tissue: U.S. Patent No. 5,639,939"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbwk",
                "entity_name": "Apparatus and method for adjusting the substrate impedance of a MOS transistor: U.S. Patent No. 7,236,044"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnjlw",
                "entity_name": "Method for regulating protein function in cells using synthetic small molecules: U.S. Patent No. 8,173,792"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xw7",
                "entity_name": "MRI method and apparatus for selective image suppression of material based on T1 and T2 relation times"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389cf",
                "entity_name": "Inversion recovery MRI"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38br2",
                "entity_name": "Artifact reduction in steady-state free precession imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38bs5",
                "entity_name": "Enhanced spectral selectivity for steady-state free precession imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38bt8",
                "entity_name": "Multiple repetition time steady-state free precession imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lns1",
                "entity_name": "Catalyzing the transient response in steady-state MRI sequences: U.S. Patent No. 6,452,387"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n7y6",
                "entity_name": "Linear combination steady-state free precession MRI: U.S. Patent No. 6,307,368"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nb__",
                "entity_name": "Dipole induced transparency drop-filter cavity-waveguide system: U.S. Patent No. 7,630,604"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nc15",
                "entity_name": "Optical switching based on dipole induced transparency: U.S. Patent No. 7,848,603"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vct",
                "entity_name": "Polyp detection using smoothed shape operators"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xxb",
                "entity_name": "Time-of-flight mass spectrometer and ion analysis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38b6f",
                "entity_name": "Carrier offset determination for RF signals having a cyclic prefix"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38d66",
                "entity_name": "Arrangements for satellite-based navigation and methods therefor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3kkx2",
                "entity_name": "FACS-optimized mutants of the green fluorescent protein (GFP): U.S. Patent No. 5,804,387"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhnk",
                "entity_name": "Adaptive pixel for high dynamic range and disturbance detection and correction: U.S. Patent No. 7,492,400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n6ww",
                "entity_name": "Nanotube logic circuits: U.S. Patent No. 7,911,234"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n6yf",
                "entity_name": "System and method for analyzing a nanotube logic circuit: U.S. Patent No. 8,065,634"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8nb",
                "entity_name": "Method and apparatus for reconstruction of non-uniformly sampled data: U.S. Patent No. 6,975,751"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbj0",
                "entity_name": "Representational fragment amplification: U.S. Patent No. 7,338,765"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03sfz2d",
                "entity_name": "Programmable branch prediction system and method for inserting prediction operation which is independent of execution of program code"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnj5k",
                "entity_name": "Method to discriminate arrhythmias in cardiac rhythm management devices: U.S. Patent No. 8,204,581"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnjz7",
                "entity_name": "Continuous fluoroscopic MRI using spiral k-space scanning: U.S. Patent No. 5,485,086"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38839",
                "entity_name": "Band-structure modulation of nano-structures in an electric field"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvy1",
                "entity_name": "US patent 208252 - Electric lamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvy4",
                "entity_name": "US patent 230310 - Electric lamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvy7",
                "entity_name": "US patent 230953 - Electric lamps"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvy_",
                "entity_name": "US patent 247085 - Process of Manufacturing Carbon Conductors"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvyb",
                "entity_name": "US patent 230954 - Process for removing air from globes of electric lamps"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvyj",
                "entity_name": "US patent 234835 - Electrical lamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvym",
                "entity_name": "US patent 237198 - Process of manufacturing carbon conductors"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvyq",
                "entity_name": "US patent 244277 - Electric Lamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvyt",
                "entity_name": "US patent 247083 - Process of Manufacturing Carbons"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvz2",
                "entity_name": "US patent 247380 - Electric Lamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvz5",
                "entity_name": "US patent 255308 - Electrical meter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvz8",
                "entity_name": "US patent 277846 - Process of Manufacturing Carbons for Incandescent Lamps"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvzg",
                "entity_name": "US patent 405239 - Apparatus for the Manufacture of Filaments for Incandescent Lamps"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvzk",
                "entity_name": "US patent 405170 - Manufacture of Filaments for Electric Lamps"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvzn",
                "entity_name": "US patent 430212 - Manufacture of explosive"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yqvzr",
                "entity_name": "US patent 618703 - Apparatus for Manufacturing Filaments for Electric Lamps"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnjgf",
                "entity_name": "Organic semiconductors and growth approaches therefor: U.S. Patent No. 8,119,445"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_44",
                "entity_name": "Effect of the plasmonic dispersion relation on the transmission properties of subwavelength holes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37s72",
                "entity_name": "Optical communication with phase encoding and optical filtering"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38792",
                "entity_name": "Apparatus and method for routing optical signals through wavelength-coding in a self-routed wavelength addressable network"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387bj",
                "entity_name": "Monolithic wavelength meter and photodetector using a wavelength dependent reflector"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387mk",
                "entity_name": "Apparatus and method for an electronically tuned, wavelength-dependent optical detector"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lp1c",
                "entity_name": "Optical imaging system having an illumination source between object and image: U.S. Patent No. 7,504,613"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n4n7",
                "entity_name": "Method and system of adaptive exposure for a camera: U.S. Patent No. 7,777,191"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lj5q",
                "entity_name": "Multizone bake/chill thermal cycling module: U.S. Patent No. 5,802,856"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lyb1",
                "entity_name": "Increasing capacity in wireless broadcast systems using distributed transmission/directional reception (DTDR): U.S. Patent No. 5,345,599"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j8t3m0",
                "entity_name": "Feeder layer and serum independent embryonic stem cells: U.S. Patent No. 7,641,897"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdngxd",
                "entity_name": "Delayed decision feedback sequence estimator: U.S. Patent No. 8,116,366"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37t6k",
                "entity_name": "Power controlled multiple access (PCMA) in wireless communication networks"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vdz",
                "entity_name": "Image data navigation method and apparatus"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zdk",
                "entity_name": "Micromachined high reflectance deformable mirror"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zl8",
                "entity_name": "Method using a monolithic crystalline material for producing radiation by quasi-phase-matching, diffusion bonded monolithic crystalline material for quasi-phase-matching, and method for fabricating same"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389fm",
                "entity_name": "Nicotine receptor agonists in stem cell and progenitor cell recruitment"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389m_",
                "entity_name": "Methods of reducing angiogenesis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3j98x",
                "entity_name": "Electric field domain patterning: U.S. Patent No. 6,156,255"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3kcz_",
                "entity_name": "Nicotine receptor agonists in stem cell and progenitor cell recruitment: U.S. Patent No. 6,720,340"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3kdtl",
                "entity_name": "Nicotine in therapeutic angiogenesis and vasculogenesis: U.S. Patent No. 6,417,205"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3kf8t",
                "entity_name": "Nicotine in therapeutic angiogenesis and vasculogenesis: U.S. Patent No. 7,160,904"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3kgdk",
                "entity_name": "Methods of reducing angiogenesis: U.S. Patent No. 7,045,534"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljt2",
                "entity_name": "Tomographic reconstruction for x-ray cone-beam scan data: U.S. Patent No. 7,409,033"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lzqz",
                "entity_name": "Adenoviral vector and methods for making and using the same: U.S. Patent No. 6,303,362"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n7nd",
                "entity_name": "Registration system and method for tracking lung nodules in medical images: U.S. Patent No. 7,657,073"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37ssf",
                "entity_name": "Biologically inspired climbing device"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38c01",
                "entity_name": "Climbing with dry adhesives"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04j1_65",
                "entity_name": "Analog/Digital System for Television Services"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387fk",
                "entity_name": "Self-oriented bundles of carbon nanotubes and method of making same: US Patent No. 6,900,580"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3890m",
                "entity_name": "Imaging device for optically extracting features of an object"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389dj",
                "entity_name": "Workspace expansion controller for human interface systems"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lh0x",
                "entity_name": "Variable density fourier velocity encoding MR imaging: U.S. Patent No. 6,650,115"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lh8t",
                "entity_name": "Adaptive beam forming for transmitter operation in a wireless communication system: U.S. Patent No. 6,101,399"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lh9x",
                "entity_name": "Method and apparatus for adaptive transmission beam forming in a wireless communication system: U.S. Patent No. 6,665,545"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhbq",
                "entity_name": "Method and apparatus for adaptive transmission beam forming in a wireless communication system: U.S. Patent No. 7,286,855"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lk55",
                "entity_name": "Creating large bandwidth line defects by embedding dielectric waveguides into photonic crystal slabs: U.S. Patent No. 6,957,003"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkg0",
                "entity_name": "Learning enhanced simulated annealing: U.S. Patent No. 7,840,504"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llwz",
                "entity_name": "Methods and compositions for regulating adipogenesis: U.S. Patent No. 7,378,246"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03k0n64",
                "entity_name": "#223898"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37szx",
                "entity_name": "Data normalization in inverse geometry computed tomography system"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xrs",
                "entity_name": "MRI methods for combining separate species and quantifying a species"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38b0q",
                "entity_name": "Flourescence-based isolation of differentially induced genes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lk37",
                "entity_name": "Adaptive optical signal processing with multimode waveguides: U.S. Patent No. 7,844,144"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkvg",
                "entity_name": "Human neutralizing monoclonal antibodies to H5N1 influenza A virus: U.S. Patent No. 7,879,326"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnbr",
                "entity_name": "Long-wavelength FPs: U.S. Patent No. 7,326,771"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mfj0",
                "entity_name": "Polymerase chain reaction assays for monitoring antiviral therapy and making therapeutic decisions in the treatment of acquired immunodeficiency syndrome: U.S. Patent No. 5,856,086"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n7lx",
                "entity_name": "Method for beam hardening correction in quantitative computed X-ray tomography: U.S. Patent No. 6,324,240"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09thblc",
                "entity_name": "Sound Reproduction System"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lqcs",
                "entity_name": "Binary tree for complex supervised learning: U.S. Patent No. 7,133,856"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37r8y",
                "entity_name": "Compositions and methods for diagnosing and treating neuropsychiatric disorders"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rb0",
                "entity_name": "Compositions and methods for diagnosing and treating mood disorders"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37smb",
                "entity_name": "Aperiodic quasi-phasematching gratings for chirp adjustments and frequency conversion of ultra-short pulses"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vg7",
                "entity_name": "Polyp identification through subtraction of models of medical images"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vqv",
                "entity_name": "Method of control leukocyte extravasation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389x8",
                "entity_name": "Drug design assay using human DNA polymerase .alpha.-catalytic polypeptide"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mk4c",
                "entity_name": "Multiplex cellular assays using detectable cell barcodes: U.S. Patent No. 8,003,312"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01039r0s",
                "entity_name": "U.S. Patent 4378116 - Spatial logical toy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012014pl",
                "entity_name": " US Patent D47789 "
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.022qzwl",
                "entity_name": "Microorganisms having multiple compatible degradative energy-generating plasmids and preparation thereof"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02k76d4",
                "entity_name": "Digital cartoon and animation process"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03jp6n3",
                "entity_name": "US775134"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.043jf_s",
                "entity_name": "Systems and method for resolving ambiguity"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0454wm8",
                "entity_name": "Package of frangible connectible products and means for retaining crumbs"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04_h_9b",
                "entity_name": "confocal scanning microscope"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04_h_rk",
                "entity_name": "First Head-Mounted Graphical Display"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05m585v",
                "entity_name": "Method and system for filtering text messages"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08vcq9y",
                "entity_name": "Electronic still camera"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gb56p8",
                "entity_name": "Improvement in Adjustable and Detachable Straps for Garments"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gb56s1",
                "entity_name": "Mark Twain's Scrapbook"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gb56s7",
                "entity_name": "Memory Builder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hzy_q1",
                "entity_name": "6,004,596"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_1z",
                "entity_name": "System and method for detecting integrated circuit pattern defects"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_57",
                "entity_name": "Integrated waveguide and method for designing integrated waveguide"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_6b",
                "entity_name": "System and method for estimating physical properties of objects and illuminants in a scene using modulated light emission"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_7x",
                "entity_name": "Integrated color pixel (ICP)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_db",
                "entity_name": "Fuel cell assembly"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37_h8",
                "entity_name": "Fuel cell assembly and method for making the same"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37psp",
                "entity_name": "Universal linker compositions for the release or transfer of chemical agents from a polynucleotide"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37pxk",
                "entity_name": "Method for matching and registering medical image data"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37qyc",
                "entity_name": "Three-dimensional pattern recognition method to detect shapes in medical images"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37qz1",
                "entity_name": "Heat diffusion based detection of structures of interest in medical images"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37r26",
                "entity_name": "Method for correcting magnetic field inhomogeneity distortion in MRI images having disconnected regions"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37r3y",
                "entity_name": "Concurrent frequency-sharing multi-user communication system with rate allocation approach"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37r4n",
                "entity_name": "Atomic absorption apparatus using a phase-modulated light beam"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37r5g",
                "entity_name": "Binary translation using peephole translation rules"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37r6k",
                "entity_name": "Isolation of mesenchymal stem cells"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37r7p",
                "entity_name": "Casting sharpened microminiature tips"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37r_6",
                "entity_name": "Flow imaging using balanced phase contrast steady state free precession magnetic resonance imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rdh",
                "entity_name": "Motion corrected magnetic resonance imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rjx",
                "entity_name": "GPS/INS vehicle attitude system"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rl1",
                "entity_name": "Method of fabricating cantilever for atomic force microscope having piezoresistive deflection detector"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rm4",
                "entity_name": "Joint reduction of NEXT and FEXT in xDSL systems"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rpy",
                "entity_name": "Express bit swapping in a multicarrier transmission system"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rr0",
                "entity_name": "Classification of patients having diffuse large B-cell lymphoma based upon gene expression"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rwx",
                "entity_name": "Method for temporally resolved, three-dimensional MR volume acquisitions"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37ry0",
                "entity_name": "MRI method apparatus for imaging a field of view which is larger than a magnetic field"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37rz3",
                "entity_name": "Modified X-ray tube for use in the presence of magnetic fields"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37s2h",
                "entity_name": "High regression rate hybrid rocket propellants"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37s85",
                "entity_name": "Micro-optical analysis system and approach therefor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37s9b",
                "entity_name": "Two-reporter FACS analysis of mammalian cells using green fluorescent proteins"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37snz",
                "entity_name": "Process for displaying and navigating panoramic video, and method and user interface for streaming panoramic video and images between a server and browser-based client application"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37sr5",
                "entity_name": "MxA as an antiviral drug and as a target for identification of antiviral drugs for DNA virus infections"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37t9t",
                "entity_name": "Data throughput over lossy communication links"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37tlt",
                "entity_name": "Quantitative test for bacterial pathogens"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37tn2",
                "entity_name": "Method and system of using intrinsic-based photosensing with high-speed line scanning for characterization of biological thick tissue including muscle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37v4t",
                "entity_name": "Computer graphics system for rendering images using full spectral illumination data"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vhl",
                "entity_name": "Pulsed intracavity nonlinear optical frequency converter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vjp",
                "entity_name": "Nonlinear optical frequency converter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vr_",
                "entity_name": "Method to control leukocyte extravasation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37vzx",
                "entity_name": "Laparoscopic kidney cooling device"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37w5l",
                "entity_name": "Semi-definite programming method for ad hoc network node localization"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37w_n",
                "entity_name": "Eukaryotic expression system for the incorporation of stable isotopes into proteins"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37wcp",
                "entity_name": "Isolation, growth, differentiation and genetic engineering of human muscle cells"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37wqb",
                "entity_name": "Anergy associated genes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xcx",
                "entity_name": "Optimization and design method for configurable analog circuits and devices"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xg8",
                "entity_name": "Fuel cell"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xng",
                "entity_name": "Method, apparatus and computer program for capturing motion of a cartoon and retargetting the motion to another object"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xqp",
                "entity_name": "Homodyne reconstruction of water and fat images based on iterative decomposition of MRI signals"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xv1",
                "entity_name": "Sliding window reconstruction and phase/field map updating for dynamic chemical shift imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37xyf",
                "entity_name": "Induction of immune response to antigens expressed by recombinant adeno-associated virus"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37y1g",
                "entity_name": "Anaerobe targeted enzyme-mediated prodrug therapy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37y3m",
                "entity_name": "Anaerobe targeted enzyme mediated prodrug therapy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37y_7",
                "entity_name": "Double half RF pulses for reduced sensitivity to eddy currents in UTE imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37yh4",
                "entity_name": "Microarrays of polypeptides"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37ykb",
                "entity_name": "Gene expression signature for prediction of human cancer progression"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37ym2",
                "entity_name": "Method for analyzing gene expression patterns"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37yn6",
                "entity_name": "Methods for fabricating microarrays of biological samples"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37ypc",
                "entity_name": "Microarray for determining the relative abundances of polynuceotide sequences"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37ys5",
                "entity_name": "Methods for constructing subarrays and subarrays made thereby"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37ys_",
                "entity_name": "System and method for performing compound vector operations"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37yxh",
                "entity_name": "Target for regulating multiple sclerosis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37yz4",
                "entity_name": "Reduction of blurring in view angle tilting MRI"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37z3z",
                "entity_name": "Non-invasive measurement of frozen tissue temperature using MRI signal"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37z6r",
                "entity_name": "Mitigation of photodarkening to achieve laser oscillation and amplification with highly doped fibers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zcg",
                "entity_name": "Laser-driven deflection arrangements and methods involving charged particle beams"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zfq",
                "entity_name": "Method of electrically controlling regions of ferroelectric polarization domains in solid state bodies"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zh1",
                "entity_name": "Method of controlling regions of ferroelectric polarization domains in solid state bodies"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zhw",
                "entity_name": "Monolithic total internal reflection optical resonator"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zk5",
                "entity_name": "Transverse-pumped sLAB laser/amplifier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zmc",
                "entity_name": "Electric field domain patterning"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j37zr3",
                "entity_name": "Patterned poled structure devices having increased aperture size, increased power handling and three dimensional patterning capabilities"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j386qh",
                "entity_name": "Osteopontin-related compositions and methods"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j386vz",
                "entity_name": "Dual-axis confocal microscope having improved performance for thick samples"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j386x1",
                "entity_name": "Modified antisense nucleotides complementary to a section of the human Ha-ras gene"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j386y4",
                "entity_name": "Integrated fastener-sensor arrangement"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j386zf",
                "entity_name": "Extendable connector and network"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387cm",
                "entity_name": "Electrostatically-controlled cantilever apparatus for continuous tuning of the resonance wavelength of a fabry-perot cavity"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387dq",
                "entity_name": "High performance micromechanical tunable verticle cavity surface emitting laser"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j387r_",
                "entity_name": "Crystalline-type device and approach therefor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3885s",
                "entity_name": "Multiple channel optical frequency mixers for all-optical signal processing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3887b",
                "entity_name": "Method for equalizing a multicarrier signal in a multicarrier communication system"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3888j",
                "entity_name": "Method and apparatus for adaptive, variable bandwidth, high-speed data transmission of a multicarrier signal over digital subscriber lines"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3889n",
                "entity_name": "Significance analysis of microarrays"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388_1",
                "entity_name": "Methods and compositions for treating a subject having an anthrax toxin mediated condition"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388f6",
                "entity_name": "Methods of bonding optical structures, bonding and silylation of optical structures, bonded optical structures, and silylated bonded optical structures"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388ly",
                "entity_name": "Bit rate and power allocation for multi-carrier communication systems"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388n2",
                "entity_name": "Method and apparatus for respiratory audio-visual biofeedback for imaging and radiotherapy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388qd",
                "entity_name": "Peak to average power ratio reduction"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388tj",
                "entity_name": "Cytotoxic T-cell lymphocyte (\"CTL\") activity regulation by class I MHC peptides"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388vn",
                "entity_name": "Immunomodulating dimers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j388y0",
                "entity_name": "Modulating SOS response induction by antimicrobial agents"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3891t",
                "entity_name": "Methods and compositions for regeneration of aged skeletal muscle tissues"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3892z",
                "entity_name": "Minimum cost solenoid magnet and method of making same"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38945",
                "entity_name": "Method of making optimized, air-core electromagnets"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38958",
                "entity_name": "Method for designing electromagnets having arbitrary geometrical constraints"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3896q",
                "entity_name": "Short bore-length asymmetric electromagnets for magnetic resonance imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389b9",
                "entity_name": "Correction of local field inhomogeneity in magnetic resonance imaging apparatus"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389lh",
                "entity_name": "Trigger release mechanism for reclining chair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389vn",
                "entity_name": "Mutagenicity screening method using human DNA polymerase or catalytic polypeptide"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389yh",
                "entity_name": "Compositions and methods for template-dependent enzymatic synthesis of nucleic acid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j389zy",
                "entity_name": "FACS-optimized mutants of the green fluorescent protein (GFP)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38b8z",
                "entity_name": "Efficient radio signal diversity combining using a small set of discrete amplitude and phase weights"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38bjz",
                "entity_name": "NF-AT polynucleotides"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38bnw",
                "entity_name": "Methods of identifying anti-viral agents"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38bx4",
                "entity_name": "RF field mapping for magnetic resonance imaging"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38bzt",
                "entity_name": "System and method for computing cumulative densities of data represented by gaussian distributions"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38c15",
                "entity_name": "Carbon nanotube devices"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38c62",
                "entity_name": "Integrated nanotube sensor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38c75",
                "entity_name": "Nanoparticles with controlled growth"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38c_j",
                "entity_name": "Method to produce single stranded DNA of defined length and sequence and DNA probes produced thereby"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38cbh",
                "entity_name": "Methods for the inhibition of neointima formation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38ccl",
                "entity_name": "Drug delivery platform"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38cdp",
                "entity_name": "Load-balanced routing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38ct3",
                "entity_name": "Methods and compositions for use in analyte detection using proximity probes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38cvq",
                "entity_name": "DNA fingerprinting using a branch migration assay"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38d23",
                "entity_name": "Automatic phase alignment for high-bandwidth cartesian-feedback power amplifiers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38d36",
                "entity_name": "Predicting changes in hydrofrac orientation in depleting oil and gas reservoirs"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38d79",
                "entity_name": "Architectures for cardiac CT based on area x-ray sources"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38d97",
                "entity_name": "Methods for analytic reconstruction for mult-source inverse geometry CT"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38dbc",
                "entity_name": "Resolution of dynamic memory allocation/deallocation and pointers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38dkp",
                "entity_name": "Dynamic multiple wavelength filter using a stratified volume holographic optical element"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j38dsd",
                "entity_name": "Scroll manufacturing tool"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3j97j",
                "entity_name": "Electric field domain patterning: U.S. Patent No. 5,800,767"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3j986",
                "entity_name": "Electric field domain patterning: U.S. Patent No. 6,013,221"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jcq_",
                "entity_name": "Fuel cell: U.S. Patent No. 7,670,699"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jcqb",
                "entity_name": "Fuel cell: U.S. Patent No. 7,700,218"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jd0l",
                "entity_name": "Induction of immune response to antigens expressed by recombinant adeno-associated virus: U.S. Patent No. 6,242,426"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jd25",
                "entity_name": "Anaerobe targeted enzyme-mediated prodrug therapy: U.S. Patent No. 6,416,754"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jdhg",
                "entity_name": "Methods for fabricating microarrays of biological samples: U.S. Patent No. 5,807,522"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jf_9",
                "entity_name": "Fuel cell assembly: U.S. Patent No. 7,108,936"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jfc0",
                "entity_name": "Fuel cell and method for making the same: U.S. Patent No. 7,273,671"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jfkn",
                "entity_name": "Fuel cell assembly: U.S. Patent No. 7,008,718"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jkwb",
                "entity_name": "Extendable connector and network: U.S. Patent No. 7,834,424"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jql2",
                "entity_name": "Self-oriented bundles of carbon nanotubes and method of making same: U.S. Patent No. 6,232,706"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3jvc0",
                "entity_name": "Crystalline-type device and approach therefor: U.S. Patent No. 7,749,872"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3k3yv",
                "entity_name": "Peak to average power ratio reduction: U.S. Patent No. 6,424,681"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3k4g6",
                "entity_name": "Peak to average power ratio reduction: U.S. Patent No. 6,512,797"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3l1nq",
                "entity_name": "NF-AT polypeptides and polynucleotides: U.S. Patent No. 6,197,925"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3l2hv",
                "entity_name": "NF-AT polypeptides and polynucleotides: U.S. Patent No. 6,150,099"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3l863",
                "entity_name": "Carbon nanotube devices: U.S. Patent No. 7,416,699"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3l_32",
                "entity_name": "Adenoviral vector and methods for making and using the same: U.S. Patent No. 7,045,344"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3l_gv",
                "entity_name": "Liver-specific gene expression cassettes, and methods of use: U.S. Patent No. 7,351,813"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lcg_",
                "entity_name": "System and method for re-ordering memory references for access to memory: U.S. Patent No. 7,047,391"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lgpf",
                "entity_name": "DNA fingerprinting using a branch migration assay: U.S. Patent No. 7,238,486"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lgrr",
                "entity_name": "Bioluminescence resonance energy transfer (BRET) systems and methods of use thereof: U.S. Patent No. 7,507,565"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lh4r",
                "entity_name": "Miniature scanning confocal microscope: U.S. Patent No. 6,007,208"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhdn",
                "entity_name": "Thin films having rock-salt-like structure deposited on amorphous surfaces: U.S. Patent No. 6,190,752"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhhy",
                "entity_name": "Method for fabricating orientation-patterned gallium arsenide seeding structures: U.S. Patent No. 6,273,949"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhq5",
                "entity_name": "CMOS image sensor with pixel level A/D conversion: U.S. Patent No. 5,461,425"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhr9",
                "entity_name": "Serial analog-to-digital converter using successive comparisons: U.S. Patent No. 5,801,657"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhsg",
                "entity_name": "Method and apparatus for converting a low dynamic range analog signal to a large dynamic range floating-point digital representation: U.S. Patent No. 6,369,737"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhtl",
                "entity_name": "Method and apparatus for converting a low dynamic range analog signal to a large dynamic range floating-point digital representation: U.S. Patent No. 6,538,593"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhw9",
                "entity_name": "Methods for simultaneous analog-to-digital conversion and multiplication: U.S. Patent No. 6,362,767"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lhzw",
                "entity_name": "Biological analysis arrangement and approach therefor: U.S. Patent No. 8,023,113"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lj25",
                "entity_name": "Motion/saturation detection system and method for synthesizing high dynamic range motion blur free images from multiple captures: U.S. Patent No. 7,061,524"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lj6w",
                "entity_name": "Multipath and tracking error reduction method for spread-spectrum receivers: U.S. Patent No. 6,868,110"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljdv",
                "entity_name": "Optical microcavity emitter arrangements and methods therefor: U.S. Patent No. 7,778,296"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljv5",
                "entity_name": "Adaptive anisotropic filtering of projection data for computed tomography: U.S. Patent No. 7,656,990"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljxc",
                "entity_name": "Computed tomography with increased field of view: U.S. Patent No. 7,062,006"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ljyg",
                "entity_name": "Photonic crystal reflectors/filters and displacement sensing applications: U.S. Patent No. 7,155,087"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lk09",
                "entity_name": "Photonic crystal reflectors/filters and displacement sensing applications: U.S. Patent No. 7,412,127"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lk19",
                "entity_name": "Adaptive optical signal processing with multimode waveguides: U.S. Patent No. 7,327,914"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lk42",
                "entity_name": "Ultra-slow down and storage of light pulses, and altering of pulse spectrum: U.S. Patent No. 7,269,313"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lk68",
                "entity_name": "Sensors for electrochemical, electrical or topographical analysis: U.S. Patent No. 7,444,856"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lk7f",
                "entity_name": "Gene therapy for the prevention of autoimmune disease: U.S. Patent No. 7,378,089"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkbr",
                "entity_name": "Generation of terahertz radiation in orientation-patterned semiconductors: U.S. Patent No. 7,339,718"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkcv",
                "entity_name": "Apparatus and method for quasi-phase-matched nonlinear frequency mixing between different transverse width modes: U.S. Patent No. 6,970,276"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkdy",
                "entity_name": "Nonlinear frequency mixer using quasi-phase-matching gratings having beam-modifying patterns: U.S. Patent No. 6,930,821"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lknw",
                "entity_name": "Fiber optics digital communication system and method using an optical resonator for optical signal processing: U.S. Patent No. 5,793,513"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lkrb",
                "entity_name": "Nogo epitopic fragments for modulating immune response: U.S. Patent No. 7,867,976"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lksg",
                "entity_name": "SleepSmart: U.S. Patent No. 6,468,234"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ll62",
                "entity_name": "Analysis of cerebral white matter for prognosis and diagnosis of neurological disorders: U.S. Patent No. 6,463,315"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ll8b",
                "entity_name": "Protein phosphorylation imaging systems, methods of making phosphorylation imaging systems, and methods of use thereof: U.S. Patent No. 7,834,148"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ll9f",
                "entity_name": "Polynucleotide encoding luciferase: U.S. Patent No. 7,939,649"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llbk",
                "entity_name": "Split protein self complementing fragments, systems, and methods of use thereof: U.S. Patent No. 7,601,517"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llcn",
                "entity_name": "Ligand-regulable transactivation systems, methods of use thereof, methods of detecting estrogen receptor ligands, and methods of differentiating estrogen receptor ligand agonists and antagonists: U.S. Patent No. 7,709,253"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llgs",
                "entity_name": "Multimodality imaging of reporter gene expression using a novel fusion vector in living cells and animals: U.S. Patent No. 7,955,844"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llhw",
                "entity_name": "Multiple GaInNAs quantum wells for high power applications: U.S. Patent No. 7,645,626"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lll9",
                "entity_name": "GaInNAsSb quantum well semiconductor devices: U.S. Patent No. 6,798,809"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llps",
                "entity_name": "Apparatus and method employing multilayer thin-film stacks for spatially shifting light: U.S. Patent No. 7,088,884"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llqw",
                "entity_name": "Method for dispersing light using multilayered structures: U.S. Patent No. 6,591,035"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3llvw",
                "entity_name": "In situ stabilization of persistent hydrophobic organic contaminants in sediments using coal- and wood-derived carbon sorbents: U.S. Patent No. 7,101,115"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lm51",
                "entity_name": "Video communications in a peer-to-peer network: U.S. Patent No. 7,969,997"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lm64",
                "entity_name": "Adaptive playout scheduling for multimedia communication: U.S. Patent No. 7,324,444"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmfx",
                "entity_name": "Method of efficient data encoding in dynamic magnetic resonance imaging: U.S. Patent No. 6,144,873"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmg_",
                "entity_name": "Methods of screening for B cell activity modulators: U.S. Patent No. 6,913,882"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lml8",
                "entity_name": "Negative differential resistance devices and approaches therefor: U.S. Patent No. 7,508,701"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmr2",
                "entity_name": "Chimeric AAV capsid proteins: U.S. Patent No. 8,067,014"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lms_",
                "entity_name": "Oxygen sensor: U.S. Patent No. 5,827,415"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lmvb",
                "entity_name": "Solid-state direct methanol thin film fuel cell: U.S. Patent No. 7,811,714"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnf9",
                "entity_name": "Electrostatic ultrasonic transducer: U.S. Patent No. 5,619,476"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lngp",
                "entity_name": "Method of fabricating an electrostatic ultrasonic transducer: U.S. Patent No. 6,004,832"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnj8",
                "entity_name": "DNA-templated combinatorial library chemistry: U.S. Patent No. 7,479,472"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnl7",
                "entity_name": "Gas sensor for ammonia, carbon dioxide and water: U.S. Patent No. 6,787,776"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnmc",
                "entity_name": "Methods for structural analysis of proteins: U.S. Patent No. 7,288,382"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnp0",
                "entity_name": "Multi-compartment separation in magnetic resonance using transient steady-state free precession imaging: U.S. Patent No. 7,576,535"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnq3",
                "entity_name": "Independent phase modulation for efficient dual-band 3D imaging: U.S. Patent No. 7,710,115"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lnwb",
                "entity_name": "Optical modulator and optical modulator array: U.S. Patent No. 5,909,303"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lp_4",
                "entity_name": "Sputtered silicon for microstructures and microcavities: U.S. Patent No. 6,822,304"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpgy",
                "entity_name": "Methods, software, and systems for knowledge base coordination: U.S. Patent No. 7,734,557"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpj1",
                "entity_name": "Methods for activating peripheral blood mononuclear cells (PBMCs) by administering human immunodeficiency virus (HIV) Tat under physiological oxygen levels: U.S. Patent No. 8,080,369"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lplg",
                "entity_name": "Enhanced surface plasmon resonance sensor using Goos-Hanchen effect: U.S. Patent No. 7,327,445"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpsx",
                "entity_name": "Ceramic superconductor/metal composite materials employing the superconducting proximity effect: U.S. Patent No. 6,420,318"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpw8",
                "entity_name": "Polymerase chain reaction assays for monitoring antiviral therapy and making therapeutic decisions in the treatment of acquired immunodeficiency syndrome: U.S. Patent No. 5,968,730"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpxc",
                "entity_name": "Polymerase chain reaction assays for monitoring antiviral therapy and making therapeutic decisions in the treatment of acquired immunodeficiency syndrome: U.S. Patent No. 6,503,705"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpy7",
                "entity_name": "Polymerase chain reaction assays for monitoring antiviral therapy and making therapeutic decisions in the treatment of acquired immunodeficiency syndrome: U.S. Patent No. 7,129,041"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lpz1",
                "entity_name": "Method and dosage form using an antagonist to gamma interferon to control MHC-associated autoimmune disease: U.S. Patent No. 6,036,956"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lq30",
                "entity_name": "Multiple interconnected ring oscillator circuit: U.S. Patent No. 5,475,344"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lq43",
                "entity_name": "Array oscillator circuit: U.S. Patent No. 5,717,362"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lq9d",
                "entity_name": "Forward viewing ultrasonic imaging catheter: U.S. Patent No. 5,651,366"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lqjd",
                "entity_name": "Apparatus and method for shear breakage of polynucleotides: U.S. Patent No. 5,846,832"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lqq4",
                "entity_name": "Plasma display panel with improved cell geometry: U.S. Patent No. 7,288,892"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lqy9",
                "entity_name": "Three dimensional magnetic resonance imaging using spiral trajectories in k-space: U.S. Patent No. 6,404,194"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lsn3",
                "entity_name": "Modulation of cell division by an early mitotic inhibitor protein: U.S. Patent No. 7,189,569"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lv5_",
                "entity_name": "Medical diagnostic ultrasound system and method for flow analysis: U.S. Patent No. 6,503,202"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lxsq",
                "entity_name": "Method and system for using computed tomography to test pulmonary function: U.S. Patent No. 7,668,357"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ly5x",
                "entity_name": "Elastomer spatial light modulators for extreme ultraviolet lithography: U.S. Patent No. 7,092,138"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lymt",
                "entity_name": "Method and system for reputation management in peer-to-peer networks: U.S. Patent No. 7,805,518"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3lz1t",
                "entity_name": "Silicon compatible integrated light communicator: U.S. Patent No. 7,875,522"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m0m9",
                "entity_name": "Adeno-associated viral vector-based methods and compositions for introducing an expression cassette into a cell: U.S. Patent No. 7,060,497"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m12m",
                "entity_name": "Methods of in vivo gene transfer using a sleeping beauty transposon system: U.S. Patent No. 6,613,752"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m1mm",
                "entity_name": "Method and system for four dimensional intensity modulated radiation therapy for motion compensated treatments: U.S. Patent No. 7,835,493"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m231",
                "entity_name": "System and method for using prospective evaluation of displacement and velocity of a respiratory trace in a five dimensional parameter space to reduce artifacts and dosage in four dimensional computed tomography: U.S. Patent No. 7,894,571"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m3sh",
                "entity_name": "Torque-position transformer for task control of position controlled robots: U.S. Patent No. 7,211,979"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m45n",
                "entity_name": "Torque-position transformer for task control of position controlled robots: U.S. Patent No. 7,405,531"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m6kv",
                "entity_name": "Signatures for human aging: U.S. Patent No. 7,908,090"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m71w",
                "entity_name": "Dual axis fluorescence microscope with modulated input: U.S. Patent No. 7,130,042"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m7hr",
                "entity_name": "Rapid, stable high-titre production of recombing retrovirus: U.S. Patent No. 5,830,725"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m8df",
                "entity_name": "Thermally and/or photochemically crosslinked electroactive polymers in the manufacture of opto-electronic devices: U.S. Patent No. 6,107,452"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m8vs",
                "entity_name": "Polymeric light-emitting device: U.S. Patent No. 5,998,045"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m97m",
                "entity_name": "Method for obtaining G protein-coupled receptor (GPCR) diffraction-quality crystals employing a monoclonal antibody that binds to the third intracellular loop (IL3): U.S. Patent No. 7,947,807"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3m9pg",
                "entity_name": "Crystal structure .beta..sub.2 adrenoreceptor: U.S. Patent No. 7,912,654"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mc0j",
                "entity_name": "Telomere-encoding synthetic DNA nanocircles, and their use for the elongation of telomere repeats: U.S. Patent No. 7,482,332"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mdqh",
                "entity_name": "Polymerase chain reaction assays for monitoring antiviral therapy and making therapeutic decisions in the treatment of acquired immunodeficiency syndrome: U.S. Patent No. 5,631,128"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mf3k",
                "entity_name": "Polymerase chain reaction assays for monitoring antiviral therapy and making therapeutic decisions in the treatment of acquired immunodeficiency syndrome: U.S. Patent No. 5,650,268"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mg7f",
                "entity_name": "Enhancer sequences for late T cell expressed genes: U.S. Patent No. 6,448,039"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mgmz",
                "entity_name": "Semiconductor device with high on current and low leakage: U.S. Patent No. 7,728,387"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mh1n",
                "entity_name": "Self-aligned vertical combdrive actuator and method of fabrication: U.S. Patent No. 6,713,367"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mhg2",
                "entity_name": "Integrated optical MEMS devices: U.S. Patent No. 7,238,621"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mj6q",
                "entity_name": "Methods for manipulating curves constrained to unparameterized surfaces: U.S. Patent No. 6,256,039"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mjpz",
                "entity_name": "Parameterized surface fitting technique having independent control of fitting and parameterization: U.S. Patent No. 6,256,038"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mlg6",
                "entity_name": "Method and compositions for modulating lifespan of hematolymphoid cells: U.S. Patent No. 5,614,397"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mlrg",
                "entity_name": "Method of screening for neuroprotective agents: U.S. Patent No. 6,265,147"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mm3l",
                "entity_name": "Real-time target tracking of an unpredictable target amid unknown obstacles: U.S. Patent No. 6,917,855"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mmkj",
                "entity_name": "Document security method utilizing microdrop combinatorics, ink set and ink composition used therein, and product formed: U.S. Patent No. 6,786,954"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3mmyw",
                "entity_name": "Universal fluid droplet ejector: U.S. Patent No. 5,943,075"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n4mf",
                "entity_name": "Uses of diterpenoid triepoxides as an anti-proliferative agent: U.S. Patent No. 6,949,510"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n4qt",
                "entity_name": "Positioning of photodetection events: U.S. Patent No. 7,645,997"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n4rz",
                "entity_name": "Semiconductor crystal high resolution imager: U.S. Patent No. 8,063,380"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n4t1",
                "entity_name": "Enhancement of B cell lymphoma and tumor resistance using idiotype/cytokine conjugates: U.S. Patent No. 6,099,846"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n4xf",
                "entity_name": "Fast method for dynamic MR imaging: U.S. Patent No. 6,784,664"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n4yp",
                "entity_name": "Time-reversal block transmit diversity system for channels with intersymbol interference and method: U.S. Patent No. 7,272,192"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n50r",
                "entity_name": "Room-temperature source of single photons based on a single molecule in a condensed matter host: U.S. Patent No. 7,068,698"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n54k",
                "entity_name": "Somatic recombination: U.S. Patent No. 7,282,621"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n58f",
                "entity_name": "Magnetic resonance imaging using off-centered spiral trajectories: U.S. Patent No. 6,215,306"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5jm",
                "entity_name": "Electrically activated multi-jointed manipulator: U.S. Patent No. 5,996,346"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5n8",
                "entity_name": "Word voter for redundant systems: U.S. Patent No. 6,910,173"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5qh",
                "entity_name": "Electrochemical memory with internal boundary: U.S. Patent No. 8,058,643"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5rm",
                "entity_name": "Electrochemical memory with heater: U.S. Patent No. 7,724,562"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5tk",
                "entity_name": "Method and system for forming a nitrided germanium-containing layer using plasma processing: U.S. Patent No. 7,517,812"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5wn",
                "entity_name": "Maximum likelihood estimator in the presence of non-identically distributed noise for decomposition of chemical species in MRI: U.S. Patent No. 7,592,807"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n5yy",
                "entity_name": "Switching systems and methods of operation of switching systems: U.S. Patent No. 6,351,466"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n61h",
                "entity_name": "Method and apparatus for single longitudinal mode operation of pulsed laser oscillators using efficient self-seeding: U.S. Patent No. 6,249,537"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n62l",
                "entity_name": "Motion compensated spiral FISP MRI: U.S. Patent No. 7,558,612"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n64_",
                "entity_name": "Full echo spiral-in/spiral-out magnetic resonance imaging: U.S. Patent No. 5,539,313"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n663",
                "entity_name": "Full echo spiral-in/spiral-out magnetic resonance imaging: U.S. Patent No. 5,650,723"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n682",
                "entity_name": "Calcium biosensor polypeptides and methods of use: U.S. Patent No. 7,481,994"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n6g7",
                "entity_name": "Optical imaging of molecular characteristics of biological specimen: U.S. Patent No. 7,767,414"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n6lq",
                "entity_name": "Methods for adapative spectral, spatial and temporal sensing for imaging applications: U.S. Patent No. 6,466,961"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n6mv",
                "entity_name": "Optical wavelength-division-multiplexed cross-connect incorporating optically controlled optical switch: U.S. Patent No. 6,445,839"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n6p4",
                "entity_name": "Optical modulator with side access: U.S. Patent No. 7,532,379"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n6q7",
                "entity_name": "Trunnion: U.S. Patent No. 4,829,982"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n6rx",
                "entity_name": "Methods and apparatus for interactive map-based analysis of digital video content: U.S. Patent No. 7,082,572"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n6t0",
                "entity_name": "Methods and apparatus for interactive point-of-view authoring of digital video content: U.S. Patent No. 7,823,058"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n6v5",
                "entity_name": "Detection of malicious programs: U.S. Patent No. 7,870,610"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n759",
                "entity_name": "Electric field induced spin-polarized current: U.S. Patent No. 7,037,807"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n783",
                "entity_name": "Method and apparatus for improved pumping medium for electro-osmotic pumps: U.S. Patent No. 7,458,783"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n7c2",
                "entity_name": "Quantification of aortoiliac endoluminal irregularity: U.S. Patent No. 7,324,675"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n7gn",
                "entity_name": "Curved-slab maximum intensity projections: U.S. Patent No. 7,170,517"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n7jw",
                "entity_name": "Quantification method of vessel calcification: U.S. Patent No. 7,330,576"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n7q3",
                "entity_name": "Object segregation in images: U.S. Patent No. 6,424,732"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n808",
                "entity_name": "Fluorescent dye binding peptides: U.S. Patent No. 6,747,135"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n81d",
                "entity_name": "Fluorescent dye binding peptides: U.S. Patent No. 7,332,356"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n83p",
                "entity_name": "Compositions of active Wnt protein: U.S. Patent No. 7,153,832"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n84s",
                "entity_name": "Compositions of active Wnt protein: U.S. Patent No. 7,335,643"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n881",
                "entity_name": "Oscillating dual-equilibrium steady state angiography using magnetic resonance imaging: U.S. Patent No. 6,552,542"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n896",
                "entity_name": "Cooperative OFDMA and distributed MIMO relaying over dense wireless networks: U.S. Patent No. 8,027,301"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8dz",
                "entity_name": "Neural prosthesis based on photomechanical deflectors and tactile sensory cells: U.S. Patent No. 7,447,547"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8h6",
                "entity_name": "Method for securing a barrier device within the gastrointestinal tract and integral component for same: U.S. Patent No. 8,043,248"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8lr",
                "entity_name": "Linear precoding for multi-input systems based on channel estimate and channel statistics: U.S. Patent No. 7,680,212"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8r8",
                "entity_name": "System and method for aerial image sensing: U.S. Patent No. 6,906,305"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8sd",
                "entity_name": "Electron bombardment of wide bandgap semiconductors for generating high brightness and narrow energy spread emission electrons: U.S. Patent No. 7,005,795"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n8th",
                "entity_name": "X-ray tube for operating in a magnetic field: U.S. Patent No. 6,810,110"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n920",
                "entity_name": "Maintaining the alignment of electric and magnetic fields in an x-ray tube operated in a magnetic field: U.S. Patent No. 6,976,953"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n93k",
                "entity_name": "Convex parimutuel contingent claim market mechanism: U.S. Patent No. 7,801,804"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n94n",
                "entity_name": "Magnetic sifter: U.S. Patent No. 7,615,382"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n95r",
                "entity_name": "Biomolecule immobilization on biosensors: U.S. Patent No. 7,989,396"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n96w",
                "entity_name": "Distributed magnetic field positioning system using code division multiple access: U.S. Patent No. 6,549,004"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9ld",
                "entity_name": "Cy7-allophycocyanin conjugates for use in multiplex fluorescence detection assays: U.S. Patent No. 5,714,386"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9v0",
                "entity_name": "Respiratory compensation in MRI coronary imaging using diminishing variance: U.S. Patent No. 6,771,997"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9w3",
                "entity_name": "Cosmetic powder dispenser and applicator: U.S. Patent No. 4,671,690"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3n9x6",
                "entity_name": "Replication and transfer of microstructures and nanostructures: U.S. Patent No. 6,849,558"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nb4r",
                "entity_name": "Transmission line techniques for MRI catheter coil miniaturization and tuning: U.S. Patent No. 6,766,185"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nb61",
                "entity_name": "Naked cuticle genes and their uses: U.S. Patent No. 6,630,323"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nb74",
                "entity_name": "Devices and methods for interfacing human users with electronic devices: U.S. Patent No. 6,083,270"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nb9l",
                "entity_name": "Devices and methods for interfacing human users with electronic devices: U.S. Patent No. 6,983,418"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbck",
                "entity_name": "Integration manager and natural interaction processor: U.S. Patent No. 7,480,619"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbdn",
                "entity_name": "Apparatus and method for hydraulic fracture imaging by joint inversion of deformation and seismicity: U.S. Patent No. 7,460,436"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbfr",
                "entity_name": "Devices for treating circadian rhythm disorders using LED's: U.S. Patent No. 6,350,275"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbgx",
                "entity_name": "Phototherapy of jaundiced newborns using garments containing semiconductor light-emitting devices: U.S. Patent No. 6,596,016"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nblh",
                "entity_name": "Fiber lasers having a complex-valued Vc-parameter for gain-guiding: U.S. Patent No. 6,751,388"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbnr",
                "entity_name": "Reconfigurable wavelength multiplexers and filters employing micromirror array in a gires-tournois interferometer: U.S. Patent No. 6,804,429"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nbsj",
                "entity_name": "Methods and apparatus for characterizing lesions in blood vessels and other body lumens: U.S. Patent No. 6,782,289"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nc1_",
                "entity_name": "Sequence database search with sequence search trees: U.S. Patent No. 6,633,817"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nc38",
                "entity_name": "Method and apparatus for shooting simulation of ballistic ammunition _with movable targets: U.S. Patent No. 4,478,581"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nc5g",
                "entity_name": "Catalytic depolymerization of polymers containing electrophilic linkages using nucleophilic reagents: U.S. Patent No. 6,911,546"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nc7n",
                "entity_name": "Heteroatom-stabilized carbenes and precursors thereto as depolymerization catalysts: U.S. Patent No. 7,053,221"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nc8s",
                "entity_name": "Catalytic depolymerization of polymers containing electrophilic linkages using nucleophilic reagents: U.S. Patent No. 7,544,800"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nc9v",
                "entity_name": "SensorBed: U.S. Patent No. 6,485,441"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ncby",
                "entity_name": "System and method for securely logging onto a remotely located computer: U.S. Patent No. 6,539,479"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nctq",
                "entity_name": "Method of making gate for charged particle motion: U.S. Patent No. 7,448,131"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ncvv",
                "entity_name": "Time-of-flight mass spectrometer system: U.S. Patent No. 6,870,157"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ncxy",
                "entity_name": "Microfabricated beam modulation device: U.S. Patent No. 7,176,452"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ncz2",
                "entity_name": "MRI tracking of cyclical motion by fourier integration of velocity: U.S. Patent No. 5,615,677"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3nd0g",
                "entity_name": "Methods and compositions for use in preparing siRNAs: U.S. Patent No. 7,556,944"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnf8n",
                "entity_name": "Magnetic resonance apparatus employing delayed self-refocusing RF excitation: U.S. Patent No. 5,280,245"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnfg0",
                "entity_name": "System and method for encoding document ranking vectors: U.S. Patent No. 8,166,039"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnfms",
                "entity_name": "Photonic crystal and method of fabrication: U.S. Patent No. 8,155,492"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnfry",
                "entity_name": "Spreadsheet system and method for managing photos: U.S. Patent No. 8,166,385"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdng0t",
                "entity_name": "Luciferases and methods for making and using the same: U.S. Patent No. 8,173,791"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdngg9",
                "entity_name": "Hedgehog pathway antagonists methods of use: U.S. Patent No. 8,119,640"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnglt",
                "entity_name": "Cochlear optical analysis system and approach therefor: U.S. Patent No. 8,099,156"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdngr4",
                "entity_name": "Minigene expression cassette: U.S. Patent No. 8,129,510"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnh0c",
                "entity_name": "Direct wafer bonded 2-D CUMT array: U.S. Patent No. 7,846,102"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnh51",
                "entity_name": "High-temperature electrostatic transducers and fabrication method: U.S. Patent No. 7,843,022"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnhlf",
                "entity_name": "Timing and frequency synchronization of OFDM signals: U.S. Patent No. 5,732,113"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnhwf",
                "entity_name": "Cone-beam CT imaging scheme: U.S. Patent No. 8,144,829"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnj0d",
                "entity_name": "Fluorogenic compounds converted to fluorophores by photochemical or chemical means and their use in biological systems: U.S. Patent No. 8,153,446"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnj9r",
                "entity_name": "Display arrangement and approaches therefor: U.S. Patent No. 8,199,100"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnjrb",
                "entity_name": "Method of removing dynamic nonlinear phase errors from MRI data: U.S. Patent No. 6,853,191"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnjv9",
                "entity_name": "Multi-coil reconstruction of MRI signals using linear phase multiplied data with separate demodulators for each coil: U.S. Patent No. 6,806,708"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnk35",
                "entity_name": "Anti-aliased magnetic resonance image reconstruction using partially parallel encoded data: U.S. Patent No. 7,439,739"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnkjr",
                "entity_name": "Gating device and driver for modulation of charged particle beams: U.S. Patent No. 7,456,391"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnkx5",
                "entity_name": "High frequency feedback in telerobotics: U.S. Patent No. 8,190,292"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnl0s",
                "entity_name": "Method and apparatus for tracking of deformable regions by phase contrast MRI: U.S. Patent No. 5,318,026"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnl5l",
                "entity_name": "Steady state free precession magnetic resonance imaging using phase detection of material separation: U.S. Patent No. 6,922,054"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnm_n",
                "entity_name": "Method and system for deriving location information from utility lines: U.S. Patent No. 8,120,533"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnmq7",
                "entity_name": "Shape completion, animation and marker-less motion capture of people, animals or characters: U.S. Patent No. 8,139,067"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnmwd",
                "entity_name": "Classification of patients having diffuse large b-cell lymphoma based upon gene expression: U.S. Patent No. 7,622,253"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnn8r",
                "entity_name": "Fat suppression in MRI using oscillating steady-state free precession: U.S. Patent No. 6,750,651"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnngd",
                "entity_name": "Generalized MRI reconstruction with correction for multiple image distortion: U.S. Patent No. 7,408,345"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnnm0",
                "entity_name": "SSFP MRI with increased signal bandwidth: U.S. Patent No. 7,332,908"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdnnsd",
                "entity_name": "Detection of molecular interactions by .beta.-lactamase reporter fragment complementation: U.S. Patent No. 8,148,110"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ncr1kr",
                "entity_name": "System and method for temporary application component deletion and reload on a wireless device"
            }
        ]
    },
    {
        "qid": 313000502,
        "question": "what number of scottish clans exist in the britain?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "4",
                "entity_name": "4"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.scottishclans.scottish_clan",
                    "class": "base.scottishclans.scottish_clan",
                    "friendly_name": "Scottish Clan",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07ssc",
                    "class": "location.country",
                    "friendly_name": "britain",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.family.country",
                    "friendly_name": "Country"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.scottishclans.scottish_clan . \nVALUES ?x1 { :m.07ssc } \n?x0 :people.family.country ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "people"
        ],
        "s_expression": "(COUNT (AND base.scottishclans.scottish_clan (JOIN people.family.country m.07ssc)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "4"
            }
        ]
    },
    {
        "qid": 477000201,
        "question": "which aircraft types did boeing company design?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02hvvff",
                "entity_name": "Control"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02hvt16",
                "entity_name": "Command"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "aviation.aircraft_type",
                    "class": "aviation.aircraft_type",
                    "friendly_name": "Aircraft type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "aviation.aircraft_model",
                    "class": "aviation.aircraft_model",
                    "friendly_name": "Aircraft model",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0178g",
                    "class": "aviation.aircraft_designer",
                    "friendly_name": "boeing company",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "aviation.aircraft_model.aircraft_type",
                    "friendly_name": "Aircraft type"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "aviation.aircraft_model.designed_by",
                    "friendly_name": "Designed by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :aviation.aircraft_type . \n?x1 :type.object.type :aviation.aircraft_model . \nVALUES ?x2 { :m.0178g } \n?x1 :aviation.aircraft_model.aircraft_type ?x0 . \n?x1 :aviation.aircraft_model.designed_by ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "aviation"
        ],
        "s_expression": "(AND aviation.aircraft_type (JOIN (R aviation.aircraft_model.aircraft_type) (JOIN aviation.aircraft_model.designed_by m.0178g)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02hvvff",
                "entity_name": "Control"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02hvt16",
                "entity_name": "Command"
            }
        ]
    },
    {
        "qid": 310000402,
        "question": "how big is anna nichole smith's cup?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04y_wgs",
                "entity_name": "E cup or DD cup"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.playboyplaymates.cup_sizes",
                    "class": "base.playboyplaymates.cup_sizes",
                    "friendly_name": "Cup sizes",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0hwfl",
                    "class": "base.playboyplaymates.playmate",
                    "friendly_name": "anna nichole smith",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.playboyplaymates.playmate.cup",
                    "friendly_name": "Cup"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.playboyplaymates.cup_sizes . \nVALUES ?x1 { :m.0hwfl } \n?x1 :base.playboyplaymates.playmate.cup ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.playboyplaymates.cup_sizes (JOIN (R base.playboyplaymates.playmate.cup) m.0hwfl))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04y_wgs",
                "entity_name": "E cup or DD cup"
            }
        ]
    },
    {
        "qid": 489000501,
        "question": "rainfall averages more than 86 mm in new york during which months?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xx5",
                "entity_name": "February"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_ly",
                "entity_name": "January"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05lf_",
                "entity_name": "October"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04wzr",
                "entity_name": "March"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.040fv",
                "entity_name": "July"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ll3",
                "entity_name": "August"
            }
        ],
        "function": ">",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "time.month",
                    "class": "time.month",
                    "friendly_name": "Month",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "travel.travel_destination_monthly_climate",
                    "class": "travel.travel_destination_monthly_climate",
                    "friendly_name": "Travel destination monthly climate",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02_286",
                    "class": "travel.travel_destination",
                    "friendly_name": "new york",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "86^^http://www.w3.org/2001/XMLSchema#integer",
                    "class": "type.int",
                    "friendly_name": "86",
                    "question_node": 0,
                    "function": ">"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "travel.travel_destination_monthly_climate.month",
                    "friendly_name": "Month"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "travel.travel_destination.climate",
                    "friendly_name": "Climate"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "travel.travel_destination_monthly_climate.average_rainfall_mm",
                    "friendly_name": "Average rainfall"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :time.month . \n?x1 :type.object.type :travel.travel_destination_monthly_climate . \nVALUES ?x2 { :m.02_286 } \nFILTER (?x3 > \"86\"^^<http://www.w3.org/2001/XMLSchema#integer>)\n?x1 :travel.travel_destination_monthly_climate.month ?x0 . \n?x2 :travel.travel_destination.climate ?x1 . \n?x1 :travel.travel_destination_monthly_climate.average_rainfall_mm ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "travel"
        ],
        "s_expression": "(AND time.month (JOIN (R travel.travel_destination_monthly_climate.month) (AND (JOIN (R travel.travel_destination.climate) m.02_286) (gt travel.travel_destination_monthly_climate.average_rainfall_mm 86^^http://www.w3.org/2001/XMLSchema#integer))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xx5",
                "entity_name": "February"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_ly",
                "entity_name": "January"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05lf_",
                "entity_name": "October"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04wzr",
                "entity_name": "March"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.040fv",
                "entity_name": "July"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ll3",
                "entity_name": "August"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.028kb",
                "entity_name": "December"
            }
        ]
    },
    {
        "qid": 440000000,
        "question": "in the word of god, what are the first 17 songs?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s01v",
                "entity_name": "I Delight in the Lord"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s05m",
                "entity_name": "Let Us Then Approach the Throne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s08n",
                "entity_name": "Now to Him"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s022",
                "entity_name": "Better Than Life"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s019",
                "entity_name": "How Lovely Is Your Dwelling Place"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s03d",
                "entity_name": "You Are There"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s08f",
                "entity_name": "And My God Will Meet All Your Needs"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s03x",
                "entity_name": "Hard Pressed"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s07z",
                "entity_name": "O Wretched Man"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s01l",
                "entity_name": "Angels Long to Look Into These Things"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s053",
                "entity_name": "What Do You Think"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s093",
                "entity_name": "More Precious Than Gold"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s086",
                "entity_name": "Glory in His Name"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0rr2vh4",
                "entity_name": "To Him Who Sits on the Throne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s02m",
                "entity_name": "Covenant of Love"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s034",
                "entity_name": "One Thing I Ask"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s04t",
                "entity_name": "Hide Me Away, o Lord"
            }
        ],
        "function": "<=",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "music.release_track",
                    "class": "music.release_track",
                    "friendly_name": "Release track",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0354tn4",
                    "class": "music.release",
                    "friendly_name": "Word of God",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "17^^http://www.w3.org/2001/XMLSchema#integer",
                    "class": "type.int",
                    "friendly_name": "17",
                    "question_node": 0,
                    "function": "<="
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.release.track_list",
                    "friendly_name": "Track list"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "music.release_track.track_number",
                    "friendly_name": "Track #"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :music.release_track . \nVALUES ?x1 { :m.0354tn4 } \nFILTER (?x2 <= \"17\"^^<http://www.w3.org/2001/XMLSchema#integer>)\n?x1 :music.release.track_list ?x0 . \n?x0 :music.release_track.track_number ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "music"
        ],
        "s_expression": "(AND music.release_track (AND (JOIN (R music.release.track_list) m.0354tn4) (le music.release_track.track_number 17^^http://www.w3.org/2001/XMLSchema#integer)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s01v",
                "entity_name": "I Delight in the Lord"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s05m",
                "entity_name": "Let Us Then Approach the Throne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s08n",
                "entity_name": "Now to Him"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s022",
                "entity_name": "Better Than Life"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s019",
                "entity_name": "How Lovely Is Your Dwelling Place"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s03d",
                "entity_name": "You Are There"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s08f",
                "entity_name": "And My God Will Meet All Your Needs"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s03x",
                "entity_name": "Hard Pressed"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s07z",
                "entity_name": "O Wretched Man"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s01l",
                "entity_name": "Angels Long to Look Into These Things"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s053",
                "entity_name": "What Do You Think"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s093",
                "entity_name": "More Precious Than Gold"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s086",
                "entity_name": "Glory in His Name"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0rr2vh4",
                "entity_name": "To Him Who Sits on the Throne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s02m",
                "entity_name": "Covenant of Love"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s034",
                "entity_name": "One Thing I Ask"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s04t",
                "entity_name": "Hide Me Away, o Lord"
            }
        ]
    },
    {
        "qid": 414000400,
        "question": "where are rockets higher than 55.0 m built?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02bck_",
                "entity_name": "Alliant Techsystems"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0178g",
                "entity_name": "Boeing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bmltw",
                "entity_name": "United Launch Alliance"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03kry_",
                "entity_name": "Boeing Defense, Space & Security"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fj01",
                "entity_name": "Thiokol"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01cp1t",
                "entity_name": "Douglas Aircraft Company"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09ml88",
                "entity_name": "United Space Alliance"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hkqn",
                "entity_name": "Lockheed Martin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01gcl8",
                "entity_name": "North American Aviation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02t63",
                "entity_name": "European Space Agency"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.018bmr",
                "entity_name": "S.P. Korolev Rocket and Space Corporation Energia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.033xml",
                "entity_name": "Yuzhnoye Design Office"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02hk3j",
                "entity_name": "Martin Marietta"
            }
        ],
        "function": ">",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.rocket_manufacturer",
                    "class": "spaceflight.rocket_manufacturer",
                    "friendly_name": "Rocket Manufacturer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "spaceflight.rocket",
                    "class": "spaceflight.rocket",
                    "friendly_name": "Rocket",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "55.0^^http://www.w3.org/2001/XMLSchema#double",
                    "class": "type.float",
                    "friendly_name": "55.0",
                    "question_node": 0,
                    "function": ">"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 2,
                    "relation": "spaceflight.rocket.height_meters",
                    "friendly_name": "Height"
                },
                {
                    "start": 0,
                    "end": 1,
                    "relation": "spaceflight.rocket_manufacturer.rockets_manufactured",
                    "friendly_name": "Rockets Manufactured"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.rocket_manufacturer . \n?x1 :type.object.type :spaceflight.rocket . \nFILTER (?x2 > \"55.0\"^^<http://www.w3.org/2001/XMLSchema#double>)\n?x1 :spaceflight.rocket.height_meters ?x2 . \n?x0 :spaceflight.rocket_manufacturer.rockets_manufactured ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "spaceflight"
        ],
        "s_expression": "(AND spaceflight.rocket_manufacturer (JOIN spaceflight.rocket_manufacturer.rockets_manufactured (gt spaceflight.rocket.height_meters 55.0^^http://www.w3.org/2001/XMLSchema#double)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02bck_",
                "entity_name": "Alliant Techsystems"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025sdg2",
                "entity_name": "Rockwell International"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hkqn",
                "entity_name": "Lockheed Martin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0178g",
                "entity_name": "Boeing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03kry_",
                "entity_name": "Boeing Defense, Space & Security"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bmltw",
                "entity_name": "United Launch Alliance"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01gcl8",
                "entity_name": "North American Aviation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fj01",
                "entity_name": "Thiokol"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01cp1t",
                "entity_name": "Douglas Aircraft Company"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09ml88",
                "entity_name": "United Space Alliance"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01vhl6",
                "entity_name": "Rocketdyne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.018bmr",
                "entity_name": "S.P. Korolev Rocket and Space Corporation Energia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02t63",
                "entity_name": "European Space Agency"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.033xml",
                "entity_name": "Yuzhnoye Design Office"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02hk3j",
                "entity_name": "Martin Marietta"
            }
        ]
    },
    {
        "qid": 471000601,
        "question": "what are the neighboring constellations of scorpio?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04h36",
                "entity_name": "Libra"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.019d34",
                "entity_name": "Norma"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.constellation",
                    "class": "astronomy.constellation",
                    "friendly_name": "Constellation",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "astronomy.constellation_bordering_relationship",
                    "class": "astronomy.constellation_bordering_relationship",
                    "friendly_name": "Constellation bordering relationship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.06pgz",
                    "class": "astronomy.constellation",
                    "friendly_name": "scorpio",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "astronomy.constellation_bordering_relationship.constellations",
                    "friendly_name": "Constellations"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "astronomy.constellation_bordering_relationship.constellations",
                    "friendly_name": "Constellations"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.constellation . \n?x1 :type.object.type :astronomy.constellation_bordering_relationship . \nVALUES ?x2 { :m.06pgz } \n?x1 :astronomy.constellation_bordering_relationship.constellations ?x0 . \n?x1 :astronomy.constellation_bordering_relationship.constellations ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "(AND astronomy.constellation (JOIN (R astronomy.constellation_bordering_relationship.constellations) (JOIN astronomy.constellation_bordering_relationship.constellations m.06pgz)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04h36",
                "entity_name": "Libra"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01wvl",
                "entity_name": "Corona Australis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0v9n",
                "entity_name": "Ara"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05mhq",
                "entity_name": "Ophiuchus"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.019d34",
                "entity_name": "Norma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ls0",
                "entity_name": "Lupus"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06pgg",
                "entity_name": "Sagittarius"
            }
        ]
    },
    {
        "qid": 361000201,
        "question": "what is the voice style of pavarotti?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j862",
                "entity_name": "Tenor"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "music.voice",
                    "class": "music.voice",
                    "friendly_name": "Musical voice",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01h5j3",
                    "class": "music.opera_singer",
                    "friendly_name": "pavarotti",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.opera_singer.voice_type",
                    "friendly_name": "Voice Type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :music.voice . \nVALUES ?x1 { :m.01h5j3 } \n?x1 :music.opera_singer.voice_type ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "music"
        ],
        "s_expression": "(AND music.voice (JOIN (R music.opera_singer.voice_type) m.01h5j3))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j862",
                "entity_name": "Tenor"
            }
        ]
    },
    {
        "qid": 406000201,
        "question": "in the olympic, which country did armstrong represent?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09c7w0",
                "entity_name": "United States of America"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "olympics.olympic_participating_country",
                    "class": "olympics.olympic_participating_country",
                    "friendly_name": "Olympic participating country",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "olympics.olympic_medal_honor",
                    "class": "olympics.olympic_medal_honor",
                    "friendly_name": "Olympic athlete/competition relationship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0hfwb",
                    "class": "olympics.olympic_athlete",
                    "friendly_name": "armstrong",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "olympics.olympic_medal_honor.country",
                    "friendly_name": "Country"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "olympics.olympic_medal_honor.medalist",
                    "friendly_name": "Athlete"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :olympics.olympic_participating_country . \n?x1 :type.object.type :olympics.olympic_medal_honor . \nVALUES ?x2 { :m.0hfwb } \n?x1 :olympics.olympic_medal_honor.country ?x0 . \n?x1 :olympics.olympic_medal_honor.medalist ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "olympics"
        ],
        "s_expression": "(AND olympics.olympic_participating_country (JOIN (R olympics.olympic_medal_honor.country) (JOIN olympics.olympic_medal_honor.medalist m.0hfwb)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09c7w0",
                "entity_name": "United States of America"
            }
        ]
    },
    {
        "qid": 321000400,
        "question": "which solid material is the heaviest?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.025sk79",
                "entity_name": "Tungsten"
            }
        ],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.materials.solid_material",
                    "class": "base.materials.solid_material",
                    "friendly_name": "Solid Material",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.materials.solid_material.density",
                    "friendly_name": "Density"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.materials.solid_material . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :base.materials.solid_material . \n?y0 :base.materials.solid_material.density ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :base.materials.solid_material.density ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(ARGMAX base.materials.solid_material base.materials.solid_material.density)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.025sk79",
                "entity_name": "Tungsten"
            }
        ]
    },
    {
        "qid": 371000300,
        "question": "find the hospital projects of shepley, rutan and coolidge.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04gtf71",
                "entity_name": "Medfield State Hospital"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.hospital",
                    "class": "medicine.hospital",
                    "friendly_name": "Hospital",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0ksx3t",
                    "class": "architecture.architecture_firm",
                    "friendly_name": "Shepley, Rutan and Coolidge",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "architecture.architecture_firm.projects",
                    "friendly_name": "Projects"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.hospital . \nVALUES ?x1 { :m.0ksx3t } \n?x1 :architecture.architecture_firm.projects ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "architecture"
        ],
        "s_expression": "(AND medicine.hospital (JOIN (R architecture.architecture_firm.projects) m.0ksx3t))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04gtf71",
                "entity_name": "Medfield State Hospital"
            }
        ]
    },
    {
        "qid": 383000000,
        "question": "what are the themes of romeo and juliet?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.075nnwm",
                "entity_name": "Popular literature"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0319yd",
                "entity_name": "Star-crossed"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "book.book_subject",
                    "class": "book.book_subject",
                    "friendly_name": "Literature Subject",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06fsr",
                    "class": "theater.play",
                    "friendly_name": "Romeo and Juliet",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "book.book_subject.works",
                    "friendly_name": "Works Written About This Topic"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :book.book_subject . \nVALUES ?x1 { :m.06fsr } \n?x0 :book.book_subject.works ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "book"
        ],
        "s_expression": "(AND book.book_subject (JOIN book.book_subject.works m.06fsr))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.075nnwm",
                "entity_name": "Popular literature"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0319yd",
                "entity_name": "Star-crossed"
            }
        ]
    },
    {
        "qid": 436000000,
        "question": "what is largest unit of area in the international system of units?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jljd",
                "entity_name": "Square kilometer"
            }
        ],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "measurement_unit.area_unit",
                    "class": "measurement_unit.area_unit",
                    "friendly_name": "Unit of Area",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0c13h",
                    "class": "measurement_unit.measurement_system",
                    "friendly_name": "International System of Units",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "measurement_unit.area_unit.area_in_square_meters",
                    "friendly_name": "Area In Square Meters"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "measurement_unit.area_unit.measurement_system",
                    "friendly_name": "Measurement System"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.area_unit . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :measurement_unit.area_unit . \nVALUES ?y2 { :m.0c13h } \n?y0 :measurement_unit.area_unit.area_in_square_meters ?y1 . \n?y0 :measurement_unit.area_unit.measurement_system ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\nVALUES ?x2 { :m.0c13h } \n?x0 :measurement_unit.area_unit.area_in_square_meters ?x1 . \n?x0 :measurement_unit.area_unit.measurement_system ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "measurement_unit"
        ],
        "s_expression": "(ARGMAX (AND measurement_unit.area_unit (JOIN measurement_unit.area_unit.measurement_system m.0c13h)) measurement_unit.area_unit.area_in_square_meters)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jljd",
                "entity_name": "Square kilometer"
            }
        ]
    },
    {
        "qid": 433000000,
        "question": "britney spears is known to have stayed in what rehab facility?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.064cp29",
                "entity_name": "Undisclosed"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.popstra.rehab_facility",
                    "class": "base.popstra.rehab_facility",
                    "friendly_name": "Rehab Facility",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.popstra.rehab_stay",
                    "class": "base.popstra.rehab_stay",
                    "friendly_name": "Rehab Stay",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.015f7",
                    "class": "base.popstra.celebrity",
                    "friendly_name": "Britney Spears",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.popstra.rehab_stay.facility",
                    "friendly_name": "Facility"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.popstra.celebrity.rehab_stay",
                    "friendly_name": "Rehab"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.popstra.rehab_facility . \n?x1 :type.object.type :base.popstra.rehab_stay . \nVALUES ?x2 { :m.015f7 } \n?x1 :base.popstra.rehab_stay.facility ?x0 . \n?x2 :base.popstra.celebrity.rehab_stay ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.popstra.rehab_facility (JOIN (R base.popstra.rehab_stay.facility) (JOIN (R base.popstra.celebrity.rehab_stay) m.015f7)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.064cp29",
                "entity_name": "Undisclosed"
            }
        ]
    },
    {
        "qid": 444000102,
        "question": "in united states how many games published by electronic arts are available?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5",
                "entity_name": "5"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.game_version",
                    "class": "cvg.game_version",
                    "friendly_name": "Video Game Version",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01n073",
                    "class": "cvg.cvg_publisher",
                    "friendly_name": "Electronic Arts",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.09c7w0",
                    "class": "cvg.computer_game_region",
                    "friendly_name": "united states",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "cvg.cvg_publisher.game_versions_published",
                    "friendly_name": "Game Versions Published"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "cvg.game_version.regions",
                    "friendly_name": "Regions"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.game_version . \nVALUES ?x1 { :m.01n073 } \nVALUES ?x2 { :m.09c7w0 } \n?x1 :cvg.cvg_publisher.game_versions_published ?x0 . \n?x0 :cvg.game_version.regions ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "cvg"
        ],
        "s_expression": "(COUNT (AND cvg.game_version (AND (JOIN (R cvg.cvg_publisher.game_versions_published) m.01n073) (JOIN cvg.game_version.regions m.09c7w0))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "5"
            }
        ]
    },
    {
        "qid": 496000101,
        "question": "for those casinos owned by the same guy as bellagio hotel, which one has the least rooms?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0937y7",
                "entity_name": "Nevada Landing Hotel and Casino"
            }
        ],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.casinos.casino",
                    "class": "base.casinos.casino",
                    "friendly_name": "Casino",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.casinos.casino_owner",
                    "class": "base.casinos.casino_owner",
                    "friendly_name": "Casino owner",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.033bxs",
                    "class": "base.casinos.casino",
                    "friendly_name": "bellagio hotel",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.casinos.casino_owner.casinos_owned",
                    "friendly_name": "Casinos owned"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "base.casinos.casino.rooms",
                    "friendly_name": "Rooms"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "base.casinos.casino_owner.casinos_owned",
                    "friendly_name": "Casinos owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.casinos.casino . \n?x1 :type.object.type :base.casinos.casino_owner . \n{\nSELECT (MIN(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :base.casinos.casino . \n?y1 :type.object.type :base.casinos.casino_owner . \nVALUES ?y3 { :m.033bxs } \n?y1 :base.casinos.casino_owner.casinos_owned ?y0 . \n?y0 :base.casinos.casino.rooms ?y2 . \n?y1 :base.casinos.casino_owner.casinos_owned ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\nVALUES ?x3 { :m.033bxs } \n?x1 :base.casinos.casino_owner.casinos_owned ?x0 . \n?x0 :base.casinos.casino.rooms ?x2 . \n?x1 :base.casinos.casino_owner.casinos_owned ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(ARGMIN (AND base.casinos.casino (JOIN (R base.casinos.casino_owner.casinos_owned) (JOIN base.casinos.casino_owner.casinos_owned m.033bxs))) base.casinos.casino.rooms)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0937y7",
                "entity_name": "Nevada Landing Hotel and Casino"
            }
        ]
    },
    {
        "qid": 465000500,
        "question": "who founded a religion that worships god?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0z1b6",
                "entity_name": "Bah\u00e1'u'll\u00e1h"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01tz0x",
                "entity_name": "William Miller"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03glxv",
                "entity_name": "Joseph Bates"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c9p7h",
                "entity_name": "J. N. Andrews"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04s9n",
                "entity_name": "Muhammad in Islam"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.060nc",
                "entity_name": "Paul the Apostle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yd_",
                "entity_name": "Martin Luther"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0pwb",
                "entity_name": "Abraham"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045m1_",
                "entity_name": "Jesus Christ"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.071wp",
                "entity_name": "Saint Peter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01nxpn",
                "entity_name": "Ellen G. White"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.044mp",
                "entity_name": "Joseph Smith"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07hp5",
                "entity_name": "Thomas Cranmer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0259yp",
                "entity_name": "Oliver Cowdery"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.098zp",
                "entity_name": "John Knox"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03jp4",
                "entity_name": "Huldrych Zwingli"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "religion.founding_figure",
                    "class": "religion.founding_figure",
                    "friendly_name": "Founding Figure",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "religion.religion",
                    "class": "religion.religion",
                    "friendly_name": "Religion",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d05l6",
                    "class": "religion.deity",
                    "friendly_name": "God",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "religion.founding_figure.religion_founded",
                    "friendly_name": "Religion Founded"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "religion.deity.deity_of",
                    "friendly_name": "Religion(s) That Worship This Deity"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.founding_figure . \n?x1 :type.object.type :religion.religion . \nVALUES ?x2 { :m.0d05l6 } \n?x0 :religion.founding_figure.religion_founded ?x1 . \n?x2 :religion.deity.deity_of ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "religion"
        ],
        "s_expression": "(AND religion.founding_figure (JOIN religion.founding_figure.religion_founded (JOIN (R religion.deity.deity_of) m.0d05l6)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0z1b6",
                "entity_name": "Bah\u00e1'u'll\u00e1h"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01tz0x",
                "entity_name": "William Miller"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03glxv",
                "entity_name": "Joseph Bates"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03lr5f",
                "entity_name": "James Springer White"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c9p7h",
                "entity_name": "J. N. Andrews"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04s9n",
                "entity_name": "Muhammad in Islam"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01b5wx",
                "entity_name": "Sarah"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.060nc",
                "entity_name": "Paul the Apostle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yd_",
                "entity_name": "Martin Luther"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0pwb",
                "entity_name": "Abraham"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045m1_",
                "entity_name": "Jesus Christ"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.041yl",
                "entity_name": "John Calvin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.071wp",
                "entity_name": "Saint Peter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01nxpn",
                "entity_name": "Ellen G. White"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.044mp",
                "entity_name": "Joseph Smith"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07hp5",
                "entity_name": "Thomas Cranmer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0259yp",
                "entity_name": "Oliver Cowdery"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.098zp",
                "entity_name": "John Knox"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03jp4",
                "entity_name": "Huldrych Zwingli"
            }
        ]
    },
    {
        "qid": 345000301,
        "question": "who developed the game guitar hero iii?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.035tl3",
                "entity_name": "Neversoft"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.067p42",
                "entity_name": "RedOctane"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051pnv",
                "entity_name": "Aspyr"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09v9mr",
                "entity_name": "Vicarious Visions"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p_nb4",
                "entity_name": "Budcat Creations"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.cvg_developer",
                    "class": "cvg.cvg_developer",
                    "friendly_name": "Video Game Developer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.025vn5m",
                    "class": "cvg.musical_game",
                    "friendly_name": "guitar hero iii",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "cvg.computer_videogame.developer",
                    "friendly_name": "Developer"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.cvg_developer . \nVALUES ?x1 { :m.025vn5m } \n?x1 :cvg.computer_videogame.developer ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "cvg"
        ],
        "s_expression": "(AND cvg.cvg_developer (JOIN (R cvg.computer_videogame.developer) m.025vn5m))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.035tl3",
                "entity_name": "Neversoft"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.067p42",
                "entity_name": "RedOctane"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051pnv",
                "entity_name": "Aspyr"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09v9mr",
                "entity_name": "Vicarious Visions"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p_nb4",
                "entity_name": "Budcat Creations"
            }
        ]
    },
    {
        "qid": 279000200,
        "question": "what type of clothing does kismet sell?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09j2d",
                "entity_name": "Clothing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06rrc",
                "entity_name": "Shoe"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "fashion.garment",
                    "class": "fashion.garment",
                    "friendly_name": "Garment",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0dksddv",
                    "class": "base.services.apparel_store",
                    "friendly_name": "Kismet",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.services.apparel_store.apparel_item",
                    "friendly_name": "Apparel item"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fashion.garment . \nVALUES ?x1 { :m.0dksddv } \n?x1 :base.services.apparel_store.apparel_item ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND fashion.garment (JOIN (R base.services.apparel_store.apparel_item) m.0dksddv))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09j2d",
                "entity_name": "Clothing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06rrc",
                "entity_name": "Shoe"
            }
        ]
    },
    {
        "qid": 337000001,
        "question": "which religion did christian faith originate from?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_gx",
                "entity_name": "Judaism"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "religion.religion",
                    "class": "religion.religion",
                    "friendly_name": "Religion",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01lp8",
                    "class": "religion.religion",
                    "friendly_name": "christian faith",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "religion.religion.branched_from",
                    "friendly_name": "Branched From"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.religion . \nVALUES ?x1 { :m.01lp8 } \n?x1 :religion.religion.branched_from ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "religion"
        ],
        "s_expression": "(AND religion.religion (JOIN (R religion.religion.branched_from) m.01lp8))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_gx",
                "entity_name": "Judaism"
            }
        ]
    },
    {
        "qid": 289000102,
        "question": "dale earnhardt jr owns which nascar organization?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0clz6l",
                "entity_name": "JR Motorsports"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.nascar.nascar_racing_organization",
                    "class": "base.nascar.nascar_racing_organization",
                    "friendly_name": "NASCAR Racing Organization",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.014x8j",
                    "class": "base.nascar.nascar_racing_organization_owner",
                    "friendly_name": "dale earnhardt jr",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.nascar.nascar_racing_organization_owner.racing_organization_owned",
                    "friendly_name": "Racing organization owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.nascar.nascar_racing_organization . \nVALUES ?x1 { :m.014x8j } \n?x1 :base.nascar.nascar_racing_organization_owner.racing_organization_owned ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.nascar.nascar_racing_organization (JOIN (R base.nascar.nascar_racing_organization_owner.racing_organization_owned) m.014x8j))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0clz6l",
                "entity_name": "JR Motorsports"
            }
        ]
    },
    {
        "qid": 381000100,
        "question": "what is the legal structure of nestl\u00e9?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.079bdg",
                "entity_name": "Publicly listed company"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.company_type",
                    "class": "business.company_type",
                    "friendly_name": "Organization legal structure",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01556g",
                    "class": "food.candy_bar_manufacturer",
                    "friendly_name": "Nestl\u00e9",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "organization.organization.legal_structure",
                    "friendly_name": "Legal structure"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.company_type . \nVALUES ?x1 { :m.01556g } \n?x1 :organization.organization.legal_structure ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "organization"
        ],
        "s_expression": "(AND business.company_type (JOIN (R organization.organization.legal_structure) m.01556g))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.079bdg",
                "entity_name": "Publicly listed company"
            }
        ]
    },
    {
        "qid": 413000400,
        "question": "who composed a ballet about orpheus?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09h_q",
                "entity_name": "Igor Stravinsky"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.ballet.ballet_composer",
                    "class": "base.ballet.ballet_composer",
                    "friendly_name": "Ballet composer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.ballet.ballet",
                    "class": "base.ballet.ballet",
                    "friendly_name": "Ballet",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0kv0c",
                    "class": "base.ballet.ballet_character",
                    "friendly_name": "Orpheus",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.ballet.ballet_composer.ballets_composed",
                    "friendly_name": "Ballets composed"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.ballet.ballet.characters",
                    "friendly_name": "Characters"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.ballet.ballet_composer . \n?x1 :type.object.type :base.ballet.ballet . \nVALUES ?x2 { :m.0kv0c } \n?x0 :base.ballet.ballet_composer.ballets_composed ?x1 . \n?x1 :base.ballet.ballet.characters ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.ballet.ballet_composer (JOIN base.ballet.ballet_composer.ballets_composed (JOIN base.ballet.ballet.characters m.0kv0c)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09h_q",
                "entity_name": "Igor Stravinsky"
            }
        ]
    },
    {
        "qid": 428000201,
        "question": "who have sponsored educational short films about menses?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01c5rq",
                "entity_name": "Kimberly-Clark"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.sponsor",
                    "class": "business.sponsor",
                    "friendly_name": "Sponsor",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.educationalshortfilm.educational_short_film",
                    "class": "base.educationalshortfilm.educational_short_film",
                    "friendly_name": "Educational Short Film",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.025swc8",
                    "class": "film.film_subject",
                    "friendly_name": "menses",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.educationalshortfilm.educational_short_film.sponsor",
                    "friendly_name": "Sponsor"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.educationalshortfilm.educational_short_film.subject",
                    "friendly_name": "Subjects"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.sponsor . \n?x1 :type.object.type :base.educationalshortfilm.educational_short_film . \nVALUES ?x2 { :m.025swc8 } \n?x1 :base.educationalshortfilm.educational_short_film.sponsor ?x0 . \n?x1 :base.educationalshortfilm.educational_short_film.subject ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND business.sponsor (JOIN (R base.educationalshortfilm.educational_short_film.sponsor) (JOIN base.educationalshortfilm.educational_short_film.subject m.025swc8)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01c5rq",
                "entity_name": "Kimberly-Clark"
            }
        ]
    },
    {
        "qid": 340000100,
        "question": "what are all the cat breeds in existence?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0132wl",
                "entity_name": "Japanese Bobtail"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017fr0",
                "entity_name": "Balinese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09747c",
                "entity_name": "Abyssinian cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j60_",
                "entity_name": "American Curl"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012cc2",
                "entity_name": "Russian Blue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012k5z",
                "entity_name": "Munchkin cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012lnv",
                "entity_name": "Himalayan cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012ltm",
                "entity_name": "Birman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0132vv",
                "entity_name": "American Bobtail"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01rn4d",
                "entity_name": "Korat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027rfv_",
                "entity_name": "Cheetoh"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zg0m",
                "entity_name": "Chartreux"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zh3c",
                "entity_name": "Javanese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bx2rr",
                "entity_name": "Donskoy cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03c_kl",
                "entity_name": "Snowshoe cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03c_ndy",
                "entity_name": "Aegean cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04049n",
                "entity_name": "Sokoke"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt7yc",
                "entity_name": "Exotic Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt82m",
                "entity_name": "Japanese Bobtail Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt82s",
                "entity_name": "Munchkin Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt837",
                "entity_name": "Shorthair Curl"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt83w",
                "entity_name": "Minskin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.068m4y",
                "entity_name": "Savannah cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07451s",
                "entity_name": "American Wirehair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.081lg8",
                "entity_name": "Peterbald"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cb37",
                "entity_name": "British Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dpc0v",
                "entity_name": "German Rex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jc3n",
                "entity_name": "Exotic Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zkf9",
                "entity_name": "Turkish Angora"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012jg5",
                "entity_name": "Manx cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012jgm",
                "entity_name": "Cymric cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012jh9",
                "entity_name": "Scottish Fold"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zfy2",
                "entity_name": "Bombay cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zjz9",
                "entity_name": "Oriental Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zkbf",
                "entity_name": "Siberian cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_27x",
                "entity_name": "Chausie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.043lfs6",
                "entity_name": "Ukrainian Levkoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.049dpf",
                "entity_name": "Ojos Azules"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt82y",
                "entity_name": "Munchkin Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05q5v1v",
                "entity_name": "Kurilian Bobtail"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.086tnk",
                "entity_name": "Serengeti cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0891tx",
                "entity_name": "Toyger"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.089hrx",
                "entity_name": "Ussuri"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09b5_s",
                "entity_name": "Asian Semi-longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0djkp8",
                "entity_name": "LaPerm"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gzxy",
                "entity_name": "Bengal cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h4sv",
                "entity_name": "Selkirk Rex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j46v",
                "entity_name": "Persian cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j60j",
                "entity_name": "Maine Coon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt83d",
                "entity_name": "European Burmese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zfvv",
                "entity_name": "American Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02w7c7",
                "entity_name": "Ragdoll"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.petbreeds.cat_breed",
                    "class": "base.petbreeds.cat_breed",
                    "friendly_name": "Cat Breed",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01yrx",
                    "class": "biology.domesticated_animal",
                    "friendly_name": "Cat",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "biology.domesticated_animal.breeds",
                    "friendly_name": "Breeds"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.petbreeds.cat_breed . \nVALUES ?x1 { :m.01yrx } \n?x1 :biology.domesticated_animal.breeds ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "biology"
        ],
        "s_expression": "(AND base.petbreeds.cat_breed (JOIN (R biology.domesticated_animal.breeds) m.01yrx))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0132wl",
                "entity_name": "Japanese Bobtail"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ttd9",
                "entity_name": "Pixie-bob"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017fr0",
                "entity_name": "Balinese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09747c",
                "entity_name": "Abyssinian cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j60_",
                "entity_name": "American Curl"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012cc2",
                "entity_name": "Russian Blue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012k5z",
                "entity_name": "Munchkin cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012k6q",
                "entity_name": "Ocicat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012lnv",
                "entity_name": "Himalayan cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012lr2",
                "entity_name": "Devon Rex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012ltm",
                "entity_name": "Birman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012zzh",
                "entity_name": "Somali cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0132vv",
                "entity_name": "American Bobtail"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017fsk",
                "entity_name": "Norwegian Forest cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01mvkt",
                "entity_name": "Burmese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01rn4d",
                "entity_name": "Korat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027rfv_",
                "entity_name": "Cheetoh"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qlzz",
                "entity_name": "Havana Brown"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02wt_k",
                "entity_name": "California Spangled"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zg0m",
                "entity_name": "Chartreux"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zh3c",
                "entity_name": "Javanese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zkd7",
                "entity_name": "Singapura cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bx2rr",
                "entity_name": "Donskoy cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03c_kl",
                "entity_name": "Snowshoe cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03c_ndy",
                "entity_name": "Aegean cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04049n",
                "entity_name": "Sokoke"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt7yc",
                "entity_name": "Exotic Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt82m",
                "entity_name": "Japanese Bobtail Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt82s",
                "entity_name": "Munchkin Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt837",
                "entity_name": "Shorthair Curl"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt83w",
                "entity_name": "Minskin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.068m4y",
                "entity_name": "Savannah cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07451s",
                "entity_name": "American Wirehair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07nnhk",
                "entity_name": "Oriental Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.081lg8",
                "entity_name": "Peterbald"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08b02s",
                "entity_name": "British Semi-longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08nhst",
                "entity_name": "Ragamuffin cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cb37",
                "entity_name": "British Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dpc0v",
                "entity_name": "German Rex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jc3n",
                "entity_name": "Exotic Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zkf9",
                "entity_name": "Turkish Angora"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012jg5",
                "entity_name": "Manx cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012jgm",
                "entity_name": "Cymric cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012jh9",
                "entity_name": "Scottish Fold"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017fv0",
                "entity_name": "Nebelung"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0229mb",
                "entity_name": "Egyptian Mau"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02s4ff",
                "entity_name": "Tonkinese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zfy2",
                "entity_name": "Bombay cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zjz9",
                "entity_name": "Oriental Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zkbf",
                "entity_name": "Siberian cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_27x",
                "entity_name": "Chausie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.043lfs6",
                "entity_name": "Ukrainian Levkoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.049dpf",
                "entity_name": "Ojos Azules"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04c41_",
                "entity_name": "European Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt82y",
                "entity_name": "Munchkin Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt832",
                "entity_name": "Ruffle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04myxc",
                "entity_name": "Burmilla"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05q5v1v",
                "entity_name": "Kurilian Bobtail"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.086tnk",
                "entity_name": "Serengeti cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0891tx",
                "entity_name": "Toyger"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.089hrx",
                "entity_name": "Ussuri"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09b5_s",
                "entity_name": "Asian Semi-longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0djkp8",
                "entity_name": "LaPerm"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g_3r",
                "entity_name": "Siamese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gzxy",
                "entity_name": "Bengal cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h4sv",
                "entity_name": "Selkirk Rex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h5fb",
                "entity_name": "Sphynx cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j45k",
                "entity_name": "Turkish Van"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j46v",
                "entity_name": "Persian cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j60j",
                "entity_name": "Maine Coon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt83d",
                "entity_name": "European Burmese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zfvv",
                "entity_name": "American Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02w7c7",
                "entity_name": "Ragdoll"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h05_",
                "entity_name": "Cornish Rex"
            }
        ]
    },
    {
        "qid": 476000401,
        "question": "what type of weapon was involved in the beslan school siege?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05gb3y",
                "entity_name": "Gun"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.disaster2.object_used_as_weapon",
                    "class": "base.disaster2.object_used_as_weapon",
                    "friendly_name": "Thing used as weapon",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.disaster2.attack_process",
                    "class": "base.disaster2.attack_process",
                    "friendly_name": "Violence",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03st9z",
                    "class": "base.disaster2.attack",
                    "friendly_name": "beslan school siege",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.disaster2.object_used_as_weapon.used_in_attack_s",
                    "friendly_name": "Used in attack"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.disaster2.attack_process.attack_event",
                    "friendly_name": "Attack event"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.disaster2.object_used_as_weapon . \n?x1 :type.object.type :base.disaster2.attack_process . \nVALUES ?x2 { :m.03st9z } \n?x0 :base.disaster2.object_used_as_weapon.used_in_attack_s ?x1 . \n?x1 :base.disaster2.attack_process.attack_event ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.disaster2.object_used_as_weapon (JOIN base.disaster2.object_used_as_weapon.used_in_attack_s (JOIN base.disaster2.attack_process.attack_event m.03st9z)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05gb3y",
                "entity_name": "Gun"
            }
        ]
    },
    {
        "qid": 305000200,
        "question": "what are the u.s. presidents whose weight is at least 80.0 kilograms?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02mjmr",
                "entity_name": "Barack Obama"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09b6zr",
                "entity_name": "George W. Bush"
            }
        ],
        "function": ">=",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "government.us_president",
                    "class": "government.us_president",
                    "friendly_name": "US President",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "80.0^^http://www.w3.org/2001/XMLSchema#double",
                    "class": "type.float",
                    "friendly_name": "80.0",
                    "question_node": 0,
                    "function": ">="
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.person.weight_kg",
                    "friendly_name": "Weight"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :government.us_president . \nFILTER (?x1 >= \"80.0\"^^<http://www.w3.org/2001/XMLSchema#double>)\n?x0 :people.person.weight_kg ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "people"
        ],
        "s_expression": "(AND government.us_president (ge people.person.weight_kg 80.0^^http://www.w3.org/2001/XMLSchema#double))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02mjmr",
                "entity_name": "Barack Obama"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09b6zr",
                "entity_name": "George W. Bush"
            }
        ]
    },
    {
        "qid": 314000302,
        "question": "can you give the number of cameras produced by hewlett packard?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5",
                "entity_name": "5"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "digicams.digital_camera",
                    "class": "digicams.digital_camera",
                    "friendly_name": "Digital Camera",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03mnk",
                    "class": "digicams.digital_camera_manufacturer",
                    "friendly_name": "hewlett packard",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "digicams.digital_camera_manufacturer.cameras",
                    "friendly_name": "Cameras"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :digicams.digital_camera . \nVALUES ?x1 { :m.03mnk } \n?x1 :digicams.digital_camera_manufacturer.cameras ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "digicams"
        ],
        "s_expression": "(COUNT (AND digicams.digital_camera (JOIN (R digicams.digital_camera_manufacturer.cameras) m.03mnk)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "7"
            }
        ]
    },
    {
        "qid": 260000000,
        "question": "what is the constitution for law of canada?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ywgm",
                "entity_name": "Canadian Charter of Rights and Freedoms"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "law.constitution",
                    "class": "law.constitution",
                    "friendly_name": "Constitution",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01qk86",
                    "class": "base.morelaw.legal_system",
                    "friendly_name": "Law of Canada",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.morelaw.legal_system.constitution",
                    "friendly_name": "Constitution"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :law.constitution . \nVALUES ?x1 { :m.01qk86 } \n?x1 :base.morelaw.legal_system.constitution ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND law.constitution (JOIN (R base.morelaw.legal_system.constitution) m.01qk86))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ywgm",
                "entity_name": "Canadian Charter of Rights and Freedoms"
            }
        ]
    },
    {
        "qid": 451000200,
        "question": "the first song on anne?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lvl787",
                "entity_name": "Anne"
            }
        ],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "music.release_track",
                    "class": "music.release_track",
                    "friendly_name": "Release track",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03b7wt1",
                    "class": "music.release",
                    "friendly_name": "Anne",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "music.release_track.track_number",
                    "friendly_name": "Track #"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "music.release.track_list",
                    "friendly_name": "Track list"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :music.release_track . \n{\nSELECT (MIN(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :music.release_track . \nVALUES ?y2 { :m.03b7wt1 } \n?y0 :music.release_track.track_number ?y1 . \n?y2 :music.release.track_list ?y0 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\nVALUES ?x2 { :m.03b7wt1 } \n?x0 :music.release_track.track_number ?x1 . \n?x2 :music.release.track_list ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "music"
        ],
        "s_expression": "(ARGMIN (AND music.release_track (JOIN (R music.release.track_list) m.03b7wt1)) music.release_track.track_number)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lvl787",
                "entity_name": "Anne"
            }
        ]
    },
    {
        "qid": 320000300,
        "question": "how many drugs may lead to central nervous system depression?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "3",
                "entity_name": "3"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.drug",
                    "class": "medicine.drug",
                    "friendly_name": "Drug",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.089klv",
                    "class": "medicine.drug_physiologic_effect",
                    "friendly_name": "Central nervous system depression",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.drug_physiologic_effect.drugs_with_this_physiologic_effect",
                    "friendly_name": "Drugs with this physiologic effect"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.drug . \nVALUES ?x1 { :m.089klv } \n?x1 :medicine.drug_physiologic_effect.drugs_with_this_physiologic_effect ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(COUNT (AND medicine.drug (JOIN (R medicine.drug_physiologic_effect.drugs_with_this_physiologic_effect) m.089klv)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "3"
            }
        ]
    },
    {
        "qid": 289000202,
        "question": "what team does dale earnhardt jr control?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0clz6l",
                "entity_name": "JR Motorsports"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.nascar.nascar_racing_organization",
                    "class": "base.nascar.nascar_racing_organization",
                    "friendly_name": "NASCAR Racing Organization",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.014x8j",
                    "class": "base.nascar.nascar_racing_organization_owner",
                    "friendly_name": "dale earnhardt jr",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.nascar.nascar_racing_organization_owner.racing_organization_owned",
                    "friendly_name": "Racing organization owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.nascar.nascar_racing_organization . \nVALUES ?x1 { :m.014x8j } \n?x1 :base.nascar.nascar_racing_organization_owner.racing_organization_owned ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.nascar.nascar_racing_organization (JOIN (R base.nascar.nascar_racing_organization_owner.racing_organization_owned) m.014x8j))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0clz6l",
                "entity_name": "JR Motorsports"
            }
        ]
    },
    {
        "qid": 311000200,
        "question": "what is the number of softwares that google developed?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "68",
                "entity_name": "68"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.software",
                    "class": "computer.software",
                    "friendly_name": "Software",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.045c7b",
                    "class": "computer.software_developer",
                    "friendly_name": "Google",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "computer.software.developer",
                    "friendly_name": "Developer"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.software . \nVALUES ?x1 { :m.045c7b } \n?x0 :computer.software.developer ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "computer"
        ],
        "s_expression": "(COUNT (AND computer.software (JOIN computer.software.developer m.045c7b)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "87"
            }
        ]
    },
    {
        "qid": 350000300,
        "question": "what kind of magazine is the q magazine?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rm6pq",
                "entity_name": "Music magazine"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "book.magazine_genre",
                    "class": "book.magazine_genre",
                    "friendly_name": "Magazine genre",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02k1sj",
                    "class": "book.magazine",
                    "friendly_name": "Q magazine",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "book.magazine_genre.magazines_in_this_genre",
                    "friendly_name": "Magazines in this genre"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :book.magazine_genre . \nVALUES ?x1 { :m.02k1sj } \n?x0 :book.magazine_genre.magazines_in_this_genre ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "book"
        ],
        "s_expression": "(AND book.magazine_genre (JOIN book.magazine_genre.magazines_in_this_genre m.02k1sj))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rm6pq",
                "entity_name": "Music magazine"
            }
        ]
    },
    {
        "qid": 465000601,
        "question": "who started a religion that worships a almighty god?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0z1b6",
                "entity_name": "Bah\u00e1'u'll\u00e1h"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01tz0x",
                "entity_name": "William Miller"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03glxv",
                "entity_name": "Joseph Bates"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c9p7h",
                "entity_name": "J. N. Andrews"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04s9n",
                "entity_name": "Muhammad in Islam"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.060nc",
                "entity_name": "Paul the Apostle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yd_",
                "entity_name": "Martin Luther"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0pwb",
                "entity_name": "Abraham"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045m1_",
                "entity_name": "Jesus Christ"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.071wp",
                "entity_name": "Saint Peter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01nxpn",
                "entity_name": "Ellen G. White"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.044mp",
                "entity_name": "Joseph Smith"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07hp5",
                "entity_name": "Thomas Cranmer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0259yp",
                "entity_name": "Oliver Cowdery"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.098zp",
                "entity_name": "John Knox"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03jp4",
                "entity_name": "Huldrych Zwingli"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "religion.founding_figure",
                    "class": "religion.founding_figure",
                    "friendly_name": "Founding Figure",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "religion.religion",
                    "class": "religion.religion",
                    "friendly_name": "Religion",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d05l6",
                    "class": "religion.deity",
                    "friendly_name": "almighty god",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "religion.founding_figure.religion_founded",
                    "friendly_name": "Religion Founded"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "religion.deity.deity_of",
                    "friendly_name": "Religion(s) That Worship This Deity"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.founding_figure . \n?x1 :type.object.type :religion.religion . \nVALUES ?x2 { :m.0d05l6 } \n?x0 :religion.founding_figure.religion_founded ?x1 . \n?x2 :religion.deity.deity_of ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "religion"
        ],
        "s_expression": "(AND religion.founding_figure (JOIN religion.founding_figure.religion_founded (JOIN (R religion.deity.deity_of) m.0d05l6)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0z1b6",
                "entity_name": "Bah\u00e1'u'll\u00e1h"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01tz0x",
                "entity_name": "William Miller"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03glxv",
                "entity_name": "Joseph Bates"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03lr5f",
                "entity_name": "James Springer White"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c9p7h",
                "entity_name": "J. N. Andrews"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04s9n",
                "entity_name": "Muhammad in Islam"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01b5wx",
                "entity_name": "Sarah"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.060nc",
                "entity_name": "Paul the Apostle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yd_",
                "entity_name": "Martin Luther"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0pwb",
                "entity_name": "Abraham"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045m1_",
                "entity_name": "Jesus Christ"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.041yl",
                "entity_name": "John Calvin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.071wp",
                "entity_name": "Saint Peter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01nxpn",
                "entity_name": "Ellen G. White"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.044mp",
                "entity_name": "Joseph Smith"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07hp5",
                "entity_name": "Thomas Cranmer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0259yp",
                "entity_name": "Oliver Cowdery"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.098zp",
                "entity_name": "John Knox"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03jp4",
                "entity_name": "Huldrych Zwingli"
            }
        ]
    },
    {
        "qid": 301000101,
        "question": "what type of category of martial arts does tai chi fall into?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rj0b",
                "entity_name": "Strike"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "martial_arts.martial_art_category",
                    "class": "martial_arts.martial_art_category",
                    "friendly_name": "Martial Art Category",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07k4r",
                    "class": "martial_arts.martial_art",
                    "friendly_name": "tai chi",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "martial_arts.martial_art_category.martial_arts",
                    "friendly_name": "Martial arts"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :martial_arts.martial_art_category . \nVALUES ?x1 { :m.07k4r } \n?x0 :martial_arts.martial_art_category.martial_arts ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "martial_arts"
        ],
        "s_expression": "(AND martial_arts.martial_art_category (JOIN martial_arts.martial_art_category.martial_arts m.07k4r))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rj0b",
                "entity_name": "Strike"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.039cp",
                "entity_name": "Grappling"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_yl6z",
                "entity_name": "Internal"
            }
        ]
    },
    {
        "qid": 339000200,
        "question": "find basketball coaches whose ethnicity is jewish people.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02d3tg",
                "entity_name": "Dolph Schayes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0btwjs",
                "entity_name": "Bruce Pearl"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07g1_h",
                "entity_name": "Alexander Gomelsky"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "basketball.basketball_coach",
                    "class": "basketball.basketball_coach",
                    "friendly_name": "Basketball Coach",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.041rx",
                    "class": "people.ethnicity",
                    "friendly_name": "Jewish people",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.person.ethnicity",
                    "friendly_name": "Ethnicity"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :basketball.basketball_coach . \nVALUES ?x1 { :m.041rx } \n?x0 :people.person.ethnicity ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "people"
        ],
        "s_expression": "(AND basketball.basketball_coach (JOIN people.person.ethnicity m.041rx))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02d3tg",
                "entity_name": "Dolph Schayes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0btwjs",
                "entity_name": "Bruce Pearl"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07g1_h",
                "entity_name": "Alexander Gomelsky"
            }
        ]
    },
    {
        "qid": 363000102,
        "question": "what is the name of the lea that has the united states under their jurisdiction?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d6qjf",
                "entity_name": "Central Intelligence Agency (CIA)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.015dvh",
                "entity_name": "U.S. National Park Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_1m",
                "entity_name": "Federal Bureau of Investigation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03__hw",
                "entity_name": "Federal Air Marshal Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qtlv",
                "entity_name": "United States Border Patrol"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01ymr_",
                "entity_name": "Bureau of Alcohol, Tobacco, Firearms and Explosives"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012qj2",
                "entity_name": "United States Drug Enforcement Administration"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.061bsk",
                "entity_name": "United States Postal Inspection Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fcjg",
                "entity_name": "United States Air Force Office of Special Investigations"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04n_66",
                "entity_name": "Federal Bureau of Prisons"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fynw",
                "entity_name": "United States Secret Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.054lk6",
                "entity_name": "Bureau of Narcotics and Dangerous Drugs"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d39xh",
                "entity_name": "Fire Research Laboratory"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pks1r",
                "entity_name": "IRS Criminal Investigation Division"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05qcjv",
                "entity_name": "National Drug Intelligence Center"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025rqgp",
                "entity_name": "Diplomatic Security Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.044r9j",
                "entity_name": "Bureau of Prohibition"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05q9fp",
                "entity_name": "Pentagon Force Protection Agency"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07rq2w",
                "entity_name": "Board of Immigration Appeals"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02q26r9",
                "entity_name": "Office of Professional Responsibility"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04529w",
                "entity_name": "Bureau of Diplomatic Security"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05vv2f",
                "entity_name": "Federal Bureau of Narcotics"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r9rpm",
                "entity_name": "Executive Office for Immigration Review"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07j3s4",
                "entity_name": "Coast Guard Investigative Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pwsfm",
                "entity_name": "Shadow Wolves"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05q1cs",
                "entity_name": "Defense Criminal Investigative Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07xx9h",
                "entity_name": "United States Mint Police"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09ygtg",
                "entity_name": "Bureau of Drug Abuse Control"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ds_hk",
                "entity_name": "Federal Reserve Police"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.crime.law_enforcement_authority",
                    "class": "base.crime.law_enforcement_authority",
                    "friendly_name": "Law enforcement agency",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.09c7w0",
                    "class": "government.governmental_jurisdiction",
                    "friendly_name": "united states",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.governmental_jurisdiction.agencies",
                    "friendly_name": "Agencies"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.crime.law_enforcement_authority . \nVALUES ?x1 { :m.09c7w0 } \n?x1 :government.governmental_jurisdiction.agencies ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "government"
        ],
        "s_expression": "(AND base.crime.law_enforcement_authority (JOIN (R government.governmental_jurisdiction.agencies) m.09c7w0))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d6qjf",
                "entity_name": "Central Intelligence Agency (CIA)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0885q5",
                "entity_name": "United States Department of Veterans Affairs Police"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.015dvh",
                "entity_name": "U.S. National Park Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01fp_h",
                "entity_name": "U.S. Immigration and Customs Enforcement"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_1m",
                "entity_name": "Federal Bureau of Investigation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.065v18",
                "entity_name": "United States Capitol Police"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03__hw",
                "entity_name": "Federal Air Marshal Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03m8v8",
                "entity_name": "Naval Criminal Investigative Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qtlv",
                "entity_name": "United States Border Patrol"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pl1mm",
                "entity_name": "United States Army Criminal Investigation Command"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01ymr_",
                "entity_name": "Bureau of Alcohol, Tobacco, Firearms and Explosives"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012qj2",
                "entity_name": "United States Drug Enforcement Administration"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.061bsk",
                "entity_name": "United States Postal Inspection Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dtj5",
                "entity_name": "United States Department of Justice"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fcjg",
                "entity_name": "United States Air Force Office of Special Investigations"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04n_66",
                "entity_name": "Federal Bureau of Prisons"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fynw",
                "entity_name": "United States Secret Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.054lk6",
                "entity_name": "Bureau of Narcotics and Dangerous Drugs"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d39xh",
                "entity_name": "Fire Research Laboratory"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pks1r",
                "entity_name": "IRS Criminal Investigation Division"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05qcjv",
                "entity_name": "National Drug Intelligence Center"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0p6f_",
                "entity_name": "United States Marshals Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025rqgp",
                "entity_name": "Diplomatic Security Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.044r9j",
                "entity_name": "Bureau of Prohibition"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05q9fp",
                "entity_name": "Pentagon Force Protection Agency"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07rq2w",
                "entity_name": "Board of Immigration Appeals"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02q26r9",
                "entity_name": "Office of Professional Responsibility"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bhnh4",
                "entity_name": "Supreme Court Police"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04529w",
                "entity_name": "Bureau of Diplomatic Security"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04pv5p",
                "entity_name": "Federal Protective Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05vv2f",
                "entity_name": "Federal Bureau of Narcotics"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r9rpm",
                "entity_name": "Executive Office for Immigration Review"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07j3s4",
                "entity_name": "Coast Guard Investigative Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026x30",
                "entity_name": "United States Park Police"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pwsfm",
                "entity_name": "Shadow Wolves"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05q1cs",
                "entity_name": "Defense Criminal Investigative Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07xx9h",
                "entity_name": "United States Mint Police"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dq048",
                "entity_name": "Office of Criminal Investigations"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09ygtg",
                "entity_name": "Bureau of Drug Abuse Control"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ds_hk",
                "entity_name": "Federal Reserve Police"
            }
        ]
    },
    {
        "qid": 470000201,
        "question": "on the hudson, there is what kind of bridge?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03lzkv",
                "entity_name": "Cantilever bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04j90w",
                "entity_name": "Vertical-lift bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0csy8",
                "entity_name": "Suspension bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ms9p",
                "entity_name": "Truss bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d0h0h",
                "entity_name": "Girder bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02gr4y",
                "entity_name": "Swing bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d0pv0",
                "entity_name": "Continuous truss bridge"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "transportation.bridge_type",
                    "class": "transportation.bridge_type",
                    "friendly_name": "Bridge Type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "transportation.bridge",
                    "class": "transportation.bridge",
                    "friendly_name": "Bridge",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0cvyp",
                    "class": "geography.river",
                    "friendly_name": "hudson",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "transportation.bridge_type.bridges_of_this_type",
                    "friendly_name": "Bridges of this type"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "geography.body_of_water.bridges",
                    "friendly_name": "Bridges"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :transportation.bridge_type . \n?x1 :type.object.type :transportation.bridge . \nVALUES ?x2 { :m.0cvyp } \n?x0 :transportation.bridge_type.bridges_of_this_type ?x1 . \n?x2 :geography.body_of_water.bridges ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "geography"
        ],
        "s_expression": "(AND transportation.bridge_type (JOIN transportation.bridge_type.bridges_of_this_type (JOIN (R geography.body_of_water.bridges) m.0cvyp)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03lzkv",
                "entity_name": "Cantilever bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04j90w",
                "entity_name": "Vertical-lift bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0csy8",
                "entity_name": "Suspension bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ms9p",
                "entity_name": "Truss bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d0h0h",
                "entity_name": "Girder bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02gr4y",
                "entity_name": "Swing bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d0pv0",
                "entity_name": "Continuous truss bridge"
            }
        ]
    },
    {
        "qid": 273000202,
        "question": "what are the states of the united states?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fkf",
                "entity_name": "North Carolina"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07h34",
                "entity_name": "Tennessee"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07z1m",
                "entity_name": "Virginia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gyh",
                "entity_name": "Alabama"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05k7sb",
                "entity_name": "Massachusetts"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01n4w",
                "entity_name": "Colorado"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ly1",
                "entity_name": "Louisiana"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06mz5",
                "entity_name": "South Dakota"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0vbk",
                "entity_name": "Arkansas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ych",
                "entity_name": "Missouri"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01n7q",
                "entity_name": "California"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026mj",
                "entity_name": "Delaware"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xry",
                "entity_name": "Florida"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gh4",
                "entity_name": "Hawaii"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03s0w",
                "entity_name": "Iowa"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03s5t",
                "entity_name": "Idaho"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03v0t",
                "entity_name": "Illinois"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03v1s",
                "entity_name": "Indiana"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0488g",
                "entity_name": "Kansas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0498y",
                "entity_name": "Kentucky"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rrd",
                "entity_name": "Maryland"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rrx",
                "entity_name": "Michigan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ykg",
                "entity_name": "Minnesota"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.050ks",
                "entity_name": "Maine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.050l8",
                "entity_name": "Montana"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059_c",
                "entity_name": "Nevada"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059f4",
                "entity_name": "New Hampshire"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059rby",
                "entity_name": "New York"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fhy",
                "entity_name": "Nebraska"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fjf",
                "entity_name": "New Jersey"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fjy",
                "entity_name": "New Mexico"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fky",
                "entity_name": "North Dakota"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kj_",
                "entity_name": "Oregon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kkh",
                "entity_name": "Ohio"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05mph",
                "entity_name": "Oklahoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06btq",
                "entity_name": "Rhode Island"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06yxd",
                "entity_name": "South Carolina"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07_f2",
                "entity_name": "Vermont"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07b_l",
                "entity_name": "Texas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07srw",
                "entity_name": "Utah"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.081mh",
                "entity_name": "West Virginia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0824r",
                "entity_name": "Wisconsin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0846v",
                "entity_name": "Wyoming"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d0x8",
                "entity_name": "Georgia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hjy",
                "entity_name": "Alaska"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0vmt",
                "entity_name": "Arizona"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.locations.states_and_provences",
                    "class": "base.locations.states_and_provences",
                    "friendly_name": "States and provinces",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.09c7w0",
                    "class": "base.locations.countries",
                    "friendly_name": "united states",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.locations.countries.states_provinces_within",
                    "friendly_name": "States/provinces within"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.locations.states_and_provences . \nVALUES ?x1 { :m.09c7w0 } \n?x1 :base.locations.countries.states_provinces_within ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.locations.states_and_provences (JOIN (R base.locations.countries.states_provinces_within) m.09c7w0))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fkf",
                "entity_name": "North Carolina"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07h34",
                "entity_name": "Tennessee"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07z1m",
                "entity_name": "Virginia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gyh",
                "entity_name": "Alabama"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05k7sb",
                "entity_name": "Massachusetts"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01n4w",
                "entity_name": "Colorado"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ly1",
                "entity_name": "Louisiana"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06mz5",
                "entity_name": "South Dakota"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0vbk",
                "entity_name": "Arkansas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ych",
                "entity_name": "Missouri"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05tbn",
                "entity_name": "Pennsylvania"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01n7q",
                "entity_name": "California"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01x73",
                "entity_name": "Connecticut"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026mj",
                "entity_name": "Delaware"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xry",
                "entity_name": "Florida"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gh4",
                "entity_name": "Hawaii"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03s0w",
                "entity_name": "Iowa"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03s5t",
                "entity_name": "Idaho"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03v0t",
                "entity_name": "Illinois"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03v1s",
                "entity_name": "Indiana"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0488g",
                "entity_name": "Kansas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0498y",
                "entity_name": "Kentucky"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rrd",
                "entity_name": "Maryland"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rrx",
                "entity_name": "Michigan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04tgp",
                "entity_name": "Mississippi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ykg",
                "entity_name": "Minnesota"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.050ks",
                "entity_name": "Maine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.050l8",
                "entity_name": "Montana"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059_c",
                "entity_name": "Nevada"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059f4",
                "entity_name": "New Hampshire"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059rby",
                "entity_name": "New York"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fhy",
                "entity_name": "Nebraska"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fjf",
                "entity_name": "New Jersey"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fjy",
                "entity_name": "New Mexico"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fky",
                "entity_name": "North Dakota"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kj_",
                "entity_name": "Oregon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kkh",
                "entity_name": "Ohio"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05mph",
                "entity_name": "Oklahoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06btq",
                "entity_name": "Rhode Island"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06yxd",
                "entity_name": "South Carolina"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07_f2",
                "entity_name": "Vermont"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07b_l",
                "entity_name": "Texas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07srw",
                "entity_name": "Utah"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.081mh",
                "entity_name": "West Virginia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.081yw",
                "entity_name": "Washington"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0824r",
                "entity_name": "Wisconsin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0846v",
                "entity_name": "Wyoming"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d0x8",
                "entity_name": "Georgia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hjy",
                "entity_name": "Alaska"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0vmt",
                "entity_name": "Arizona"
            }
        ]
    },
    {
        "qid": 285000100,
        "question": "what format is used in leica m9 for uncompressed photos?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_2yh",
                "entity_name": "Digital Negative"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "digicams.camera_uncompressed_format",
                    "class": "digicams.camera_uncompressed_format",
                    "friendly_name": "Camera Uncompressed Format",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07sc73x",
                    "class": "digicams.digital_camera",
                    "friendly_name": "Leica M9",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "digicams.camera_compressed_format.cameras",
                    "friendly_name": "Cameras"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :digicams.camera_uncompressed_format . \nVALUES ?x1 { :m.07sc73x } \n?x0 :digicams.camera_compressed_format.cameras ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "digicams"
        ],
        "s_expression": "(AND digicams.camera_uncompressed_format (JOIN digicams.camera_compressed_format.cameras m.07sc73x))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_2yh",
                "entity_name": "Digital Negative"
            }
        ]
    },
    {
        "qid": 464000101,
        "question": "list the aircraft models that are similar to the a380.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02fb8m",
                "entity_name": "Ilyushin Il-96"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04c9f4",
                "entity_name": "Boeing New Large Airplane"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01gt7",
                "entity_name": "Boeing 747"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08wmwx",
                "entity_name": "Boeing 747-8"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01564y",
                "entity_name": "Lockheed C-5 Galaxy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.022r_6",
                "entity_name": "Boeing 747-400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02866k",
                "entity_name": "Antonov An-124 Ruslan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.024gh2",
                "entity_name": "Antonov An-225 Mriya"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04b5bw",
                "entity_name": "McDonnell Douglas MD-12"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "aviation.aircraft_model",
                    "class": "aviation.aircraft_model",
                    "friendly_name": "Aircraft model",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "aviation.comparable_aircraft_relationship",
                    "class": "aviation.comparable_aircraft_relationship",
                    "friendly_name": "Comparable Aircraft Relationship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.018rl2",
                    "class": "aviation.aircraft_model",
                    "friendly_name": "a380",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "aviation.comparable_aircraft_relationship.aircraft",
                    "friendly_name": "Aircraft"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "aviation.comparable_aircraft_relationship.aircraft",
                    "friendly_name": "Aircraft"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :aviation.aircraft_model . \n?x1 :type.object.type :aviation.comparable_aircraft_relationship . \nVALUES ?x2 { :m.018rl2 } \n?x1 :aviation.comparable_aircraft_relationship.aircraft ?x0 . \n?x1 :aviation.comparable_aircraft_relationship.aircraft ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "aviation"
        ],
        "s_expression": "(AND aviation.aircraft_model (JOIN (R aviation.comparable_aircraft_relationship.aircraft) (JOIN aviation.comparable_aircraft_relationship.aircraft m.018rl2)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02fb8m",
                "entity_name": "Ilyushin Il-96"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04c9f4",
                "entity_name": "Boeing New Large Airplane"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01gt7",
                "entity_name": "Boeing 747"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08wmwx",
                "entity_name": "Boeing 747-8"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01564y",
                "entity_name": "Lockheed C-5 Galaxy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.022r_6",
                "entity_name": "Boeing 747-400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02866k",
                "entity_name": "Antonov An-124 Ruslan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.024gh2",
                "entity_name": "Antonov An-225 Mriya"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04b5bw",
                "entity_name": "McDonnell Douglas MD-12"
            }
        ]
    },
    {
        "qid": 294000300,
        "question": "who runs hendrick motorsports?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.045_5y",
                "entity_name": "Rick Hendrick"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.nascar.nascar_racing_organization_owner",
                    "class": "base.nascar.nascar_racing_organization_owner",
                    "friendly_name": "NASCAR Racing organization owner",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06lg0g",
                    "class": "base.nascar.nascar_racing_organization",
                    "friendly_name": "Hendrick Motorsports",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.nascar.nascar_racing_organization.owners",
                    "friendly_name": "Owners"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.nascar.nascar_racing_organization_owner . \nVALUES ?x1 { :m.06lg0g } \n?x1 :base.nascar.nascar_racing_organization.owners ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.nascar.nascar_racing_organization_owner (JOIN (R base.nascar.nascar_racing_organization.owners) m.06lg0g))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.045_5y",
                "entity_name": "Rick Hendrick"
            }
        ]
    },
    {
        "qid": 478000201,
        "question": "what songs does guitar hero iii include?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.050r2c",
                "entity_name": "Yellow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dgk51",
                "entity_name": "Knights of Cydonia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01twcs",
                "entity_name": "Anarchy in the U.K."
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cr_wt",
                "entity_name": "La Grange"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01cw9x7",
                "entity_name": "One"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03xp99",
                "entity_name": "One"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02871qq",
                "entity_name": "Same Old Song and Dance"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0q43m_",
                "entity_name": "Juke Box Hero"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08cklv",
                "entity_name": "Rock and Roll All Nite"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nc41y",
                "entity_name": "Tina"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nc49r",
                "entity_name": "Halo Theme MJOLNIR Mix"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rpmd",
                "entity_name": "Paranoid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0flpph",
                "entity_name": "Rock You Like a Hurricane"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0263041",
                "entity_name": "Excuse Me Mr."
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.070z4x",
                "entity_name": "Paint It Black"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m1d6v",
                "entity_name": "Ever Fallen In Love (With Someone You Shouldn\u2019t\u2019ve)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lf9nr",
                "entity_name": "Pride and Joy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059w87",
                "entity_name": "Sunshine of Your Love"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fjk88",
                "entity_name": "Black Magic Woman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0czkkl",
                "entity_name": "Story of My Life"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n02s1",
                "entity_name": "God Put a Smile Upon Your Face"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04lhdz5",
                "entity_name": "The Judas Kiss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07sftt",
                "entity_name": "Raining Blood"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0crrmn",
                "entity_name": "Rock of Ages"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d0xd3",
                "entity_name": "Supermassive Black Hole"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qccf",
                "entity_name": "Holiday in Cambodia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0547nq",
                "entity_name": "She Bangs the Drums"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0816cq",
                "entity_name": "Dream On"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04gv9b5",
                "entity_name": "The Day That Never Comes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nctfn",
                "entity_name": "(We Are) The Road Crew"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09dyxz",
                "entity_name": "Slow Ride"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy913",
                "entity_name": "Hit Me with Your Best Shot"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nc432",
                "entity_name": "Messages"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9p7g",
                "entity_name": "Don't Hold Back"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05p4g__",
                "entity_name": "Surfing with the Alien"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.096ydc",
                "entity_name": "Johnny I Hardly Knew Ye"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.121qgdnt",
                "entity_name": "Radio Song"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01f34k7",
                "entity_name": "My Curse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.021f1m",
                "entity_name": "Don't Speak"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025sd6q",
                "entity_name": "Sunday Morning"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026l86h",
                "entity_name": "The Seeker"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026m2nn",
                "entity_name": "Top Gun Anthem"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026nqlz",
                "entity_name": "Prayer of the Refugee"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026pvry",
                "entity_name": "Talk Dirty to Me"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026sf4s",
                "entity_name": "Through the Fire and Flames"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02702w6",
                "entity_name": "Operation Ground and Pound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0270knw",
                "entity_name": "F.C.P.R.E.M.I.X."
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027646y",
                "entity_name": "Ruby"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02774bg",
                "entity_name": "Cliffs of Dover"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027dm29",
                "entity_name": "Mississippi Queen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0288vsn",
                "entity_name": "Kool Thing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p90s8",
                "entity_name": "Juke Box Hero"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pgmbp",
                "entity_name": "Rock This Town"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pqbw1",
                "entity_name": "Can't Be Saved"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02q2ssd",
                "entity_name": "My Curse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qhv49",
                "entity_name": "Antisocial"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r14hc",
                "entity_name": "3's & 7's"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r4z9_",
                "entity_name": "She Builds Quick Machines"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02w1spk",
                "entity_name": "The Pretender"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x31zc",
                "entity_name": "Pretty Handsome Awkward"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x55kk",
                "entity_name": "In the Belly of a Shark"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z56_k",
                "entity_name": "Almost Easy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03c_729",
                "entity_name": "Cities on Flame with Rock and Roll"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03d8xhc",
                "entity_name": "Carcinogen Crush"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gpc5",
                "entity_name": "Taxman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gr9x7",
                "entity_name": "Go That Far"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03h5xpn",
                "entity_name": "Mauvais Gar\u00e7on"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03nlw9g",
                "entity_name": "Peace of Mind"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03qkg55",
                "entity_name": "Nine Lives"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0410z25",
                "entity_name": "Take this life"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0416__g",
                "entity_name": "Violet Hill"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.043l3_j",
                "entity_name": "I'm In the Band"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04_p_d",
                "entity_name": "Welcome to the Jungle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jpn45",
                "entity_name": "Cyanide"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04n4_ft",
                "entity_name": "Lay Down"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04p_zt2",
                "entity_name": "The Unforgiven III"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yb80m",
                "entity_name": "All Nightmare Long"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05h36rb",
                "entity_name": "Hier kommt Alex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05mtfsj",
                "entity_name": "Revolution Deathsquad"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n8__8",
                "entity_name": "The End of the Line"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n8__t",
                "entity_name": "Broken, Beat & Scarred"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n8_sw",
                "entity_name": "That Was Just Your Life"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9042",
                "entity_name": "Suicide & Redemption"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9c75",
                "entity_name": "Guitar Battle vs. Slash"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9cbf",
                "entity_name": "Guitar Battle vs. Tom Morello"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9l1l",
                "entity_name": "Avalancha"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9q8f",
                "entity_name": "Down 'N Dirty"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9sm5",
                "entity_name": "Generation Rock"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9zj_",
                "entity_name": "Monsters"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbltm",
                "entity_name": "Impulse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nblw6",
                "entity_name": "In Love"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbm63",
                "entity_name": "Metal Heavy Lady"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbm9y",
                "entity_name": "Minus Celsius"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbvkk",
                "entity_name": "Nothing for Me Here"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbvsw",
                "entity_name": "The Way It Ends"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncsbs",
                "entity_name": "Ernten Was Wir S\u00e4en"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncsdg",
                "entity_name": "So Payaso"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncsn7",
                "entity_name": "Sleeping Giant"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncst7",
                "entity_name": "The Arsonist"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncswb",
                "entity_name": "Famous For Nothing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nct6_",
                "entity_name": "Exo-Politics"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncthq",
                "entity_name": "Stay Clean"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nctmk",
                "entity_name": "Problems (Live at Brixton)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nctqj",
                "entity_name": "I Am Murloc"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncv9s",
                "entity_name": "Heroes of Our Time"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05p79hg",
                "entity_name": "The End Begins (to Rock)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.069lq1",
                "entity_name": "Reptilia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06slcm",
                "entity_name": "Suck My Kiss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06vw9m",
                "entity_name": "Slither"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06y3rd",
                "entity_name": "Motorhead"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07135q",
                "entity_name": "This Is a Call"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.071x8b",
                "entity_name": "All My Life"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07csl2",
                "entity_name": "Bulls on Parade"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07k62t",
                "entity_name": "For the Love of God"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07n6949",
                "entity_name": "Flannigan's Ball"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07npl0j",
                "entity_name": "Putting Holes In Happiness"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07t5_1_",
                "entity_name": "Original Composition"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.082dr7",
                "entity_name": "Sabotage"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.098bqv",
                "entity_name": "Any Way You Want It"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.098wyj",
                "entity_name": "Scary Monsters"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_hy5cl",
                "entity_name": "No More Sorrow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c7xw8",
                "entity_name": "Black Sunshine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c9my1",
                "entity_name": "Miss Murder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cc4r4",
                "entity_name": "School's Out"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cjv1p",
                "entity_name": "Before I Forget"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cszsh",
                "entity_name": "The Number of the Beast"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d1ss9",
                "entity_name": "Lay It Down"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ds2d7",
                "entity_name": "Stockholm Syndrome"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dyqww",
                "entity_name": "Stricken"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fd3k5",
                "entity_name": "When You Were Young"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fm7g9",
                "entity_name": "Helicopter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g_fc4",
                "entity_name": "Lanigan's Ball"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gm5h7",
                "entity_name": "Shoot the Runner"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h03jz",
                "entity_name": "Hole in the Earth"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h3dtn",
                "entity_name": "Photograph"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l0vsj",
                "entity_name": "Cult of Personality"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l0x_6",
                "entity_name": "Closer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m4f02",
                "entity_name": "Cities on Flame With Rock 'n' Roll"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.087bht",
                "entity_name": "Even Flow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kjvl",
                "entity_name": "The Devil Went Down to Georgia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045bch",
                "entity_name": "We Three Kings"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08nzqt",
                "entity_name": "I Predict a Riot"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nctxh",
                "entity_name": "Soothsayer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06hb7x",
                "entity_name": "Call Me"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ldf4n",
                "entity_name": "Kool Thing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gppf4",
                "entity_name": "My Name Is Jonas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c2rk6",
                "entity_name": "Barracuda"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05f8y_",
                "entity_name": "Cherub Rock"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.078mcc",
                "entity_name": "One Step Closer"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.musical_game_song",
                    "class": "cvg.musical_game_song",
                    "friendly_name": "Musical Game Song",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "cvg.musical_game_song_relationship",
                    "class": "cvg.musical_game_song_relationship",
                    "friendly_name": "Musical game/song relationship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.025vn5m",
                    "class": "cvg.musical_game",
                    "friendly_name": "guitar hero iii",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "cvg.musical_game_song_relationship.song",
                    "friendly_name": "Song"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "cvg.musical_game_song_relationship.game",
                    "friendly_name": "Game"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.musical_game_song . \n?x1 :type.object.type :cvg.musical_game_song_relationship . \nVALUES ?x2 { :m.025vn5m } \n?x1 :cvg.musical_game_song_relationship.song ?x0 . \n?x1 :cvg.musical_game_song_relationship.game ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "cvg"
        ],
        "s_expression": "(AND cvg.musical_game_song (JOIN (R cvg.musical_game_song_relationship.song) (JOIN cvg.musical_game_song_relationship.game m.025vn5m)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.050r2c",
                "entity_name": "Yellow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dgk51",
                "entity_name": "Knights of Cydonia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01twcs",
                "entity_name": "Anarchy in the U.K."
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cr_wt",
                "entity_name": "La Grange"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01cw9x7",
                "entity_name": "One"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03xp99",
                "entity_name": "One"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02871qq",
                "entity_name": "Same Old Song and Dance"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0q43m_",
                "entity_name": "Juke Box Hero"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08cklv",
                "entity_name": "Rock and Roll All Nite"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nc41y",
                "entity_name": "Tina"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nc49r",
                "entity_name": "Halo Theme MJOLNIR Mix"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rpmd",
                "entity_name": "Paranoid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0flpph",
                "entity_name": "Rock You Like a Hurricane"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0263041",
                "entity_name": "Excuse Me Mr."
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.070z4x",
                "entity_name": "Paint It Black"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m1d6v",
                "entity_name": "Ever Fallen In Love (With Someone You Shouldn\u2019t\u2019ve)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lf9nr",
                "entity_name": "Pride and Joy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059w87",
                "entity_name": "Sunshine of Your Love"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fjk88",
                "entity_name": "Black Magic Woman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0czkkl",
                "entity_name": "Story of My Life"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n02s1",
                "entity_name": "God Put a Smile Upon Your Face"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04lhdz5",
                "entity_name": "The Judas Kiss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07sftt",
                "entity_name": "Raining Blood"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0crrmn",
                "entity_name": "Rock of Ages"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d0xd3",
                "entity_name": "Supermassive Black Hole"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qccf",
                "entity_name": "Holiday in Cambodia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0547nq",
                "entity_name": "She Bangs the Drums"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0816cq",
                "entity_name": "Dream On"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04gv9b5",
                "entity_name": "The Day That Never Comes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nctfn",
                "entity_name": "(We Are) The Road Crew"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09dyxz",
                "entity_name": "Slow Ride"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy913",
                "entity_name": "Hit Me with Your Best Shot"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nc432",
                "entity_name": "Messages"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9p7g",
                "entity_name": "Don't Hold Back"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05p4g__",
                "entity_name": "Surfing with the Alien"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.096ydc",
                "entity_name": "Johnny I Hardly Knew Ye"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.121qgdnt",
                "entity_name": "Radio Song"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01f34k7",
                "entity_name": "My Curse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.021f1m",
                "entity_name": "Don't Speak"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025sd6q",
                "entity_name": "Sunday Morning"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026l86h",
                "entity_name": "The Seeker"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026m2nn",
                "entity_name": "Top Gun Anthem"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026nqlz",
                "entity_name": "Prayer of the Refugee"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026pvry",
                "entity_name": "Talk Dirty to Me"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026sf4s",
                "entity_name": "Through the Fire and Flames"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02702w6",
                "entity_name": "Operation Ground and Pound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0270knw",
                "entity_name": "F.C.P.R.E.M.I.X."
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027646y",
                "entity_name": "Ruby"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02774bg",
                "entity_name": "Cliffs of Dover"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027dm29",
                "entity_name": "Mississippi Queen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0288vsn",
                "entity_name": "Kool Thing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p90s8",
                "entity_name": "Juke Box Hero"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pgmbp",
                "entity_name": "Rock This Town"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pqbw1",
                "entity_name": "Can't Be Saved"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02q2ssd",
                "entity_name": "My Curse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qhv49",
                "entity_name": "Antisocial"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r14hc",
                "entity_name": "3's & 7's"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r4z9_",
                "entity_name": "She Builds Quick Machines"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02w1spk",
                "entity_name": "The Pretender"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x31zc",
                "entity_name": "Pretty Handsome Awkward"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x55kk",
                "entity_name": "In the Belly of a Shark"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z56_k",
                "entity_name": "Almost Easy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03c_729",
                "entity_name": "Cities on Flame with Rock and Roll"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03d8xhc",
                "entity_name": "Carcinogen Crush"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gpc5",
                "entity_name": "Taxman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gr9x7",
                "entity_name": "Go That Far"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03h5xpn",
                "entity_name": "Mauvais Gar\u00e7on"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03nlw9g",
                "entity_name": "Peace of Mind"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03qkg55",
                "entity_name": "Nine Lives"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0410z25",
                "entity_name": "Take this life"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0416__g",
                "entity_name": "Violet Hill"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.043l3_j",
                "entity_name": "I'm In the Band"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04_p_d",
                "entity_name": "Welcome to the Jungle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jpn45",
                "entity_name": "Cyanide"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04n4_ft",
                "entity_name": "Lay Down"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04p_zt2",
                "entity_name": "The Unforgiven III"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yb80m",
                "entity_name": "All Nightmare Long"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05h36rb",
                "entity_name": "Hier kommt Alex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05mtfsj",
                "entity_name": "Revolution Deathsquad"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n8__8",
                "entity_name": "The End of the Line"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n8__t",
                "entity_name": "Broken, Beat & Scarred"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n8_sw",
                "entity_name": "That Was Just Your Life"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9042",
                "entity_name": "Suicide & Redemption"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9c75",
                "entity_name": "Guitar Battle vs. Slash"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9cbf",
                "entity_name": "Guitar Battle vs. Tom Morello"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9l1l",
                "entity_name": "Avalancha"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9q8f",
                "entity_name": "Down 'N Dirty"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9sm5",
                "entity_name": "Generation Rock"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9zj_",
                "entity_name": "Monsters"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbltm",
                "entity_name": "Impulse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nblw6",
                "entity_name": "In Love"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbm63",
                "entity_name": "Metal Heavy Lady"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbm9y",
                "entity_name": "Minus Celsius"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbvkk",
                "entity_name": "Nothing for Me Here"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbvsw",
                "entity_name": "The Way It Ends"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncsbs",
                "entity_name": "Ernten Was Wir S\u00e4en"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncsdg",
                "entity_name": "So Payaso"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncsn7",
                "entity_name": "Sleeping Giant"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncst7",
                "entity_name": "The Arsonist"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncswb",
                "entity_name": "Famous For Nothing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nct6_",
                "entity_name": "Exo-Politics"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncthq",
                "entity_name": "Stay Clean"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nctmk",
                "entity_name": "Problems (Live at Brixton)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nctqj",
                "entity_name": "I Am Murloc"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncv9s",
                "entity_name": "Heroes of Our Time"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05p79hg",
                "entity_name": "The End Begins (to Rock)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.069lq1",
                "entity_name": "Reptilia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06slcm",
                "entity_name": "Suck My Kiss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06vw9m",
                "entity_name": "Slither"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06y3rd",
                "entity_name": "Motorhead"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07135q",
                "entity_name": "This Is a Call"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.071x8b",
                "entity_name": "All My Life"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07csl2",
                "entity_name": "Bulls on Parade"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07k62t",
                "entity_name": "For the Love of God"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07n6949",
                "entity_name": "Flannigan's Ball"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07npl0j",
                "entity_name": "Putting Holes In Happiness"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07t5_1_",
                "entity_name": "Original Composition"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.082dr7",
                "entity_name": "Sabotage"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.098bqv",
                "entity_name": "Any Way You Want It"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.098wyj",
                "entity_name": "Scary Monsters"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_hy5cl",
                "entity_name": "No More Sorrow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c7xw8",
                "entity_name": "Black Sunshine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c9my1",
                "entity_name": "Miss Murder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cc4r4",
                "entity_name": "School's Out"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cjv1p",
                "entity_name": "Before I Forget"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cszsh",
                "entity_name": "The Number of the Beast"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d1ss9",
                "entity_name": "Lay It Down"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ds2d7",
                "entity_name": "Stockholm Syndrome"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dyqww",
                "entity_name": "Stricken"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fd3k5",
                "entity_name": "When You Were Young"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fm7g9",
                "entity_name": "Helicopter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g_fc4",
                "entity_name": "Lanigan's Ball"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gm5h7",
                "entity_name": "Shoot the Runner"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h03jz",
                "entity_name": "Hole in the Earth"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h3dtn",
                "entity_name": "Photograph"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l0vsj",
                "entity_name": "Cult of Personality"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l0x_6",
                "entity_name": "Closer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m4f02",
                "entity_name": "Cities on Flame With Rock 'n' Roll"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.087bht",
                "entity_name": "Even Flow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kjvl",
                "entity_name": "The Devil Went Down to Georgia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045bch",
                "entity_name": "We Three Kings"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08nzqt",
                "entity_name": "I Predict a Riot"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nctxh",
                "entity_name": "Soothsayer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06hb7x",
                "entity_name": "Call Me"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ldf4n",
                "entity_name": "Kool Thing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gppf4",
                "entity_name": "My Name Is Jonas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c2rk6",
                "entity_name": "Barracuda"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05f8y_",
                "entity_name": "Cherub Rock"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.078mcc",
                "entity_name": "One Step Closer"
            }
        ]
    },
    {
        "qid": 443000601,
        "question": "how many tennis tournament championships has federer won?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "10",
                "entity_name": "10"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "tennis.tennis_tournament",
                    "class": "tennis.tennis_tournament",
                    "friendly_name": "Tennis Tournament",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "tennis.tennis_tournament_championship",
                    "class": "tennis.tennis_tournament_championship",
                    "friendly_name": "Tennis Tournament Championship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01my95",
                    "class": "tennis.tennis_tournament_champion",
                    "friendly_name": "federer",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "tennis.tennis_tournament.champions",
                    "friendly_name": "Champions"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "tennis.tennis_tournament_championship.winner",
                    "friendly_name": "Winner"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :tennis.tennis_tournament . \n?x1 :type.object.type :tennis.tennis_tournament_championship . \nVALUES ?x2 { :m.01my95 } \n?x0 :tennis.tennis_tournament.champions ?x1 . \n?x1 :tennis.tennis_tournament_championship.winner ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "tennis"
        ],
        "s_expression": "(COUNT (AND tennis.tennis_tournament (JOIN tennis.tennis_tournament.champions (JOIN tennis.tennis_tournament_championship.winner m.01my95))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "13"
            }
        ]
    },
    {
        "qid": 311000001,
        "question": "how many softwares are developed by google inc?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "68",
                "entity_name": "68"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.software",
                    "class": "computer.software",
                    "friendly_name": "Software",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.045c7b",
                    "class": "computer.software_developer",
                    "friendly_name": "google inc",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "computer.software.developer",
                    "friendly_name": "Developer"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.software . \nVALUES ?x1 { :m.045c7b } \n?x0 :computer.software.developer ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "computer"
        ],
        "s_expression": "(COUNT (AND computer.software (JOIN computer.software.developer m.045c7b)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "87"
            }
        ]
    },
    {
        "qid": 268000000,
        "question": "what ciphers are created by francis bacon?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.056d01",
                "entity_name": "Bacon's cipher"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.cryptography.cipher",
                    "class": "base.cryptography.cipher",
                    "friendly_name": "Cipher",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.030dr",
                    "class": "base.cryptography.cryptographer",
                    "friendly_name": "Francis Bacon",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.cryptography.cryptographer.ciphers_created",
                    "friendly_name": "Ciphers created"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.cryptography.cipher . \nVALUES ?x1 { :m.030dr } \n?x1 :base.cryptography.cryptographer.ciphers_created ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.cryptography.cipher (JOIN (R base.cryptography.cryptographer.ciphers_created) m.030dr))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.056d01",
                "entity_name": "Bacon's cipher"
            }
        ]
    },
    {
        "qid": 470000400,
        "question": "what kind of bridge is on the hudson river?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03lzkv",
                "entity_name": "Cantilever bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04j90w",
                "entity_name": "Vertical-lift bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0csy8",
                "entity_name": "Suspension bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ms9p",
                "entity_name": "Truss bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d0h0h",
                "entity_name": "Girder bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02gr4y",
                "entity_name": "Swing bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d0pv0",
                "entity_name": "Continuous truss bridge"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "transportation.bridge_type",
                    "class": "transportation.bridge_type",
                    "friendly_name": "Bridge Type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "transportation.bridge",
                    "class": "transportation.bridge",
                    "friendly_name": "Bridge",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0cvyp",
                    "class": "geography.river",
                    "friendly_name": "Hudson River",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "transportation.bridge_type.bridges_of_this_type",
                    "friendly_name": "Bridges of this type"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "geography.body_of_water.bridges",
                    "friendly_name": "Bridges"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :transportation.bridge_type . \n?x1 :type.object.type :transportation.bridge . \nVALUES ?x2 { :m.0cvyp } \n?x0 :transportation.bridge_type.bridges_of_this_type ?x1 . \n?x2 :geography.body_of_water.bridges ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "geography"
        ],
        "s_expression": "(AND transportation.bridge_type (JOIN transportation.bridge_type.bridges_of_this_type (JOIN (R geography.body_of_water.bridges) m.0cvyp)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03lzkv",
                "entity_name": "Cantilever bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04j90w",
                "entity_name": "Vertical-lift bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0csy8",
                "entity_name": "Suspension bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ms9p",
                "entity_name": "Truss bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d0h0h",
                "entity_name": "Girder bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02gr4y",
                "entity_name": "Swing bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d0pv0",
                "entity_name": "Continuous truss bridge"
            }
        ]
    },
    {
        "qid": 405000202,
        "question": "which asteroid found by the mount palomar observatory is the darkest?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03wbdpm",
                "entity_name": "5126 Achaemenides"
            }
        ],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.asteroid",
                    "class": "astronomy.asteroid",
                    "friendly_name": "Asteroid",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.022tzk",
                    "class": "astronomy.astronomical_observatory",
                    "friendly_name": "mount palomar observatory",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.astronomical_discovery.discovery_site",
                    "friendly_name": "Discovery Site"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "astronomy.celestial_object.absolute_magnitude",
                    "friendly_name": "Absolute Magnitude"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.asteroid . \nVALUES ?x1 { :m.022tzk } \n{\nSELECT (MIN(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :astronomy.asteroid . \nVALUES ?y1 { :m.022tzk } \n?y0 :astronomy.astronomical_discovery.discovery_site ?y1 . \n?y0 :astronomy.celestial_object.absolute_magnitude ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x0 :astronomy.astronomical_discovery.discovery_site ?x1 . \n?x0 :astronomy.celestial_object.absolute_magnitude ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "(ARGMIN (AND astronomy.asteroid (JOIN astronomy.astronomical_discovery.discovery_site m.022tzk)) astronomy.celestial_object.absolute_magnitude)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03y7w1p",
                "entity_name": "5284 Orsilocus"
            }
        ]
    },
    {
        "qid": 431000300,
        "question": "the cause of canine arthritis can lead to what other diseases?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05yv9kh",
                "entity_name": "Pancreatitis in cats and dogs"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b9fw1",
                "entity_name": "Corneal ulcers in animals"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.pethealth.pet_disease_or_medical_condition",
                    "class": "base.pethealth.pet_disease_or_medical_condition",
                    "friendly_name": "Pet disease or medical condition",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.pethealth.cause",
                    "class": "base.pethealth.cause",
                    "friendly_name": "Pet Disease Cause",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.05gj3zc",
                    "class": "base.pethealth.pet_disease_or_medical_condition",
                    "friendly_name": "Canine arthritis",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.pethealth.cause.pet_diseases_or_conditions_caused",
                    "friendly_name": "Pet diseases or conditions caused"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.pethealth.pet_disease_or_medical_condition.causes",
                    "friendly_name": "Causes"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.pethealth.pet_disease_or_medical_condition . \n?x1 :type.object.type :base.pethealth.cause . \nVALUES ?x2 { :m.05gj3zc } \n?x1 :base.pethealth.cause.pet_diseases_or_conditions_caused ?x0 . \n?x2 :base.pethealth.pet_disease_or_medical_condition.causes ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.pethealth.pet_disease_or_medical_condition (JOIN (R base.pethealth.cause.pet_diseases_or_conditions_caused) (JOIN (R base.pethealth.pet_disease_or_medical_condition.causes) m.05gj3zc)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05yv9kh",
                "entity_name": "Pancreatitis in cats and dogs"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b9fw1",
                "entity_name": "Corneal ulcers in animals"
            }
        ]
    },
    {
        "qid": 491000201,
        "question": "how many other typefaces from ms are designed by the same person who designed verdana?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1",
                "entity_name": "1"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.typefaces.typeface",
                    "class": "base.typefaces.typeface",
                    "friendly_name": "Typeface",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.typefaces.typeface_creator",
                    "class": "base.typefaces.typeface_creator",
                    "friendly_name": "Typeface Creator",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0h56_",
                    "class": "base.typefaces.typeface",
                    "friendly_name": "Verdana",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.04sv4",
                    "class": "base.typefaces.typeface_foundry",
                    "friendly_name": "ms",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.typefaces.typeface.typeface_creator",
                    "friendly_name": "Creator"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.typefaces.typeface.typeface_creator",
                    "friendly_name": "Creator"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "base.typefaces.typeface.foundry",
                    "friendly_name": "Foundry"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.typefaces.typeface . \n?x1 :type.object.type :base.typefaces.typeface_creator . \nVALUES ?x2 { :m.0h56_ } \nVALUES ?x3 { :m.04sv4 } \n?x0 :base.typefaces.typeface.typeface_creator ?x1 . \n?x2 :base.typefaces.typeface.typeface_creator ?x1 . \n?x0 :base.typefaces.typeface.foundry ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(COUNT (AND base.typefaces.typeface (AND (JOIN base.typefaces.typeface.typeface_creator (JOIN (R base.typefaces.typeface.typeface_creator) m.0h56_)) (JOIN base.typefaces.typeface.foundry m.04sv4))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "qid": 499000202,
        "question": "what is the belief system belonging to the religion associated with the beit hamikdash?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05pyj",
                "entity_name": "Omniscience"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02wvcg4",
                "entity_name": "Entering Heaven alive"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02746s4",
                "entity_name": "Unitarian monotheism"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05px4",
                "entity_name": "Omnipotence"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "religion.belief",
                    "class": "religion.belief",
                    "friendly_name": "Belief",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "religion.religion",
                    "class": "religion.religion",
                    "friendly_name": "Religion",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "religion.place_of_worship_historical_use",
                    "class": "religion.place_of_worship_historical_use",
                    "friendly_name": "Place of worship historical use",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.07hwc",
                    "class": "base.jewishcommunities.synagogue",
                    "friendly_name": "beit hamikdash",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "religion.belief.belief_of",
                    "friendly_name": "Belief Of"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "religion.religion.places_of_worship_historical",
                    "friendly_name": "Places of worship (historical)"
                },
                {
                    "start": 2,
                    "end": 3,
                    "relation": "religion.place_of_worship_historical_use.place_of_worship",
                    "friendly_name": "Place of worship"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.belief . \n?x1 :type.object.type :religion.religion . \n?x2 :type.object.type :religion.place_of_worship_historical_use . \nVALUES ?x3 { :m.07hwc } \n?x0 :religion.belief.belief_of ?x1 . \n?x1 :religion.religion.places_of_worship_historical ?x2 . \n?x2 :religion.place_of_worship_historical_use.place_of_worship ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "religion"
        ],
        "s_expression": "(AND religion.belief (JOIN religion.belief.belief_of (JOIN religion.religion.places_of_worship_historical (JOIN religion.place_of_worship_historical_use.place_of_worship m.07hwc))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05pyj",
                "entity_name": "Omniscience"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02wvcg4",
                "entity_name": "Entering Heaven alive"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02746s4",
                "entity_name": "Unitarian monotheism"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017tgt",
                "entity_name": "Divine simplicity"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zpl5",
                "entity_name": "Tikkun olam"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05px4",
                "entity_name": "Omnipotence"
            }
        ]
    },
    {
        "qid": 394000001,
        "question": "what aircrafts does gm make?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02jphj",
                "entity_name": "Grumman TBF Avenger"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06sw0s",
                "entity_name": "Fisher P-75 Eagle"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "aviation.aircraft_model",
                    "class": "aviation.aircraft_model",
                    "friendly_name": "Aircraft model",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.035nm",
                    "class": "aviation.aircraft_manufacturer",
                    "friendly_name": "gm",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "aviation.aircraft_manufacturer.aircraft_models_made",
                    "friendly_name": "Aircraft Models Manufactured"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :aviation.aircraft_model . \nVALUES ?x1 { :m.035nm } \n?x1 :aviation.aircraft_manufacturer.aircraft_models_made ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "aviation"
        ],
        "s_expression": "(AND aviation.aircraft_model (JOIN (R aviation.aircraft_manufacturer.aircraft_models_made) m.035nm))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02jphj",
                "entity_name": "Grumman TBF Avenger"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06sw0s",
                "entity_name": "Fisher P-75 Eagle"
            }
        ]
    },
    {
        "qid": 417000300,
        "question": "the mother of secretariat was bred by who?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g_w5j",
                "entity_name": "Christopher Chenery"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.thoroughbredracing.thoroughbred_racehorse_breeder",
                    "class": "base.thoroughbredracing.thoroughbred_racehorse_breeder",
                    "friendly_name": "Thoroughbred racehorse breeder",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0gv_l",
                    "class": "base.thoroughbredracing.thoroughbred_racehorse",
                    "friendly_name": "Secretariat",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "base.thoroughbredracing.thoroughbred_racehorse",
                    "class": "base.thoroughbredracing.thoroughbred_racehorse",
                    "friendly_name": "Thoroughbred racehorse",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 0,
                    "relation": "base.thoroughbredracing.thoroughbred_racehorse.breeder",
                    "friendly_name": "Breeder"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.thoroughbredracing.thoroughbred_racehorse.foal_if_this_horse_is_dam",
                    "friendly_name": "Foal (if this horse is Dam)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.thoroughbredracing.thoroughbred_racehorse_breeder . \nVALUES ?x1 { :m.0gv_l } \n?x2 :type.object.type :base.thoroughbredracing.thoroughbred_racehorse . \n?x2 :base.thoroughbredracing.thoroughbred_racehorse.breeder ?x0 . \n?x2 :base.thoroughbredracing.thoroughbred_racehorse.foal_if_this_horse_is_dam ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.thoroughbredracing.thoroughbred_racehorse_breeder (JOIN (R base.thoroughbredracing.thoroughbred_racehorse.breeder) (JOIN base.thoroughbredracing.thoroughbred_racehorse.foal_if_this_horse_is_dam m.0gv_l)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g_w5j",
                "entity_name": "Christopher Chenery"
            }
        ]
    },
    {
        "qid": 440000200,
        "question": "list the first 17 songs on word of god.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s01v",
                "entity_name": "I Delight in the Lord"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s05m",
                "entity_name": "Let Us Then Approach the Throne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s08n",
                "entity_name": "Now to Him"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s022",
                "entity_name": "Better Than Life"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s019",
                "entity_name": "How Lovely Is Your Dwelling Place"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s03d",
                "entity_name": "You Are There"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s08f",
                "entity_name": "And My God Will Meet All Your Needs"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s03x",
                "entity_name": "Hard Pressed"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s07z",
                "entity_name": "O Wretched Man"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s01l",
                "entity_name": "Angels Long to Look Into These Things"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s053",
                "entity_name": "What Do You Think"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s093",
                "entity_name": "More Precious Than Gold"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s086",
                "entity_name": "Glory in His Name"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0rr2vh4",
                "entity_name": "To Him Who Sits on the Throne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s02m",
                "entity_name": "Covenant of Love"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s034",
                "entity_name": "One Thing I Ask"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s04t",
                "entity_name": "Hide Me Away, o Lord"
            }
        ],
        "function": "<=",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "music.release_track",
                    "class": "music.release_track",
                    "friendly_name": "Release track",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0354tn4",
                    "class": "music.release",
                    "friendly_name": "Word of God",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "17^^http://www.w3.org/2001/XMLSchema#integer",
                    "class": "type.int",
                    "friendly_name": "17",
                    "question_node": 0,
                    "function": "<="
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.release.track_list",
                    "friendly_name": "Track list"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "music.release_track.track_number",
                    "friendly_name": "Track #"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :music.release_track . \nVALUES ?x1 { :m.0354tn4 } \nFILTER (?x2 <= \"17\"^^<http://www.w3.org/2001/XMLSchema#integer>)\n?x1 :music.release.track_list ?x0 . \n?x0 :music.release_track.track_number ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "music"
        ],
        "s_expression": "(AND music.release_track (AND (JOIN (R music.release.track_list) m.0354tn4) (le music.release_track.track_number 17^^http://www.w3.org/2001/XMLSchema#integer)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s01v",
                "entity_name": "I Delight in the Lord"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s05m",
                "entity_name": "Let Us Then Approach the Throne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s08n",
                "entity_name": "Now to Him"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s022",
                "entity_name": "Better Than Life"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s019",
                "entity_name": "How Lovely Is Your Dwelling Place"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s03d",
                "entity_name": "You Are There"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s08f",
                "entity_name": "And My God Will Meet All Your Needs"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s03x",
                "entity_name": "Hard Pressed"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s07z",
                "entity_name": "O Wretched Man"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s01l",
                "entity_name": "Angels Long to Look Into These Things"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s053",
                "entity_name": "What Do You Think"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s093",
                "entity_name": "More Precious Than Gold"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s086",
                "entity_name": "Glory in His Name"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0rr2vh4",
                "entity_name": "To Him Who Sits on the Throne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s02m",
                "entity_name": "Covenant of Love"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s034",
                "entity_name": "One Thing I Ask"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l7s04t",
                "entity_name": "Hide Me Away, o Lord"
            }
        ]
    },
    {
        "qid": 275000102,
        "question": "what are the likely factors of add/adhd?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05zppz",
                "entity_name": "Male"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qwpq0",
                "entity_name": "Learning disability"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.086q2q",
                "entity_name": "Oppositional defiant disorder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06wfn5t",
                "entity_name": "Family History of Attention Deficit - Hyperactivity Disorder"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.risk_factor",
                    "class": "medicine.risk_factor",
                    "friendly_name": "Risk Factor",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0h99n",
                    "class": "base.aubreymaturin.malady",
                    "friendly_name": "add/adhd",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.disease.risk_factors",
                    "friendly_name": "Risk Factors"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.risk_factor . \nVALUES ?x1 { :m.0h99n } \n?x1 :medicine.disease.risk_factors ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(AND medicine.risk_factor (JOIN (R medicine.disease.risk_factors) m.0h99n))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05zppz",
                "entity_name": "Male"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qwpq0",
                "entity_name": "Learning disability"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027hpx",
                "entity_name": "Preterm birth"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.086q2q",
                "entity_name": "Oppositional defiant disorder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06wfn5t",
                "entity_name": "Family History of Attention Deficit - Hyperactivity Disorder"
            }
        ]
    },
    {
        "qid": 263000200,
        "question": "what ships has bruce farr designed?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07lq2l",
                "entity_name": "KZ1"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "boats.ship",
                    "class": "boats.ship",
                    "friendly_name": "Ship",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01m1w6",
                    "class": "boats.ship_designer",
                    "friendly_name": "Bruce Farr",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "boats.ship_designer.boats_designed",
                    "friendly_name": "Boats Designed"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :boats.ship . \nVALUES ?x1 { :m.01m1w6 } \n?x1 :boats.ship_designer.boats_designed ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "boats"
        ],
        "s_expression": "(AND boats.ship (JOIN (R boats.ship_designer.boats_designed) m.01m1w6))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07lq2l",
                "entity_name": "KZ1"
            }
        ]
    },
    {
        "qid": 290000202,
        "question": "who is the author of the lupin the third anime?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ypgf",
                "entity_name": "Monkey Punch"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.animemanga.anime_manga_creator",
                    "class": "base.animemanga.anime_manga_creator",
                    "friendly_name": "Anime/Manga Creator",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01pxpp",
                    "class": "base.animemanga.anime_manga_franchise",
                    "friendly_name": "lupin the third",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.animemanga.anime_manga_creator.anime_manga_created",
                    "friendly_name": "Anime/Manga Created"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.animemanga.anime_manga_creator . \nVALUES ?x1 { :m.01pxpp } \n?x0 :base.animemanga.anime_manga_creator.anime_manga_created ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.animemanga.anime_manga_creator (JOIN base.animemanga.anime_manga_creator.anime_manga_created m.01pxpp))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ypgf",
                "entity_name": "Monkey Punch"
            }
        ]
    },
    {
        "qid": 432000001,
        "question": "what tools are needed to cook chicken and rice?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xnc_",
                "entity_name": "Dutch oven"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "food.culinary_tool",
                    "class": "food.culinary_tool",
                    "friendly_name": "Culinary tool",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "food.recipe",
                    "class": "food.recipe",
                    "friendly_name": "Recipe",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.08wcf_",
                    "class": "base.ovguide.spanish_cuisine_dishes",
                    "friendly_name": "chicken and rice",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "food.recipe.equipment",
                    "friendly_name": "Equipment"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "food.dish.recipes",
                    "friendly_name": "Recipes"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :food.culinary_tool . \n?x1 :type.object.type :food.recipe . \nVALUES ?x2 { :m.08wcf_ } \n?x1 :food.recipe.equipment ?x0 . \n?x2 :food.dish.recipes ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "food"
        ],
        "s_expression": "(AND food.culinary_tool (JOIN (R food.recipe.equipment) (JOIN (R food.dish.recipes) m.08wcf_)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xnc_",
                "entity_name": "Dutch oven"
            }
        ]
    },
    {
        "qid": 304000400,
        "question": "the brazilian communist party has what kind of ideology?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.058kr",
                "entity_name": "Marxism\u2013Leninism"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.021v6h",
                "entity_name": "Anti-revisionism"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "government.political_ideology",
                    "class": "government.political_ideology",
                    "friendly_name": "Political ideology",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.024wsx",
                    "class": "base.braziliangovt.brazilian_political_party",
                    "friendly_name": "Brazilian Communist Party",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "government.political_ideology.political_parties",
                    "friendly_name": "Political parties"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :government.political_ideology . \nVALUES ?x1 { :m.024wsx } \n?x0 :government.political_ideology.political_parties ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "government"
        ],
        "s_expression": "(AND government.political_ideology (JOIN government.political_ideology.political_parties m.024wsx))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.058kr",
                "entity_name": "Marxism\u2013Leninism"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01m59",
                "entity_name": "Communism"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.021v6h",
                "entity_name": "Anti-revisionism"
            }
        ]
    },
    {
        "qid": 423000100,
        "question": "who were the candidates at the 1976 democratic national convention?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01z9yq",
                "entity_name": "Barbara Jordan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bl83",
                "entity_name": "Walter Mondale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p5rv",
                "entity_name": "Ron Dellums"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01ncpq",
                "entity_name": "Carl Albert"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04j3fh7",
                "entity_name": "Others"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04j3fvf",
                "entity_name": "Fritz Efaw"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.politicalconventions.primary_candidate",
                    "class": "base.politicalconventions.primary_candidate",
                    "friendly_name": "Primary Candidate",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.politicalconventions.vp_delegate_vote_tally",
                    "class": "base.politicalconventions.vp_delegate_vote_tally",
                    "friendly_name": "VP Delegate Vote Tally",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.08byf7",
                    "class": "base.politicalconventions.political_convention",
                    "friendly_name": "1976 Democratic National Convention",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.politicalconventions.vp_delegate_vote_tally.candidate",
                    "friendly_name": "Candidate"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.politicalconventions.political_convention.final_vp_vote_tally",
                    "friendly_name": "Final VP Vote Tally"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.politicalconventions.primary_candidate . \n?x1 :type.object.type :base.politicalconventions.vp_delegate_vote_tally . \nVALUES ?x2 { :m.08byf7 } \n?x1 :base.politicalconventions.vp_delegate_vote_tally.candidate ?x0 . \n?x2 :base.politicalconventions.political_convention.final_vp_vote_tally ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.politicalconventions.primary_candidate (JOIN (R base.politicalconventions.vp_delegate_vote_tally.candidate) (JOIN (R base.politicalconventions.political_convention.final_vp_vote_tally) m.08byf7)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01z9yq",
                "entity_name": "Barbara Jordan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bl83",
                "entity_name": "Walter Mondale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p5rv",
                "entity_name": "Ron Dellums"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01ncpq",
                "entity_name": "Carl Albert"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04j3fh7",
                "entity_name": "Others"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04j3fvf",
                "entity_name": "Fritz Efaw"
            }
        ]
    },
    {
        "qid": 474000101,
        "question": "hiv can be transmitted the same way as which other infectious diseases?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0mh4s",
                "entity_name": "Gonorrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064fq",
                "entity_name": "Pelvic inflammatory disease"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01glh",
                "entity_name": "Bacterial vaginosis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0259ln",
                "entity_name": "Tinea cruris"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07y4wwh",
                "entity_name": "HTLV-I Infections"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dc5_q2",
                "entity_name": "Phthirus pubis infestation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqpg",
                "entity_name": "Kaposi's sarcoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.019syx",
                "entity_name": "Human papillomavirus infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gxbfm",
                "entity_name": "Herpes simplex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254yv",
                "entity_name": "Molluscum contagiosum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01qmrl",
                "entity_name": "Non-gonococcal urethritis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m72x",
                "entity_name": "Trichomoniasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yjzm",
                "entity_name": "Hepatitis A"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0167bx",
                "entity_name": "Hepatitis B"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01lvyl",
                "entity_name": "Lymphogranuloma venereum"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.disaster2.infectious_disease",
                    "class": "base.disaster2.infectious_disease",
                    "friendly_name": "Infectious disease",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "medicine.risk_factor",
                    "class": "medicine.risk_factor",
                    "friendly_name": "Risk Factor",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d19y2",
                    "class": "medicine.disease",
                    "friendly_name": "hiv",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "medicine.disease.risk_factors",
                    "friendly_name": "Risk Factors"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "medicine.risk_factor.diseases",
                    "friendly_name": "Diseases with this Risk Factor"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.disaster2.infectious_disease . \n?x1 :type.object.type :medicine.risk_factor . \nVALUES ?x2 { :m.0d19y2 } \n?x0 :medicine.disease.risk_factors ?x1 . \n?x1 :medicine.risk_factor.diseases ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(AND base.disaster2.infectious_disease (JOIN medicine.disease.risk_factors (JOIN medicine.risk_factor.diseases m.0d19y2)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0mh4s",
                "entity_name": "Gonorrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064fq",
                "entity_name": "Pelvic inflammatory disease"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01glh",
                "entity_name": "Bacterial vaginosis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0259ln",
                "entity_name": "Tinea cruris"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07y4wwh",
                "entity_name": "HTLV-I Infections"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dc5_q2",
                "entity_name": "Phthirus pubis infestation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqpg",
                "entity_name": "Kaposi's sarcoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.019syx",
                "entity_name": "Human papillomavirus infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gxbfm",
                "entity_name": "Herpes simplex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gv",
                "entity_name": "Candidiasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254yv",
                "entity_name": "Molluscum contagiosum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01qmrl",
                "entity_name": "Non-gonococcal urethritis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m72x",
                "entity_name": "Trichomoniasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yjzm",
                "entity_name": "Hepatitis A"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0167bx",
                "entity_name": "Hepatitis B"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01lvyl",
                "entity_name": "Lymphogranuloma venereum"
            }
        ]
    },
    {
        "qid": 405000400,
        "question": "the darkest asteroid discovered by palomar observatory is known by what name?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03wbdpm",
                "entity_name": "5126 Achaemenides"
            }
        ],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.asteroid",
                    "class": "astronomy.asteroid",
                    "friendly_name": "Asteroid",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.022tzk",
                    "class": "astronomy.astronomical_observatory",
                    "friendly_name": "Palomar Observatory",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.astronomical_discovery.discovery_site",
                    "friendly_name": "Discovery Site"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "astronomy.celestial_object.absolute_magnitude",
                    "friendly_name": "Absolute Magnitude"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.asteroid . \nVALUES ?x1 { :m.022tzk } \n{\nSELECT (MIN(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :astronomy.asteroid . \nVALUES ?y1 { :m.022tzk } \n?y0 :astronomy.astronomical_discovery.discovery_site ?y1 . \n?y0 :astronomy.celestial_object.absolute_magnitude ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x0 :astronomy.astronomical_discovery.discovery_site ?x1 . \n?x0 :astronomy.celestial_object.absolute_magnitude ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "(ARGMIN (AND astronomy.asteroid (JOIN astronomy.astronomical_discovery.discovery_site m.022tzk)) astronomy.celestial_object.absolute_magnitude)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03y7w1p",
                "entity_name": "5284 Orsilocus"
            }
        ]
    },
    {
        "qid": 289000402,
        "question": "which nascar racing organization is owned by dale earnhardt jr?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0clz6l",
                "entity_name": "JR Motorsports"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.nascar.nascar_racing_organization",
                    "class": "base.nascar.nascar_racing_organization",
                    "friendly_name": "NASCAR Racing Organization",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.014x8j",
                    "class": "base.nascar.nascar_racing_organization_owner",
                    "friendly_name": "dale earnhardt jr",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.nascar.nascar_racing_organization_owner.racing_organization_owned",
                    "friendly_name": "Racing organization owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.nascar.nascar_racing_organization . \nVALUES ?x1 { :m.014x8j } \n?x1 :base.nascar.nascar_racing_organization_owner.racing_organization_owned ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.nascar.nascar_racing_organization (JOIN (R base.nascar.nascar_racing_organization_owner.racing_organization_owned) m.014x8j))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0clz6l",
                "entity_name": "JR Motorsports"
            }
        ]
    },
    {
        "qid": 282000100,
        "question": "how does the drug tramadol take effect?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hqywfx",
                "entity_name": "Full Opioid Agonist"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.drug_mechanism_of_action",
                    "class": "medicine.drug_mechanism_of_action",
                    "friendly_name": "Drug mechanism of action",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01l6z8",
                    "class": "base.veterinarymedicine.veterinary_drug",
                    "friendly_name": "Tramadol",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.drug.mechanism_of_action",
                    "friendly_name": "Mechanism of action"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.drug_mechanism_of_action . \nVALUES ?x1 { :m.01l6z8 } \n?x1 :medicine.drug.mechanism_of_action ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(AND medicine.drug_mechanism_of_action (JOIN (R medicine.drug.mechanism_of_action) m.01l6z8))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hqywfx",
                "entity_name": "Full Opioid Agonist"
            }
        ]
    },
    {
        "qid": 350000101,
        "question": "which genre of magazine is the q?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rm6pq",
                "entity_name": "Music magazine"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "book.magazine_genre",
                    "class": "book.magazine_genre",
                    "friendly_name": "Magazine genre",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02k1sj",
                    "class": "book.magazine",
                    "friendly_name": "q",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "book.magazine_genre.magazines_in_this_genre",
                    "friendly_name": "Magazines in this genre"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :book.magazine_genre . \nVALUES ?x1 { :m.02k1sj } \n?x0 :book.magazine_genre.magazines_in_this_genre ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "book"
        ],
        "s_expression": "(AND book.magazine_genre (JOIN book.magazine_genre.magazines_in_this_genre m.02k1sj))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rm6pq",
                "entity_name": "Music magazine"
            }
        ]
    },
    {
        "qid": 474000302,
        "question": "which infectious diseases have the same cause as hiv infection?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0mh4s",
                "entity_name": "Gonorrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064fq",
                "entity_name": "Pelvic inflammatory disease"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01glh",
                "entity_name": "Bacterial vaginosis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0259ln",
                "entity_name": "Tinea cruris"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07y4wwh",
                "entity_name": "HTLV-I Infections"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dc5_q2",
                "entity_name": "Phthirus pubis infestation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqpg",
                "entity_name": "Kaposi's sarcoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.019syx",
                "entity_name": "Human papillomavirus infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gxbfm",
                "entity_name": "Herpes simplex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254yv",
                "entity_name": "Molluscum contagiosum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01qmrl",
                "entity_name": "Non-gonococcal urethritis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m72x",
                "entity_name": "Trichomoniasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yjzm",
                "entity_name": "Hepatitis A"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0167bx",
                "entity_name": "Hepatitis B"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01lvyl",
                "entity_name": "Lymphogranuloma venereum"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.disaster2.infectious_disease",
                    "class": "base.disaster2.infectious_disease",
                    "friendly_name": "Infectious disease",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "medicine.risk_factor",
                    "class": "medicine.risk_factor",
                    "friendly_name": "Risk Factor",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d19y2",
                    "class": "medicine.disease",
                    "friendly_name": "hiv infection",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "medicine.disease.risk_factors",
                    "friendly_name": "Risk Factors"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "medicine.risk_factor.diseases",
                    "friendly_name": "Diseases with this Risk Factor"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.disaster2.infectious_disease . \n?x1 :type.object.type :medicine.risk_factor . \nVALUES ?x2 { :m.0d19y2 } \n?x0 :medicine.disease.risk_factors ?x1 . \n?x1 :medicine.risk_factor.diseases ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(AND base.disaster2.infectious_disease (JOIN medicine.disease.risk_factors (JOIN medicine.risk_factor.diseases m.0d19y2)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0mh4s",
                "entity_name": "Gonorrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064fq",
                "entity_name": "Pelvic inflammatory disease"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01glh",
                "entity_name": "Bacterial vaginosis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0259ln",
                "entity_name": "Tinea cruris"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07y4wwh",
                "entity_name": "HTLV-I Infections"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dc5_q2",
                "entity_name": "Phthirus pubis infestation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqpg",
                "entity_name": "Kaposi's sarcoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.019syx",
                "entity_name": "Human papillomavirus infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gxbfm",
                "entity_name": "Herpes simplex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gv",
                "entity_name": "Candidiasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254yv",
                "entity_name": "Molluscum contagiosum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01qmrl",
                "entity_name": "Non-gonococcal urethritis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m72x",
                "entity_name": "Trichomoniasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yjzm",
                "entity_name": "Hepatitis A"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0167bx",
                "entity_name": "Hepatitis B"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01lvyl",
                "entity_name": "Lymphogranuloma venereum"
            }
        ]
    },
    {
        "qid": 289000200,
        "question": "what team does dale earnhardt, jr. control?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0clz6l",
                "entity_name": "JR Motorsports"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.nascar.nascar_racing_organization",
                    "class": "base.nascar.nascar_racing_organization",
                    "friendly_name": "NASCAR Racing Organization",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.014x8j",
                    "class": "base.nascar.nascar_racing_organization_owner",
                    "friendly_name": "Dale Earnhardt, Jr.",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.nascar.nascar_racing_organization_owner.racing_organization_owned",
                    "friendly_name": "Racing organization owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.nascar.nascar_racing_organization . \nVALUES ?x1 { :m.014x8j } \n?x1 :base.nascar.nascar_racing_organization_owner.racing_organization_owned ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.nascar.nascar_racing_organization (JOIN (R base.nascar.nascar_racing_organization_owner.racing_organization_owned) m.014x8j))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0clz6l",
                "entity_name": "JR Motorsports"
            }
        ]
    },
    {
        "qid": 265000000,
        "question": "what weight division were the fighters of the rumble in the jungle in?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02t3ww",
                "entity_name": "Heavyweight"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "sports.boxing_weight_division",
                    "class": "sports.boxing_weight_division",
                    "friendly_name": "Boxing Weight Division",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.019rd7",
                    "class": "boxing.boxing_match",
                    "friendly_name": "The Rumble in the Jungle",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "sports.boxing_weight_division.matches",
                    "friendly_name": "Matches"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.boxing_weight_division . \nVALUES ?x1 { :m.019rd7 } \n?x0 :sports.boxing_weight_division.matches ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "sports"
        ],
        "s_expression": "(AND sports.boxing_weight_division (JOIN sports.boxing_weight_division.matches m.019rd7))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02t3ww",
                "entity_name": "Heavyweight"
            }
        ]
    },
    {
        "qid": 423000000,
        "question": "where can i find a list of the 1976 democratic national convention candidates?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01z9yq",
                "entity_name": "Barbara Jordan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bl83",
                "entity_name": "Walter Mondale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p5rv",
                "entity_name": "Ron Dellums"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01ncpq",
                "entity_name": "Carl Albert"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04j3fh7",
                "entity_name": "Others"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04j3fvf",
                "entity_name": "Fritz Efaw"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.politicalconventions.primary_candidate",
                    "class": "base.politicalconventions.primary_candidate",
                    "friendly_name": "Primary Candidate",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.politicalconventions.vp_delegate_vote_tally",
                    "class": "base.politicalconventions.vp_delegate_vote_tally",
                    "friendly_name": "VP Delegate Vote Tally",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.08byf7",
                    "class": "base.politicalconventions.political_convention",
                    "friendly_name": "1976 Democratic National Convention",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.politicalconventions.vp_delegate_vote_tally.candidate",
                    "friendly_name": "Candidate"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.politicalconventions.political_convention.final_vp_vote_tally",
                    "friendly_name": "Final VP Vote Tally"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.politicalconventions.primary_candidate . \n?x1 :type.object.type :base.politicalconventions.vp_delegate_vote_tally . \nVALUES ?x2 { :m.08byf7 } \n?x1 :base.politicalconventions.vp_delegate_vote_tally.candidate ?x0 . \n?x2 :base.politicalconventions.political_convention.final_vp_vote_tally ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.politicalconventions.primary_candidate (JOIN (R base.politicalconventions.vp_delegate_vote_tally.candidate) (JOIN (R base.politicalconventions.political_convention.final_vp_vote_tally) m.08byf7)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01z9yq",
                "entity_name": "Barbara Jordan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bl83",
                "entity_name": "Walter Mondale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p5rv",
                "entity_name": "Ron Dellums"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01ncpq",
                "entity_name": "Carl Albert"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04j3fh7",
                "entity_name": "Others"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04j3fvf",
                "entity_name": "Fritz Efaw"
            }
        ]
    },
    {
        "qid": 262000100,
        "question": "which block in the periodic table is oxygen in?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0htq0",
                "entity_name": "p-block"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "chemistry.periodic_table_block",
                    "class": "chemistry.periodic_table_block",
                    "friendly_name": "Periodic table block",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.025s6bf",
                    "class": "chemistry.chemical_element",
                    "friendly_name": "Oxygen",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "chemistry.periodic_table_block.elements",
                    "friendly_name": "Elements"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :chemistry.periodic_table_block . \nVALUES ?x1 { :m.025s6bf } \n?x0 :chemistry.periodic_table_block.elements ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "chemistry"
        ],
        "s_expression": "(AND chemistry.periodic_table_block (JOIN chemistry.periodic_table_block.elements m.025s6bf))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0htq0",
                "entity_name": "p-block"
            }
        ]
    },
    {
        "qid": 306000500,
        "question": "in which type of cricket match each team can have more than 1 innings?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zjx",
                "entity_name": "First-class cricket"
            }
        ],
        "function": ">",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cricket.cricket_match_type",
                    "class": "cricket.cricket_match_type",
                    "friendly_name": "Cricket Match Type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "1^^http://www.w3.org/2001/XMLSchema#integer",
                    "class": "type.int",
                    "friendly_name": "1",
                    "question_node": 0,
                    "function": ">"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "cricket.cricket_match_type.innings_per_team",
                    "friendly_name": "Innings Per Team"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cricket.cricket_match_type . \nFILTER (?x1 > \"1\"^^<http://www.w3.org/2001/XMLSchema#integer>)\n?x0 :cricket.cricket_match_type.innings_per_team ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "cricket"
        ],
        "s_expression": "(AND cricket.cricket_match_type (gt cricket.cricket_match_type.innings_per_team 1^^http://www.w3.org/2001/XMLSchema#integer))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zjx",
                "entity_name": "First-class cricket"
            }
        ]
    },
    {
        "qid": 303000402,
        "question": "what disability did roosevelt have?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0251gx",
                "entity_name": "Paraplegia"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.qualia.type_of_disability",
                    "class": "base.qualia.type_of_disability",
                    "friendly_name": "Type of disability",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02yy8",
                    "class": "base.qualia.disabled_person",
                    "friendly_name": "roosevelt",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.qualia.disabled_person.type_of_disability",
                    "friendly_name": "Type of disability"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.qualia.type_of_disability . \nVALUES ?x1 { :m.02yy8 } \n?x1 :base.qualia.disabled_person.type_of_disability ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.qualia.type_of_disability (JOIN (R base.qualia.disabled_person.type_of_disability) m.02yy8))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0251gx",
                "entity_name": "Paraplegia"
            }
        ]
    },
    {
        "qid": 448000401,
        "question": "how many of ned stark's children were born in winterfell?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "3",
                "entity_name": "3"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "fictional_universe.fictional_character",
                    "class": "fictional_universe.fictional_character",
                    "friendly_name": "Fictional Character",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03qs0n1",
                    "class": "base.iceandfire.house_lord",
                    "friendly_name": "ned stark",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.04sstyx",
                    "class": "fictional_universe.fictional_setting",
                    "friendly_name": "Winterfell",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "fictional_universe.fictional_character.children",
                    "friendly_name": "Children"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "fictional_universe.fictional_character.place_of_birth",
                    "friendly_name": "Place of Birth"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fictional_universe.fictional_character . \nVALUES ?x1 { :m.03qs0n1 } \nVALUES ?x2 { :m.04sstyx } \n?x1 :fictional_universe.fictional_character.children ?x0 . \n?x0 :fictional_universe.fictional_character.place_of_birth ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "fictional_universe"
        ],
        "s_expression": "(COUNT (AND fictional_universe.fictional_character (AND (JOIN (R fictional_universe.fictional_character.children) m.03qs0n1) (JOIN fictional_universe.fictional_character.place_of_birth m.04sstyx))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "3"
            }
        ]
    },
    {
        "qid": 290000201,
        "question": "who is the author of the lupin the 3rd anime?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ypgf",
                "entity_name": "Monkey Punch"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.animemanga.anime_manga_creator",
                    "class": "base.animemanga.anime_manga_creator",
                    "friendly_name": "Anime/Manga Creator",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01pxpp",
                    "class": "base.animemanga.anime_manga_franchise",
                    "friendly_name": "lupin the 3rd",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.animemanga.anime_manga_creator.anime_manga_created",
                    "friendly_name": "Anime/Manga Created"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.animemanga.anime_manga_creator . \nVALUES ?x1 { :m.01pxpp } \n?x0 :base.animemanga.anime_manga_creator.anime_manga_created ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.animemanga.anime_manga_creator (JOIN base.animemanga.anime_manga_creator.anime_manga_created m.01pxpp))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ypgf",
                "entity_name": "Monkey Punch"
            }
        ]
    },
    {
        "qid": 379000100,
        "question": "which visual artists have the united states of america as their nationality?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.013_05",
                "entity_name": "Robert Smithson"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.015m45",
                "entity_name": "Diane Arbus"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0295sg",
                "entity_name": "Donald Judd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ktf7",
                "entity_name": "Richard Serra"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03dpcd",
                "entity_name": "William Eggleston"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074g02",
                "entity_name": "Cindy Sherman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08lx7n",
                "entity_name": "Sherrie Levine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07js9s",
                "entity_name": "Eva Hesse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gcjf",
                "entity_name": "Jasper Johns"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01zgr1",
                "entity_name": "Claes Oldenburg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kc6",
                "entity_name": "Andy Warhol"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03pytb",
                "entity_name": "George Bellows"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01t0_3",
                "entity_name": "Judy Chicago"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01jlc2",
                "entity_name": "Barnett Newman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04510",
                "entity_name": "Jackson Pollock"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0yd4t",
                "entity_name": "Mark Rothko"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023tsk",
                "entity_name": "Thomas Cole"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqch",
                "entity_name": "Marcel Duchamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0533_",
                "entity_name": "Mary Cassatt"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jmc03",
                "entity_name": "Sarah Choate Sears"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.smarthistory.visual_artist",
                    "class": "base.smarthistory.visual_artist",
                    "friendly_name": "Visual Artist",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.09c7w0",
                    "class": "base.unitednations.united_nations_member_state",
                    "friendly_name": "United States of America",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.person.nationality",
                    "friendly_name": "Country of nationality"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.smarthistory.visual_artist . \nVALUES ?x1 { :m.09c7w0 } \n?x0 :people.person.nationality ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "people"
        ],
        "s_expression": "(AND base.smarthistory.visual_artist (JOIN people.person.nationality m.09c7w0))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.013_05",
                "entity_name": "Robert Smithson"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.015m45",
                "entity_name": "Diane Arbus"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0295sg",
                "entity_name": "Donald Judd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ktf7",
                "entity_name": "Richard Serra"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03dpcd",
                "entity_name": "William Eggleston"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074g02",
                "entity_name": "Cindy Sherman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08lx7n",
                "entity_name": "Sherrie Levine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02c5bp",
                "entity_name": "Willem de Kooning"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07js9s",
                "entity_name": "Eva Hesse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gcjf",
                "entity_name": "Jasper Johns"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01zgr1",
                "entity_name": "Claes Oldenburg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kc6",
                "entity_name": "Andy Warhol"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03pytb",
                "entity_name": "George Bellows"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01t0_3",
                "entity_name": "Judy Chicago"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01jlc2",
                "entity_name": "Barnett Newman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04510",
                "entity_name": "Jackson Pollock"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0yd4t",
                "entity_name": "Mark Rothko"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023tsk",
                "entity_name": "Thomas Cole"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gcgd",
                "entity_name": "Roy Lichtenstein"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqch",
                "entity_name": "Marcel Duchamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0533_",
                "entity_name": "Mary Cassatt"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jmc03",
                "entity_name": "Sarah Choate Sears"
            }
        ]
    },
    {
        "qid": 310000102,
        "question": "tell me anna nichole smith's cup size.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04y_wgs",
                "entity_name": "E cup or DD cup"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.playboyplaymates.cup_sizes",
                    "class": "base.playboyplaymates.cup_sizes",
                    "friendly_name": "Cup sizes",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0hwfl",
                    "class": "base.playboyplaymates.playmate",
                    "friendly_name": "anna nichole smith",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.playboyplaymates.playmate.cup",
                    "friendly_name": "Cup"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.playboyplaymates.cup_sizes . \nVALUES ?x1 { :m.0hwfl } \n?x1 :base.playboyplaymates.playmate.cup ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.playboyplaymates.cup_sizes (JOIN (R base.playboyplaymates.playmate.cup) m.0hwfl))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04y_wgs",
                "entity_name": "E cup or DD cup"
            }
        ]
    },
    {
        "qid": 450000000,
        "question": "the rocket engine with the largest vacuum thrust was designed by whom?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p_3s6",
                "entity_name": "NPO Energomash"
            }
        ],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine_designer",
                    "class": "spaceflight.rocket_engine_designer",
                    "friendly_name": "Rocket engine designer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine",
                    "class": "spaceflight.rocket_engine",
                    "friendly_name": "Rocket engine",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "spaceflight.rocket_engine_designer.rocket_engines",
                    "friendly_name": "Rocket engines"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "spaceflight.rocket_engine.thrust_vacuum",
                    "friendly_name": "Thrust (vacuum)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.rocket_engine_designer . \n?x1 :type.object.type :spaceflight.rocket_engine . \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :spaceflight.rocket_engine_designer . \n?y1 :type.object.type :spaceflight.rocket_engine . \n?y0 :spaceflight.rocket_engine_designer.rocket_engines ?y1 . \n?y1 :spaceflight.rocket_engine.thrust_vacuum ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x0 :spaceflight.rocket_engine_designer.rocket_engines ?x1 . \n?x1 :spaceflight.rocket_engine.thrust_vacuum ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "spaceflight"
        ],
        "s_expression": "(ARGMAX spaceflight.rocket_engine_designer spaceflight.rocket_engine_designer.rocket_engines spaceflight.rocket_engine.thrust_vacuum)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03c_441",
                "entity_name": "Chemical Automatics Design Bureau"
            }
        ]
    },
    {
        "qid": 466000302,
        "question": "which company makes processors for macs?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0537b",
                "entity_name": "Motorola"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03s7h",
                "entity_name": "Intel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03sc8",
                "entity_name": "IBM"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02g98s",
                "entity_name": "Freescale Semiconductor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01dgmy",
                "entity_name": "VIA Technologies"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.processor_manufacturer",
                    "class": "computer.processor_manufacturer",
                    "friendly_name": "Processor Manufacturer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "computer.computer_processor",
                    "class": "computer.computer_processor",
                    "friendly_name": "Computer Processor",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0zd6",
                    "class": "computer.computer",
                    "friendly_name": "macs",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "computer.computer_processor.manufacturers",
                    "friendly_name": "Manufacturers"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "computer.computer.processor",
                    "friendly_name": "Processor"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.processor_manufacturer . \n?x1 :type.object.type :computer.computer_processor . \nVALUES ?x2 { :m.0zd6 } \n?x1 :computer.computer_processor.manufacturers ?x0 . \n?x2 :computer.computer.processor ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "computer"
        ],
        "s_expression": "(AND computer.processor_manufacturer (JOIN (R computer.computer_processor.manufacturers) (JOIN (R computer.computer.processor) m.0zd6)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0537b",
                "entity_name": "Motorola"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0z64",
                "entity_name": "Advanced Micro Devices"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03s7h",
                "entity_name": "Intel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03sc8",
                "entity_name": "IBM"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02g98s",
                "entity_name": "Freescale Semiconductor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01dgmy",
                "entity_name": "VIA Technologies"
            }
        ]
    },
    {
        "qid": 273000200,
        "question": "what are the states of the united states of america?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fkf",
                "entity_name": "North Carolina"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07h34",
                "entity_name": "Tennessee"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07z1m",
                "entity_name": "Virginia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gyh",
                "entity_name": "Alabama"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05k7sb",
                "entity_name": "Massachusetts"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01n4w",
                "entity_name": "Colorado"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ly1",
                "entity_name": "Louisiana"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06mz5",
                "entity_name": "South Dakota"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0vbk",
                "entity_name": "Arkansas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ych",
                "entity_name": "Missouri"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01n7q",
                "entity_name": "California"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026mj",
                "entity_name": "Delaware"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xry",
                "entity_name": "Florida"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gh4",
                "entity_name": "Hawaii"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03s0w",
                "entity_name": "Iowa"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03s5t",
                "entity_name": "Idaho"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03v0t",
                "entity_name": "Illinois"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03v1s",
                "entity_name": "Indiana"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0488g",
                "entity_name": "Kansas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0498y",
                "entity_name": "Kentucky"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rrd",
                "entity_name": "Maryland"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rrx",
                "entity_name": "Michigan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ykg",
                "entity_name": "Minnesota"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.050ks",
                "entity_name": "Maine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.050l8",
                "entity_name": "Montana"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059_c",
                "entity_name": "Nevada"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059f4",
                "entity_name": "New Hampshire"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059rby",
                "entity_name": "New York"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fhy",
                "entity_name": "Nebraska"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fjf",
                "entity_name": "New Jersey"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fjy",
                "entity_name": "New Mexico"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fky",
                "entity_name": "North Dakota"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kj_",
                "entity_name": "Oregon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kkh",
                "entity_name": "Ohio"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05mph",
                "entity_name": "Oklahoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06btq",
                "entity_name": "Rhode Island"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06yxd",
                "entity_name": "South Carolina"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07_f2",
                "entity_name": "Vermont"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07b_l",
                "entity_name": "Texas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07srw",
                "entity_name": "Utah"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.081mh",
                "entity_name": "West Virginia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0824r",
                "entity_name": "Wisconsin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0846v",
                "entity_name": "Wyoming"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d0x8",
                "entity_name": "Georgia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hjy",
                "entity_name": "Alaska"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0vmt",
                "entity_name": "Arizona"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.locations.states_and_provences",
                    "class": "base.locations.states_and_provences",
                    "friendly_name": "States and provinces",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.09c7w0",
                    "class": "base.locations.countries",
                    "friendly_name": "United States of America",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.locations.countries.states_provinces_within",
                    "friendly_name": "States/provinces within"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.locations.states_and_provences . \nVALUES ?x1 { :m.09c7w0 } \n?x1 :base.locations.countries.states_provinces_within ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.locations.states_and_provences (JOIN (R base.locations.countries.states_provinces_within) m.09c7w0))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fkf",
                "entity_name": "North Carolina"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07h34",
                "entity_name": "Tennessee"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07z1m",
                "entity_name": "Virginia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gyh",
                "entity_name": "Alabama"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05k7sb",
                "entity_name": "Massachusetts"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01n4w",
                "entity_name": "Colorado"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ly1",
                "entity_name": "Louisiana"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06mz5",
                "entity_name": "South Dakota"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0vbk",
                "entity_name": "Arkansas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ych",
                "entity_name": "Missouri"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05tbn",
                "entity_name": "Pennsylvania"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01n7q",
                "entity_name": "California"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01x73",
                "entity_name": "Connecticut"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026mj",
                "entity_name": "Delaware"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xry",
                "entity_name": "Florida"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gh4",
                "entity_name": "Hawaii"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03s0w",
                "entity_name": "Iowa"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03s5t",
                "entity_name": "Idaho"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03v0t",
                "entity_name": "Illinois"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03v1s",
                "entity_name": "Indiana"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0488g",
                "entity_name": "Kansas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0498y",
                "entity_name": "Kentucky"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rrd",
                "entity_name": "Maryland"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rrx",
                "entity_name": "Michigan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04tgp",
                "entity_name": "Mississippi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ykg",
                "entity_name": "Minnesota"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.050ks",
                "entity_name": "Maine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.050l8",
                "entity_name": "Montana"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059_c",
                "entity_name": "Nevada"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059f4",
                "entity_name": "New Hampshire"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059rby",
                "entity_name": "New York"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fhy",
                "entity_name": "Nebraska"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fjf",
                "entity_name": "New Jersey"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fjy",
                "entity_name": "New Mexico"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fky",
                "entity_name": "North Dakota"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kj_",
                "entity_name": "Oregon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kkh",
                "entity_name": "Ohio"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05mph",
                "entity_name": "Oklahoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06btq",
                "entity_name": "Rhode Island"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06yxd",
                "entity_name": "South Carolina"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07_f2",
                "entity_name": "Vermont"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07b_l",
                "entity_name": "Texas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07srw",
                "entity_name": "Utah"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.081mh",
                "entity_name": "West Virginia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.081yw",
                "entity_name": "Washington"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0824r",
                "entity_name": "Wisconsin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0846v",
                "entity_name": "Wyoming"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d0x8",
                "entity_name": "Georgia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hjy",
                "entity_name": "Alaska"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0vmt",
                "entity_name": "Arizona"
            }
        ]
    },
    {
        "qid": 499000300,
        "question": "what are the beliefs for people in the temple in jerusalem?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05pyj",
                "entity_name": "Omniscience"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02wvcg4",
                "entity_name": "Entering Heaven alive"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02746s4",
                "entity_name": "Unitarian monotheism"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05px4",
                "entity_name": "Omnipotence"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "religion.belief",
                    "class": "religion.belief",
                    "friendly_name": "Belief",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "religion.religion",
                    "class": "religion.religion",
                    "friendly_name": "Religion",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "religion.place_of_worship_historical_use",
                    "class": "religion.place_of_worship_historical_use",
                    "friendly_name": "Place of worship historical use",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.07hwc",
                    "class": "base.jewishcommunities.synagogue",
                    "friendly_name": "Temple in Jerusalem",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "religion.belief.belief_of",
                    "friendly_name": "Belief Of"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "religion.religion.places_of_worship_historical",
                    "friendly_name": "Places of worship (historical)"
                },
                {
                    "start": 2,
                    "end": 3,
                    "relation": "religion.place_of_worship_historical_use.place_of_worship",
                    "friendly_name": "Place of worship"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.belief . \n?x1 :type.object.type :religion.religion . \n?x2 :type.object.type :religion.place_of_worship_historical_use . \nVALUES ?x3 { :m.07hwc } \n?x0 :religion.belief.belief_of ?x1 . \n?x1 :religion.religion.places_of_worship_historical ?x2 . \n?x2 :religion.place_of_worship_historical_use.place_of_worship ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "religion"
        ],
        "s_expression": "(AND religion.belief (JOIN religion.belief.belief_of (JOIN religion.religion.places_of_worship_historical (JOIN religion.place_of_worship_historical_use.place_of_worship m.07hwc))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05pyj",
                "entity_name": "Omniscience"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02wvcg4",
                "entity_name": "Entering Heaven alive"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02746s4",
                "entity_name": "Unitarian monotheism"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017tgt",
                "entity_name": "Divine simplicity"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zpl5",
                "entity_name": "Tikkun olam"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05px4",
                "entity_name": "Omnipotence"
            }
        ]
    },
    {
        "qid": 262000200,
        "question": "what periodic table block contains oxygen?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0htq0",
                "entity_name": "p-block"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "chemistry.periodic_table_block",
                    "class": "chemistry.periodic_table_block",
                    "friendly_name": "Periodic table block",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.025s6bf",
                    "class": "chemistry.chemical_element",
                    "friendly_name": "Oxygen",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "chemistry.periodic_table_block.elements",
                    "friendly_name": "Elements"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :chemistry.periodic_table_block . \nVALUES ?x1 { :m.025s6bf } \n?x0 :chemistry.periodic_table_block.elements ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "chemistry"
        ],
        "s_expression": "(AND chemistry.periodic_table_block (JOIN chemistry.periodic_table_block.elements m.025s6bf))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0htq0",
                "entity_name": "p-block"
            }
        ]
    },
    {
        "qid": 395000300,
        "question": "what are the likely causes of the tuberculosis disease?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.022tdh",
                "entity_name": "Mycobacterium tuberculosis"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.disease_cause",
                    "class": "medicine.disease_cause",
                    "friendly_name": "Disease cause",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07jwr",
                    "class": "base.disaster2.infectious_disease",
                    "friendly_name": "Tuberculosis",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.disease.causes",
                    "friendly_name": "Causes"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.disease_cause . \nVALUES ?x1 { :m.07jwr } \n?x1 :medicine.disease.causes ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(AND medicine.disease_cause (JOIN (R medicine.disease.causes) m.07jwr))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.022tdh",
                "entity_name": "Mycobacterium tuberculosis"
            }
        ]
    },
    {
        "qid": 363000101,
        "question": "what is the name of the lea that has the us under their jurisdiction?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d6qjf",
                "entity_name": "Central Intelligence Agency (CIA)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.015dvh",
                "entity_name": "U.S. National Park Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_1m",
                "entity_name": "Federal Bureau of Investigation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03__hw",
                "entity_name": "Federal Air Marshal Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qtlv",
                "entity_name": "United States Border Patrol"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01ymr_",
                "entity_name": "Bureau of Alcohol, Tobacco, Firearms and Explosives"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012qj2",
                "entity_name": "United States Drug Enforcement Administration"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.061bsk",
                "entity_name": "United States Postal Inspection Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fcjg",
                "entity_name": "United States Air Force Office of Special Investigations"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04n_66",
                "entity_name": "Federal Bureau of Prisons"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fynw",
                "entity_name": "United States Secret Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.054lk6",
                "entity_name": "Bureau of Narcotics and Dangerous Drugs"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d39xh",
                "entity_name": "Fire Research Laboratory"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pks1r",
                "entity_name": "IRS Criminal Investigation Division"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05qcjv",
                "entity_name": "National Drug Intelligence Center"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025rqgp",
                "entity_name": "Diplomatic Security Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.044r9j",
                "entity_name": "Bureau of Prohibition"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05q9fp",
                "entity_name": "Pentagon Force Protection Agency"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07rq2w",
                "entity_name": "Board of Immigration Appeals"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02q26r9",
                "entity_name": "Office of Professional Responsibility"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04529w",
                "entity_name": "Bureau of Diplomatic Security"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05vv2f",
                "entity_name": "Federal Bureau of Narcotics"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r9rpm",
                "entity_name": "Executive Office for Immigration Review"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07j3s4",
                "entity_name": "Coast Guard Investigative Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pwsfm",
                "entity_name": "Shadow Wolves"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05q1cs",
                "entity_name": "Defense Criminal Investigative Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07xx9h",
                "entity_name": "United States Mint Police"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09ygtg",
                "entity_name": "Bureau of Drug Abuse Control"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ds_hk",
                "entity_name": "Federal Reserve Police"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.crime.law_enforcement_authority",
                    "class": "base.crime.law_enforcement_authority",
                    "friendly_name": "Law enforcement agency",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.09c7w0",
                    "class": "government.governmental_jurisdiction",
                    "friendly_name": "us",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.governmental_jurisdiction.agencies",
                    "friendly_name": "Agencies"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.crime.law_enforcement_authority . \nVALUES ?x1 { :m.09c7w0 } \n?x1 :government.governmental_jurisdiction.agencies ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "government"
        ],
        "s_expression": "(AND base.crime.law_enforcement_authority (JOIN (R government.governmental_jurisdiction.agencies) m.09c7w0))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d6qjf",
                "entity_name": "Central Intelligence Agency (CIA)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0885q5",
                "entity_name": "United States Department of Veterans Affairs Police"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.015dvh",
                "entity_name": "U.S. National Park Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01fp_h",
                "entity_name": "U.S. Immigration and Customs Enforcement"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_1m",
                "entity_name": "Federal Bureau of Investigation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.065v18",
                "entity_name": "United States Capitol Police"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03__hw",
                "entity_name": "Federal Air Marshal Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03m8v8",
                "entity_name": "Naval Criminal Investigative Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qtlv",
                "entity_name": "United States Border Patrol"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pl1mm",
                "entity_name": "United States Army Criminal Investigation Command"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01ymr_",
                "entity_name": "Bureau of Alcohol, Tobacco, Firearms and Explosives"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012qj2",
                "entity_name": "United States Drug Enforcement Administration"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.061bsk",
                "entity_name": "United States Postal Inspection Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dtj5",
                "entity_name": "United States Department of Justice"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fcjg",
                "entity_name": "United States Air Force Office of Special Investigations"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04n_66",
                "entity_name": "Federal Bureau of Prisons"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fynw",
                "entity_name": "United States Secret Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.054lk6",
                "entity_name": "Bureau of Narcotics and Dangerous Drugs"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d39xh",
                "entity_name": "Fire Research Laboratory"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pks1r",
                "entity_name": "IRS Criminal Investigation Division"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05qcjv",
                "entity_name": "National Drug Intelligence Center"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0p6f_",
                "entity_name": "United States Marshals Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025rqgp",
                "entity_name": "Diplomatic Security Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.044r9j",
                "entity_name": "Bureau of Prohibition"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05q9fp",
                "entity_name": "Pentagon Force Protection Agency"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07rq2w",
                "entity_name": "Board of Immigration Appeals"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02q26r9",
                "entity_name": "Office of Professional Responsibility"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bhnh4",
                "entity_name": "Supreme Court Police"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04529w",
                "entity_name": "Bureau of Diplomatic Security"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04pv5p",
                "entity_name": "Federal Protective Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05vv2f",
                "entity_name": "Federal Bureau of Narcotics"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r9rpm",
                "entity_name": "Executive Office for Immigration Review"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07j3s4",
                "entity_name": "Coast Guard Investigative Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026x30",
                "entity_name": "United States Park Police"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pwsfm",
                "entity_name": "Shadow Wolves"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05q1cs",
                "entity_name": "Defense Criminal Investigative Service"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07xx9h",
                "entity_name": "United States Mint Police"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dq048",
                "entity_name": "Office of Criminal Investigations"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09ygtg",
                "entity_name": "Bureau of Drug Abuse Control"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ds_hk",
                "entity_name": "Federal Reserve Police"
            }
        ]
    },
    {
        "qid": 425000401,
        "question": "locate plants capable of hosting black rust.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09gtx",
                "entity_name": "Barley"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "biology.plant_disease_host",
                    "class": "biology.plant_disease_host",
                    "friendly_name": "Plant Disease Host",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "biology.plant_disease_triangle",
                    "class": "biology.plant_disease_triangle",
                    "friendly_name": "Plant Disease Triangle",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02pn8yb",
                    "class": "biology.plant_disease",
                    "friendly_name": "black rust",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "biology.plant_disease_host.disease_s",
                    "friendly_name": "Disease(s)"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "biology.plant_disease_triangle.plant_disease",
                    "friendly_name": "Plant disease"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :biology.plant_disease_host . \n?x1 :type.object.type :biology.plant_disease_triangle . \nVALUES ?x2 { :m.02pn8yb } \n?x0 :biology.plant_disease_host.disease_s ?x1 . \n?x1 :biology.plant_disease_triangle.plant_disease ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "biology"
        ],
        "s_expression": "(AND biology.plant_disease_host (JOIN biology.plant_disease_host.disease_s (JOIN biology.plant_disease_triangle.plant_disease m.02pn8yb)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09gtx",
                "entity_name": "Barley"
            }
        ]
    },
    {
        "qid": 285000200,
        "question": "leica m9 uses what uncompressed format?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_2yh",
                "entity_name": "Digital Negative"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "digicams.camera_uncompressed_format",
                    "class": "digicams.camera_uncompressed_format",
                    "friendly_name": "Camera Uncompressed Format",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07sc73x",
                    "class": "digicams.digital_camera",
                    "friendly_name": "Leica M9",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "digicams.camera_compressed_format.cameras",
                    "friendly_name": "Cameras"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :digicams.camera_uncompressed_format . \nVALUES ?x1 { :m.07sc73x } \n?x0 :digicams.camera_compressed_format.cameras ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "digicams"
        ],
        "s_expression": "(AND digicams.camera_uncompressed_format (JOIN digicams.camera_compressed_format.cameras m.07sc73x))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_2yh",
                "entity_name": "Digital Negative"
            }
        ]
    },
    {
        "qid": 474000500,
        "question": "what are the names of the infectious diseases that could be generated by something that can also be what causes aids?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0mh4s",
                "entity_name": "Gonorrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064fq",
                "entity_name": "Pelvic inflammatory disease"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01glh",
                "entity_name": "Bacterial vaginosis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0259ln",
                "entity_name": "Tinea cruris"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07y4wwh",
                "entity_name": "HTLV-I Infections"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dc5_q2",
                "entity_name": "Phthirus pubis infestation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqpg",
                "entity_name": "Kaposi's sarcoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.019syx",
                "entity_name": "Human papillomavirus infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gxbfm",
                "entity_name": "Herpes simplex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254yv",
                "entity_name": "Molluscum contagiosum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01qmrl",
                "entity_name": "Non-gonococcal urethritis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m72x",
                "entity_name": "Trichomoniasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yjzm",
                "entity_name": "Hepatitis A"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0167bx",
                "entity_name": "Hepatitis B"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01lvyl",
                "entity_name": "Lymphogranuloma venereum"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.disaster2.infectious_disease",
                    "class": "base.disaster2.infectious_disease",
                    "friendly_name": "Infectious disease",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "medicine.risk_factor",
                    "class": "medicine.risk_factor",
                    "friendly_name": "Risk Factor",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d19y2",
                    "class": "medicine.disease",
                    "friendly_name": "AIDS",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "medicine.disease.risk_factors",
                    "friendly_name": "Risk Factors"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "medicine.risk_factor.diseases",
                    "friendly_name": "Diseases with this Risk Factor"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.disaster2.infectious_disease . \n?x1 :type.object.type :medicine.risk_factor . \nVALUES ?x2 { :m.0d19y2 } \n?x0 :medicine.disease.risk_factors ?x1 . \n?x1 :medicine.risk_factor.diseases ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(AND base.disaster2.infectious_disease (JOIN medicine.disease.risk_factors (JOIN medicine.risk_factor.diseases m.0d19y2)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0mh4s",
                "entity_name": "Gonorrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064fq",
                "entity_name": "Pelvic inflammatory disease"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01glh",
                "entity_name": "Bacterial vaginosis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0259ln",
                "entity_name": "Tinea cruris"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07y4wwh",
                "entity_name": "HTLV-I Infections"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dc5_q2",
                "entity_name": "Phthirus pubis infestation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqpg",
                "entity_name": "Kaposi's sarcoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.019syx",
                "entity_name": "Human papillomavirus infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gxbfm",
                "entity_name": "Herpes simplex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gv",
                "entity_name": "Candidiasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254yv",
                "entity_name": "Molluscum contagiosum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01qmrl",
                "entity_name": "Non-gonococcal urethritis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m72x",
                "entity_name": "Trichomoniasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yjzm",
                "entity_name": "Hepatitis A"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0167bx",
                "entity_name": "Hepatitis B"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01lvyl",
                "entity_name": "Lymphogranuloma venereum"
            }
        ]
    },
    {
        "qid": 274000300,
        "question": "find the opera productions of joseph papp.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kfcjzy",
                "entity_name": "The Threepenny Opera"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "opera.opera_production",
                    "class": "opera.opera_production",
                    "friendly_name": "Opera Production",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01z1pc",
                    "class": "opera.opera_producer",
                    "friendly_name": "Joseph Papp",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "opera.opera_production.producer",
                    "friendly_name": "Producer"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :opera.opera_production . \nVALUES ?x1 { :m.01z1pc } \n?x0 :opera.opera_production.producer ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "opera"
        ],
        "s_expression": "(AND opera.opera_production (JOIN opera.opera_production.producer m.01z1pc))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kdd12q",
                "entity_name": "The Pirates of Penzance"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kfcjzy",
                "entity_name": "The Threepenny Opera"
            }
        ]
    },
    {
        "qid": 311000201,
        "question": "what is the number of softwares that google inc developed?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "68",
                "entity_name": "68"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.software",
                    "class": "computer.software",
                    "friendly_name": "Software",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.045c7b",
                    "class": "computer.software_developer",
                    "friendly_name": "google inc",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "computer.software.developer",
                    "friendly_name": "Developer"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.software . \nVALUES ?x1 { :m.045c7b } \n?x0 :computer.software.developer ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "computer"
        ],
        "s_expression": "(COUNT (AND computer.software (JOIN computer.software.developer m.045c7b)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "87"
            }
        ]
    },
    {
        "qid": 275000001,
        "question": "what are the causes of adhd?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05zppz",
                "entity_name": "Male"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qwpq0",
                "entity_name": "Learning disability"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.086q2q",
                "entity_name": "Oppositional defiant disorder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06wfn5t",
                "entity_name": "Family History of Attention Deficit - Hyperactivity Disorder"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.risk_factor",
                    "class": "medicine.risk_factor",
                    "friendly_name": "Risk Factor",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0h99n",
                    "class": "base.aubreymaturin.malady",
                    "friendly_name": "adhd",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.disease.risk_factors",
                    "friendly_name": "Risk Factors"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.risk_factor . \nVALUES ?x1 { :m.0h99n } \n?x1 :medicine.disease.risk_factors ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(AND medicine.risk_factor (JOIN (R medicine.disease.risk_factors) m.0h99n))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05zppz",
                "entity_name": "Male"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qwpq0",
                "entity_name": "Learning disability"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027hpx",
                "entity_name": "Preterm birth"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.086q2q",
                "entity_name": "Oppositional defiant disorder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06wfn5t",
                "entity_name": "Family History of Attention Deficit - Hyperactivity Disorder"
            }
        ]
    },
    {
        "qid": 433000302,
        "question": "where did brit go to rehab?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.064cp29",
                "entity_name": "Undisclosed"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.popstra.rehab_facility",
                    "class": "base.popstra.rehab_facility",
                    "friendly_name": "Rehab Facility",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.popstra.rehab_stay",
                    "class": "base.popstra.rehab_stay",
                    "friendly_name": "Rehab Stay",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.015f7",
                    "class": "base.popstra.celebrity",
                    "friendly_name": "brit",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.popstra.rehab_stay.facility",
                    "friendly_name": "Facility"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.popstra.celebrity.rehab_stay",
                    "friendly_name": "Rehab"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.popstra.rehab_facility . \n?x1 :type.object.type :base.popstra.rehab_stay . \nVALUES ?x2 { :m.015f7 } \n?x1 :base.popstra.rehab_stay.facility ?x0 . \n?x2 :base.popstra.celebrity.rehab_stay ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.popstra.rehab_facility (JOIN (R base.popstra.rehab_stay.facility) (JOIN (R base.popstra.celebrity.rehab_stay) m.015f7)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.064cp29",
                "entity_name": "Undisclosed"
            }
        ]
    },
    {
        "qid": 328000300,
        "question": "which city is the smallest autonomous city of spain?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.052lf",
                "entity_name": "Melilla"
            }
        ],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "location.es_autonomous_city",
                    "class": "location.es_autonomous_city",
                    "friendly_name": "Spanish autonomous city",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "location.location.area",
                    "friendly_name": "Area"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :location.es_autonomous_city . \n{\nSELECT (MIN(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :location.es_autonomous_city . \n?y0 :location.location.area ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :location.location.area ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "location"
        ],
        "s_expression": "(ARGMIN location.es_autonomous_city location.location.area)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.052lf",
                "entity_name": "Melilla"
            }
        ]
    },
    {
        "qid": 344000200,
        "question": "what services are using the berkeley open infrastructure for network computing?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lyw2m8",
                "entity_name": "Charity Engine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0svpj5b",
                "entity_name": "GridRepublic"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04dnrw",
                "entity_name": "World Community Grid"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.centreforeresearch.service",
                    "class": "base.centreforeresearch.service",
                    "friendly_name": "Service",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01ytby",
                    "class": "base.centreforeresearch.software_technology",
                    "friendly_name": "Berkeley Open Infrastructure for Network Computing",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.centreforeresearch.software_technology.used_in_service",
                    "friendly_name": "Used in Service"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.centreforeresearch.service . \nVALUES ?x1 { :m.01ytby } \n?x1 :base.centreforeresearch.software_technology.used_in_service ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.centreforeresearch.service (JOIN (R base.centreforeresearch.software_technology.used_in_service) m.01ytby))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lyw2m8",
                "entity_name": "Charity Engine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0svpj5b",
                "entity_name": "GridRepublic"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04dnrw",
                "entity_name": "World Community Grid"
            }
        ]
    },
    {
        "qid": 366000002,
        "question": "which gameplay mode can starcraft brood war be played in?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02hjn4",
                "entity_name": "Single-player video game"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.gameplay_mode",
                    "class": "cvg.gameplay_mode",
                    "friendly_name": "Gameplay Mode",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02z4kv",
                    "class": "cvg.computer_game_expansion",
                    "friendly_name": "starcraft brood war",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "cvg.gameplay_mode.games_with_this_mode",
                    "friendly_name": "Games with this mode"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.gameplay_mode . \nVALUES ?x1 { :m.02z4kv } \n?x0 :cvg.gameplay_mode.games_with_this_mode ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "cvg"
        ],
        "s_expression": "(AND cvg.gameplay_mode (JOIN cvg.gameplay_mode.games_with_this_mode m.02z4kv))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02hjn4",
                "entity_name": "Single-player video game"
            }
        ]
    },
    {
        "qid": 303000102,
        "question": "roosevelt had what type of disability?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0251gx",
                "entity_name": "Paraplegia"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.qualia.type_of_disability",
                    "class": "base.qualia.type_of_disability",
                    "friendly_name": "Type of disability",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02yy8",
                    "class": "base.qualia.disabled_person",
                    "friendly_name": "roosevelt",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.qualia.disabled_person.type_of_disability",
                    "friendly_name": "Type of disability"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.qualia.type_of_disability . \nVALUES ?x1 { :m.02yy8 } \n?x1 :base.qualia.disabled_person.type_of_disability ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.qualia.type_of_disability (JOIN (R base.qualia.disabled_person.type_of_disability) m.02yy8))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0251gx",
                "entity_name": "Paraplegia"
            }
        ]
    },
    {
        "qid": 386000002,
        "question": "what are the political parties that percolate in the united states?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01_szv",
                "entity_name": "American Nazi Party"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0by88",
                "entity_name": "Black Panther Party"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.057c2p",
                "entity_name": "National Socialist Movement"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07994l",
                "entity_name": "United States Marijuana Party"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.activism.political_party",
                    "class": "base.activism.political_party",
                    "friendly_name": "Political party",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.09c7w0",
                    "class": "organization.organization_scope",
                    "friendly_name": "united states",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "organization.organization.geographic_scope",
                    "friendly_name": "Geographic scope"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.activism.political_party . \nVALUES ?x1 { :m.09c7w0 } \n?x0 :organization.organization.geographic_scope ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "organization"
        ],
        "s_expression": "(AND base.activism.political_party (JOIN organization.organization.geographic_scope m.09c7w0))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01_szv",
                "entity_name": "American Nazi Party"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0by88",
                "entity_name": "Black Panther Party"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.057c2p",
                "entity_name": "National Socialist Movement"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07994l",
                "entity_name": "United States Marijuana Party"
            }
        ]
    },
    {
        "qid": 375000201,
        "question": "what barbie dolls are produced in reference to elvis?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05gnxbm",
                "entity_name": "Barbie Loves Elvis Giftset"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.barbie.barbie_doll",
                    "class": "base.barbie.barbie_doll",
                    "friendly_name": "Barbie Doll",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02jq1",
                    "class": "business.product_theme",
                    "friendly_name": "elvis",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "business.product_theme.products",
                    "friendly_name": "Products"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.barbie.barbie_doll . \nVALUES ?x1 { :m.02jq1 } \n?x1 :business.product_theme.products ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "business"
        ],
        "s_expression": "(AND base.barbie.barbie_doll (JOIN (R business.product_theme.products) m.02jq1))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05gnxbm",
                "entity_name": "Barbie Loves Elvis Giftset"
            }
        ]
    },
    {
        "qid": 266000100,
        "question": "what gender is gamera?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05zppz",
                "entity_name": "Male"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.monster.monster_gender",
                    "class": "base.monster.monster_gender",
                    "friendly_name": "Monster Gender",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0h9fv",
                    "class": "base.monster.monster",
                    "friendly_name": "Gamera",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.monster.monster.gender",
                    "friendly_name": "Gender"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.monster.monster_gender . \nVALUES ?x1 { :m.0h9fv } \n?x1 :base.monster.monster.gender ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.monster.monster_gender (JOIN (R base.monster.monster.gender) m.0h9fv))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05zppz",
                "entity_name": "Male"
            }
        ]
    },
    {
        "qid": 415000401,
        "question": "which blocks of the periodic table of elements includes curie's discoveries?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0htq0",
                "entity_name": "p-block"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0htmp",
                "entity_name": "s-block"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "chemistry.periodic_table_block",
                    "class": "chemistry.periodic_table_block",
                    "friendly_name": "Periodic table block",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "chemistry.chemical_element",
                    "class": "chemistry.chemical_element",
                    "friendly_name": "Chemical Element",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.053_d",
                    "class": "chemistry.element_discoverer",
                    "friendly_name": "curie",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "chemistry.chemical_element.periodic_table_block",
                    "friendly_name": "Periodic table block"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "chemistry.chemical_element.discoverer",
                    "friendly_name": "Discoverer"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :chemistry.periodic_table_block . \n?x1 :type.object.type :chemistry.chemical_element . \nVALUES ?x2 { :m.053_d } \n?x1 :chemistry.chemical_element.periodic_table_block ?x0 . \n?x1 :chemistry.chemical_element.discoverer ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "chemistry"
        ],
        "s_expression": "(AND chemistry.periodic_table_block (JOIN (R chemistry.chemical_element.periodic_table_block) (JOIN chemistry.chemical_element.discoverer m.053_d)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0htq0",
                "entity_name": "p-block"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0htmp",
                "entity_name": "s-block"
            }
        ]
    },
    {
        "qid": 308000300,
        "question": "what lens mount is canon eos 40d using?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03tdl3",
                "entity_name": "Canon EF-S lens mount"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.filmcameras.lens_mount",
                    "class": "base.filmcameras.lens_mount",
                    "friendly_name": "Lens Mount",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02wvl40",
                    "class": "base.filmcameras.camera",
                    "friendly_name": "Canon EOS 40D",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.filmcameras.lens_mount.cameras",
                    "friendly_name": "Cameras"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.filmcameras.lens_mount . \nVALUES ?x1 { :m.02wvl40 } \n?x0 :base.filmcameras.lens_mount.cameras ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.filmcameras.lens_mount (JOIN base.filmcameras.lens_mount.cameras m.02wvl40))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03tdl3",
                "entity_name": "Canon EF-S lens mount"
            }
        ]
    },
    {
        "qid": 348000001,
        "question": "which paintings are discovered in lascaux cave?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy35w0",
                "entity_name": "Great Black Bull"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy3d5d",
                "entity_name": "Red Horse Black Horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z7pzh",
                "entity_name": "The Scene of the Dead Man"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy35d0",
                "entity_name": "Red Cow and First Chinese Horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy43_s",
                "entity_name": "The Red Chinese Horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbbf",
                "entity_name": "Swimming Deer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbcy",
                "entity_name": "Lascaux Bison"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbf9",
                "entity_name": "The Two Chinese Horses"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbkn",
                "entity_name": "Lascaux Antlered Stage"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbl_",
                "entity_name": "The Great Cow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbnh",
                "entity_name": "The Hall of Bulls"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbqc",
                "entity_name": "Falling Horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbrs",
                "entity_name": "Fleeing Horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbt3",
                "entity_name": "The Unicorn"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbvf",
                "entity_name": "The Chipped Auroch"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbz5",
                "entity_name": "Falling Cow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybc0n",
                "entity_name": "Star Eyed Auroch"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gyn0np",
                "entity_name": "Lascaux Hunting Scene"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.caveart.painting",
                    "class": "base.caveart.painting",
                    "friendly_name": "Cave Painting",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04q6t",
                    "class": "base.caveart.cave",
                    "friendly_name": "lascaux cave",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.caveart.cave.paintings",
                    "friendly_name": "Paintings"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.caveart.painting . \nVALUES ?x1 { :m.04q6t } \n?x1 :base.caveart.cave.paintings ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.caveart.painting (JOIN (R base.caveart.cave.paintings) m.04q6t))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy35w0",
                "entity_name": "Great Black Bull"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy3d5d",
                "entity_name": "Red Horse Black Horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z7pzh",
                "entity_name": "The Scene of the Dead Man"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy35d0",
                "entity_name": "Red Cow and First Chinese Horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy43_s",
                "entity_name": "The Red Chinese Horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbbf",
                "entity_name": "Swimming Deer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbcy",
                "entity_name": "Lascaux Bison"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbf9",
                "entity_name": "The Two Chinese Horses"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbkn",
                "entity_name": "Lascaux Antlered Stage"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbl_",
                "entity_name": "The Great Cow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbnh",
                "entity_name": "The Hall of Bulls"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbqc",
                "entity_name": "Falling Horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbrs",
                "entity_name": "Fleeing Horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbt3",
                "entity_name": "The Unicorn"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbvf",
                "entity_name": "The Chipped Auroch"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbz5",
                "entity_name": "Falling Cow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybc0n",
                "entity_name": "Star Eyed Auroch"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gyn0np",
                "entity_name": "Lascaux Hunting Scene"
            }
        ]
    },
    {
        "qid": 490000400,
        "question": "the podcast released thru feedburner daily with the most episodes is what?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0440xgp",
                "entity_name": "VH1 Best Week Ever - Podcast Feed"
            }
        ],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "broadcast.podcast_feed",
                    "class": "broadcast.podcast_feed",
                    "friendly_name": "Podcast Feed",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.037kwr",
                    "class": "measurement_unit.unit_of_frequency",
                    "friendly_name": "Daily",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0fmngy",
                    "class": "broadcast.distributor",
                    "friendly_name": "FeedBurner",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "broadcast.podcast_feed.number_of_items",
                    "friendly_name": "Number Of Items"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "broadcast.podcast_feed.publication_frequency",
                    "friendly_name": "Publication Frequency"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "broadcast.broadcast.distributor",
                    "friendly_name": "Distributor"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :broadcast.podcast_feed . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :broadcast.podcast_feed . \nVALUES ?y2 { :m.037kwr } \nVALUES ?y3 { :m.0fmngy } \n?y0 :broadcast.podcast_feed.number_of_items ?y1 . \n?y0 :broadcast.podcast_feed.publication_frequency ?y2 . \n?y0 :broadcast.broadcast.distributor ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\nVALUES ?x2 { :m.037kwr } \nVALUES ?x3 { :m.0fmngy } \n?x0 :broadcast.podcast_feed.number_of_items ?x1 . \n?x0 :broadcast.podcast_feed.publication_frequency ?x2 . \n?x0 :broadcast.broadcast.distributor ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "broadcast"
        ],
        "s_expression": "(ARGMAX (AND broadcast.podcast_feed (AND (JOIN broadcast.podcast_feed.publication_frequency m.037kwr) (JOIN broadcast.broadcast.distributor m.0fmngy))) broadcast.podcast_feed.number_of_items)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0440xgp",
                "entity_name": "VH1 Best Week Ever - Podcast Feed"
            }
        ]
    },
    {
        "qid": 375000402,
        "question": "name the barbie dolls themed on presley?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05gnxbm",
                "entity_name": "Barbie Loves Elvis Giftset"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.barbie.barbie_doll",
                    "class": "base.barbie.barbie_doll",
                    "friendly_name": "Barbie Doll",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02jq1",
                    "class": "business.product_theme",
                    "friendly_name": "presley",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "business.product_theme.products",
                    "friendly_name": "Products"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.barbie.barbie_doll . \nVALUES ?x1 { :m.02jq1 } \n?x1 :business.product_theme.products ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "business"
        ],
        "s_expression": "(AND base.barbie.barbie_doll (JOIN (R business.product_theme.products) m.02jq1))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05gnxbm",
                "entity_name": "Barbie Loves Elvis Giftset"
            }
        ]
    },
    {
        "qid": 474000602,
        "question": "which infectious diseases may be caused by something that can also cause hiv infection?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0mh4s",
                "entity_name": "Gonorrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064fq",
                "entity_name": "Pelvic inflammatory disease"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01glh",
                "entity_name": "Bacterial vaginosis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0259ln",
                "entity_name": "Tinea cruris"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07y4wwh",
                "entity_name": "HTLV-I Infections"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dc5_q2",
                "entity_name": "Phthirus pubis infestation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqpg",
                "entity_name": "Kaposi's sarcoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.019syx",
                "entity_name": "Human papillomavirus infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gxbfm",
                "entity_name": "Herpes simplex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254yv",
                "entity_name": "Molluscum contagiosum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01qmrl",
                "entity_name": "Non-gonococcal urethritis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m72x",
                "entity_name": "Trichomoniasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yjzm",
                "entity_name": "Hepatitis A"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0167bx",
                "entity_name": "Hepatitis B"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01lvyl",
                "entity_name": "Lymphogranuloma venereum"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.disaster2.infectious_disease",
                    "class": "base.disaster2.infectious_disease",
                    "friendly_name": "Infectious disease",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "medicine.risk_factor",
                    "class": "medicine.risk_factor",
                    "friendly_name": "Risk Factor",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d19y2",
                    "class": "medicine.disease",
                    "friendly_name": "hiv infection",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "medicine.disease.risk_factors",
                    "friendly_name": "Risk Factors"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "medicine.risk_factor.diseases",
                    "friendly_name": "Diseases with this Risk Factor"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.disaster2.infectious_disease . \n?x1 :type.object.type :medicine.risk_factor . \nVALUES ?x2 { :m.0d19y2 } \n?x0 :medicine.disease.risk_factors ?x1 . \n?x1 :medicine.risk_factor.diseases ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(AND base.disaster2.infectious_disease (JOIN medicine.disease.risk_factors (JOIN medicine.risk_factor.diseases m.0d19y2)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0mh4s",
                "entity_name": "Gonorrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064fq",
                "entity_name": "Pelvic inflammatory disease"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01glh",
                "entity_name": "Bacterial vaginosis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0259ln",
                "entity_name": "Tinea cruris"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07y4wwh",
                "entity_name": "HTLV-I Infections"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dc5_q2",
                "entity_name": "Phthirus pubis infestation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqpg",
                "entity_name": "Kaposi's sarcoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.019syx",
                "entity_name": "Human papillomavirus infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gxbfm",
                "entity_name": "Herpes simplex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gv",
                "entity_name": "Candidiasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254yv",
                "entity_name": "Molluscum contagiosum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01qmrl",
                "entity_name": "Non-gonococcal urethritis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m72x",
                "entity_name": "Trichomoniasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yjzm",
                "entity_name": "Hepatitis A"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0167bx",
                "entity_name": "Hepatitis B"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01lvyl",
                "entity_name": "Lymphogranuloma venereum"
            }
        ]
    },
    {
        "qid": 490000101,
        "question": "the maximum number of episodes is found in which daily podcast on google feedburner?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0440xgp",
                "entity_name": "VH1 Best Week Ever - Podcast Feed"
            }
        ],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "broadcast.podcast_feed",
                    "class": "broadcast.podcast_feed",
                    "friendly_name": "Podcast Feed",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.037kwr",
                    "class": "measurement_unit.unit_of_frequency",
                    "friendly_name": "Daily",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0fmngy",
                    "class": "broadcast.distributor",
                    "friendly_name": "google feedburner",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "broadcast.podcast_feed.number_of_items",
                    "friendly_name": "Number Of Items"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "broadcast.podcast_feed.publication_frequency",
                    "friendly_name": "Publication Frequency"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "broadcast.broadcast.distributor",
                    "friendly_name": "Distributor"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :broadcast.podcast_feed . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :broadcast.podcast_feed . \nVALUES ?y2 { :m.037kwr } \nVALUES ?y3 { :m.0fmngy } \n?y0 :broadcast.podcast_feed.number_of_items ?y1 . \n?y0 :broadcast.podcast_feed.publication_frequency ?y2 . \n?y0 :broadcast.broadcast.distributor ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\nVALUES ?x2 { :m.037kwr } \nVALUES ?x3 { :m.0fmngy } \n?x0 :broadcast.podcast_feed.number_of_items ?x1 . \n?x0 :broadcast.podcast_feed.publication_frequency ?x2 . \n?x0 :broadcast.broadcast.distributor ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "broadcast"
        ],
        "s_expression": "(ARGMAX (AND broadcast.podcast_feed (AND (JOIN broadcast.podcast_feed.publication_frequency m.037kwr) (JOIN broadcast.broadcast.distributor m.0fmngy))) broadcast.podcast_feed.number_of_items)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0440xgp",
                "entity_name": "VH1 Best Week Ever - Podcast Feed"
            }
        ]
    },
    {
        "qid": 496000202,
        "question": "for the casinos owned by the same person as bellagio casino, which one is the smallest?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0937y7",
                "entity_name": "Nevada Landing Hotel and Casino"
            }
        ],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.casinos.casino",
                    "class": "base.casinos.casino",
                    "friendly_name": "Casino",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.casinos.casino_owner",
                    "class": "base.casinos.casino_owner",
                    "friendly_name": "Casino owner",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.033bxs",
                    "class": "base.casinos.casino",
                    "friendly_name": "bellagio casino",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.casinos.casino_owner.casinos_owned",
                    "friendly_name": "Casinos owned"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "base.casinos.casino.rooms",
                    "friendly_name": "Rooms"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "base.casinos.casino_owner.casinos_owned",
                    "friendly_name": "Casinos owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.casinos.casino . \n?x1 :type.object.type :base.casinos.casino_owner . \n{\nSELECT (MIN(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :base.casinos.casino . \n?y1 :type.object.type :base.casinos.casino_owner . \nVALUES ?y3 { :m.033bxs } \n?y1 :base.casinos.casino_owner.casinos_owned ?y0 . \n?y0 :base.casinos.casino.rooms ?y2 . \n?y1 :base.casinos.casino_owner.casinos_owned ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\nVALUES ?x3 { :m.033bxs } \n?x1 :base.casinos.casino_owner.casinos_owned ?x0 . \n?x0 :base.casinos.casino.rooms ?x2 . \n?x1 :base.casinos.casino_owner.casinos_owned ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(ARGMIN (AND base.casinos.casino (JOIN (R base.casinos.casino_owner.casinos_owned) (JOIN base.casinos.casino_owner.casinos_owned m.033bxs))) base.casinos.casino.rooms)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0937y7",
                "entity_name": "Nevada Landing Hotel and Casino"
            }
        ]
    },
    {
        "qid": 404000501,
        "question": "cr are what species?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f89mk",
                "entity_name": "Cuban kite"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.conservation.protected_species",
                    "class": "base.conservation.protected_species",
                    "friendly_name": "Protected Species",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.conservation.protected_species_status",
                    "class": "base.conservation.protected_species_status",
                    "friendly_name": "Protected Species Status",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0cgnb7",
                    "class": "base.conservation.conservation_status_designation",
                    "friendly_name": "cr",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.conservation.protected_species_status.protected_species",
                    "friendly_name": "Protected Species"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.conservation.protected_species_status.status_designation",
                    "friendly_name": "Status Designation"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.conservation.protected_species . \n?x1 :type.object.type :base.conservation.protected_species_status . \nVALUES ?x2 { :m.0cgnb7 } \n?x1 :base.conservation.protected_species_status.protected_species ?x0 . \n?x1 :base.conservation.protected_species_status.status_designation ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.conservation.protected_species (JOIN (R base.conservation.protected_species_status.protected_species) (JOIN base.conservation.protected_species_status.status_designation m.0cgnb7)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f89mk",
                "entity_name": "Cuban kite"
            }
        ]
    },
    {
        "qid": 301000001,
        "question": "what form of martial arts is tai chi?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rj0b",
                "entity_name": "Strike"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "martial_arts.martial_art_category",
                    "class": "martial_arts.martial_art_category",
                    "friendly_name": "Martial Art Category",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07k4r",
                    "class": "martial_arts.martial_art",
                    "friendly_name": "tai chi",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "martial_arts.martial_art_category.martial_arts",
                    "friendly_name": "Martial arts"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :martial_arts.martial_art_category . \nVALUES ?x1 { :m.07k4r } \n?x0 :martial_arts.martial_art_category.martial_arts ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "martial_arts"
        ],
        "s_expression": "(AND martial_arts.martial_art_category (JOIN martial_arts.martial_art_category.martial_arts m.07k4r))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rj0b",
                "entity_name": "Strike"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.039cp",
                "entity_name": "Grappling"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_yl6z",
                "entity_name": "Internal"
            }
        ]
    },
    {
        "qid": 438000201,
        "question": "how many other games are designed by the designer of rb2?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "4",
                "entity_name": "4"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.computer_videogame",
                    "class": "cvg.computer_videogame",
                    "friendly_name": "Video game",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "cvg.cvg_designer",
                    "class": "cvg.cvg_designer",
                    "friendly_name": "Video Game Designer",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.04kbkd1",
                    "class": "cvg.musical_game",
                    "friendly_name": "rb2",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "cvg.computer_videogame.designers",
                    "friendly_name": "Designers"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "cvg.cvg_designer.games_designed",
                    "friendly_name": "Games Designed"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_videogame . \n?x1 :type.object.type :cvg.cvg_designer . \nVALUES ?x2 { :m.04kbkd1 } \n?x0 :cvg.computer_videogame.designers ?x1 . \n?x1 :cvg.cvg_designer.games_designed ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "cvg"
        ],
        "s_expression": "(COUNT (AND cvg.computer_videogame (JOIN cvg.computer_videogame.designers (JOIN cvg.cvg_designer.games_designed m.04kbkd1))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "4"
            }
        ]
    },
    {
        "qid": 309000002,
        "question": "the united states has discovered how many chemical elements?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2",
                "entity_name": "2"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "chemistry.chemical_element",
                    "class": "chemistry.chemical_element",
                    "friendly_name": "Chemical Element",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.09c7w0",
                    "class": "location.country",
                    "friendly_name": "united states",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "chemistry.chemical_element.discovering_country",
                    "friendly_name": "Discovering Country"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :chemistry.chemical_element . \nVALUES ?x1 { :m.09c7w0 } \n?x0 :chemistry.chemical_element.discovering_country ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "chemistry"
        ],
        "s_expression": "(COUNT (AND chemistry.chemical_element (JOIN chemistry.chemical_element.discovering_country m.09c7w0)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ]
    },
    {
        "qid": 459000602,
        "question": "what injuries did ronald regan suffer from?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05pzr_",
                "entity_name": "Hip fracture"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.disaster2.type_of_injury",
                    "class": "base.disaster2.type_of_injury",
                    "friendly_name": "Type of injury",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.disaster2.injury",
                    "class": "base.disaster2.injury",
                    "friendly_name": "Injury",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.06c0j",
                    "class": "base.disaster2.injured_person",
                    "friendly_name": "ronald regan",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.disaster2.type_of_injury.people_with_this_injury",
                    "friendly_name": "People with this injury"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.disaster2.injury.injured_person",
                    "friendly_name": "Injured person"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.disaster2.type_of_injury . \n?x1 :type.object.type :base.disaster2.injury . \nVALUES ?x2 { :m.06c0j } \n?x0 :base.disaster2.type_of_injury.people_with_this_injury ?x1 . \n?x1 :base.disaster2.injury.injured_person ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.disaster2.type_of_injury (JOIN base.disaster2.type_of_injury.people_with_this_injury (JOIN base.disaster2.injury.injured_person m.06c0j)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01q1sz",
                "entity_name": "Pneumothorax"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05pzr_",
                "entity_name": "Hip fracture"
            }
        ]
    },
    {
        "qid": 272000302,
        "question": "find aircraft models which are drone.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fz1lh",
                "entity_name": "Boeing YQM-94"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03k0dbj",
                "entity_name": "Irkut-60"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06kv38",
                "entity_name": "Northrop BQM-74 Chukar"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_ymc5w",
                "entity_name": "Aisheng ASN-9"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yfg3_",
                "entity_name": "Aisheng ASN-7"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r27rl",
                "entity_name": "General Atomics MQ-1C Gray Eagle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0qrzwwh",
                "entity_name": "Black Hornet Nano"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010vv87k",
                "entity_name": "Draganflyer X6"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07g6fn",
                "entity_name": "Boeing Insitu ScanEagle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03m5n_8",
                "entity_name": "AeroVironment SkyTote"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_1fqzv",
                "entity_name": "Yasir"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yf9bj",
                "entity_name": "Aisheng ASN-212"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yjn_w",
                "entity_name": "Aisheng ASN-205"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yklwp",
                "entity_name": "Aisheng Drone-2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c3vrvn",
                "entity_name": "Griffon Aerospace MQM-170 Outlaw"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j55z7n",
                "entity_name": "MQ-1B Predator"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j55z7v",
                "entity_name": "MQ-1A Predator"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0zdy26n",
                "entity_name": "SmartBird"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0zn0d0l",
                "entity_name": "SkyJack"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fy0wy",
                "entity_name": "Ryan Firebee"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "aviation.aircraft_model",
                    "class": "aviation.aircraft_model",
                    "friendly_name": "Aircraft model",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0g2bc",
                    "class": "aviation.aircraft_type",
                    "friendly_name": "drone",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "aviation.aircraft_model.aircraft_type",
                    "friendly_name": "Aircraft type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :aviation.aircraft_model . \nVALUES ?x1 { :m.0g2bc } \n?x0 :aviation.aircraft_model.aircraft_type ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "aviation"
        ],
        "s_expression": "(AND aviation.aircraft_model (JOIN aviation.aircraft_model.aircraft_type m.0g2bc))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h_9v_s",
                "entity_name": "Nimbus EosXi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fz1lh",
                "entity_name": "Boeing YQM-94"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03k0dbj",
                "entity_name": "Irkut-60"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06kv38",
                "entity_name": "Northrop BQM-74 Chukar"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_ymc5w",
                "entity_name": "Aisheng ASN-9"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05hlkw",
                "entity_name": "AAI Corporation Aerosonde"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yfg3_",
                "entity_name": "Aisheng ASN-7"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r27rl",
                "entity_name": "General Atomics MQ-1C Gray Eagle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0qrzwwh",
                "entity_name": "Black Hornet Nano"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010vv87k",
                "entity_name": "Draganflyer X6"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yh30w",
                "entity_name": "Aisheng ASN-1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07g6fn",
                "entity_name": "Boeing Insitu ScanEagle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03m5n_8",
                "entity_name": "AeroVironment SkyTote"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07hzw2",
                "entity_name": "ADM-20 Quail"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_1fqzv",
                "entity_name": "Yasir"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yf9bj",
                "entity_name": "Aisheng ASN-212"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yjn_w",
                "entity_name": "Aisheng ASN-205"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yklwp",
                "entity_name": "Aisheng Drone-2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c3vrvn",
                "entity_name": "Griffon Aerospace MQM-170 Outlaw"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j55z7n",
                "entity_name": "MQ-1B Predator"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j55z7v",
                "entity_name": "MQ-1A Predator"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0zdy26n",
                "entity_name": "SmartBird"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0zn0d0l",
                "entity_name": "SkyJack"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fy0wy",
                "entity_name": "Ryan Firebee"
            }
        ]
    },
    {
        "qid": 465000001,
        "question": "who founded a religion based on almighty god?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0z1b6",
                "entity_name": "Bah\u00e1'u'll\u00e1h"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01tz0x",
                "entity_name": "William Miller"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03glxv",
                "entity_name": "Joseph Bates"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c9p7h",
                "entity_name": "J. N. Andrews"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04s9n",
                "entity_name": "Muhammad in Islam"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.060nc",
                "entity_name": "Paul the Apostle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yd_",
                "entity_name": "Martin Luther"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0pwb",
                "entity_name": "Abraham"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045m1_",
                "entity_name": "Jesus Christ"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.071wp",
                "entity_name": "Saint Peter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01nxpn",
                "entity_name": "Ellen G. White"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.044mp",
                "entity_name": "Joseph Smith"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07hp5",
                "entity_name": "Thomas Cranmer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0259yp",
                "entity_name": "Oliver Cowdery"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.098zp",
                "entity_name": "John Knox"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03jp4",
                "entity_name": "Huldrych Zwingli"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "religion.founding_figure",
                    "class": "religion.founding_figure",
                    "friendly_name": "Founding Figure",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "religion.religion",
                    "class": "religion.religion",
                    "friendly_name": "Religion",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d05l6",
                    "class": "religion.deity",
                    "friendly_name": "almighty god",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "religion.founding_figure.religion_founded",
                    "friendly_name": "Religion Founded"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "religion.deity.deity_of",
                    "friendly_name": "Religion(s) That Worship This Deity"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :religion.founding_figure . \n?x1 :type.object.type :religion.religion . \nVALUES ?x2 { :m.0d05l6 } \n?x0 :religion.founding_figure.religion_founded ?x1 . \n?x2 :religion.deity.deity_of ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "religion"
        ],
        "s_expression": "(AND religion.founding_figure (JOIN religion.founding_figure.religion_founded (JOIN (R religion.deity.deity_of) m.0d05l6)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0z1b6",
                "entity_name": "Bah\u00e1'u'll\u00e1h"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01tz0x",
                "entity_name": "William Miller"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03glxv",
                "entity_name": "Joseph Bates"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03lr5f",
                "entity_name": "James Springer White"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c9p7h",
                "entity_name": "J. N. Andrews"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04s9n",
                "entity_name": "Muhammad in Islam"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01b5wx",
                "entity_name": "Sarah"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.060nc",
                "entity_name": "Paul the Apostle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yd_",
                "entity_name": "Martin Luther"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0pwb",
                "entity_name": "Abraham"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045m1_",
                "entity_name": "Jesus Christ"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.041yl",
                "entity_name": "John Calvin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.071wp",
                "entity_name": "Saint Peter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01nxpn",
                "entity_name": "Ellen G. White"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.044mp",
                "entity_name": "Joseph Smith"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07hp5",
                "entity_name": "Thomas Cranmer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0259yp",
                "entity_name": "Oliver Cowdery"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.098zp",
                "entity_name": "John Knox"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03jp4",
                "entity_name": "Huldrych Zwingli"
            }
        ]
    },
    {
        "qid": 439000200,
        "question": "what country had the largest war force?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05vz3zq",
                "entity_name": "Soviet Union"
            }
        ],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "military.military_combatant",
                    "class": "military.military_combatant",
                    "friendly_name": "Military Combatant",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "military.force_strength",
                    "class": "military.force_strength",
                    "friendly_name": "Force Strength",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "military.force_strength.combatant",
                    "friendly_name": "Combatant"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "military.force_strength.force_size",
                    "friendly_name": "Force Size"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :military.military_combatant . \n?x1 :type.object.type :military.force_strength . \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :military.military_combatant . \n?y1 :type.object.type :military.force_strength . \n?y1 :military.force_strength.combatant ?y0 . \n?y1 :military.force_strength.force_size ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :military.force_strength.combatant ?x0 . \n?x1 :military.force_strength.force_size ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "military"
        ],
        "s_expression": "(ARGMAX military.military_combatant (R military.force_strength.combatant) military.force_strength.force_size)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05vz3zq",
                "entity_name": "Soviet Union"
            }
        ]
    },
    {
        "qid": 297000402,
        "question": "how many firefighters does the new york fire department have?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "17",
                "entity_name": "17"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.fires.firefighter",
                    "class": "base.fires.firefighter",
                    "friendly_name": "Firefighter",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01q7bh",
                    "class": "base.fires.fire_department",
                    "friendly_name": "new york fire department",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.fires.firefighter.belongs_to_fire_department",
                    "friendly_name": "Belongs to fire department"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.fires.firefighter . \nVALUES ?x1 { :m.01q7bh } \n?x0 :base.fires.firefighter.belongs_to_fire_department ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(COUNT (AND base.fires.firefighter (JOIN base.fires.firefighter.belongs_to_fire_department m.01q7bh)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "17"
            }
        ]
    },
    {
        "qid": 476000402,
        "question": "what type of weapon was involved in the beslan school massacre?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05gb3y",
                "entity_name": "Gun"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.disaster2.object_used_as_weapon",
                    "class": "base.disaster2.object_used_as_weapon",
                    "friendly_name": "Thing used as weapon",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.disaster2.attack_process",
                    "class": "base.disaster2.attack_process",
                    "friendly_name": "Violence",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03st9z",
                    "class": "base.disaster2.attack",
                    "friendly_name": "beslan school massacre",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.disaster2.object_used_as_weapon.used_in_attack_s",
                    "friendly_name": "Used in attack"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.disaster2.attack_process.attack_event",
                    "friendly_name": "Attack event"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.disaster2.object_used_as_weapon . \n?x1 :type.object.type :base.disaster2.attack_process . \nVALUES ?x2 { :m.03st9z } \n?x0 :base.disaster2.object_used_as_weapon.used_in_attack_s ?x1 . \n?x1 :base.disaster2.attack_process.attack_event ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.disaster2.object_used_as_weapon (JOIN base.disaster2.object_used_as_weapon.used_in_attack_s (JOIN base.disaster2.attack_process.attack_event m.03st9z)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05gb3y",
                "entity_name": "Gun"
            }
        ]
    },
    {
        "qid": 298000000,
        "question": "what human stampede injured the most people",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c049j",
                "entity_name": "Khodynka Tragedy"
            }
        ],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.disaster2.human_stampede",
                    "class": "base.disaster2.human_stampede",
                    "friendly_name": "Human stampede",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "event.disaster.injuries",
                    "friendly_name": "Total injuries"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.disaster2.human_stampede . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :base.disaster2.human_stampede . \n?y0 :event.disaster.injuries ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :event.disaster.injuries ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "event"
        ],
        "s_expression": "(ARGMAX base.disaster2.human_stampede event.disaster.injuries)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c049j",
                "entity_name": "Khodynka Tragedy"
            }
        ]
    },
    {
        "qid": 341000301,
        "question": "ms has created which programming languages?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fp_1y",
                "entity_name": "Visual Basic"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02cv24",
                "entity_name": "QBasic"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0268yl",
                "entity_name": "J#"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dhl03",
                "entity_name": "Abstract State Machine Language"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0wrd",
                "entity_name": "Applesoft BASIC"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0137z3",
                "entity_name": "Microsoft BASIC"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.programming_language",
                    "class": "computer.programming_language",
                    "friendly_name": "Programming Language",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04sv4",
                    "class": "computer.programming_language_designer",
                    "friendly_name": "ms",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "computer.programming_language_designer.languages_designed",
                    "friendly_name": "Languages Designed"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.programming_language . \nVALUES ?x1 { :m.04sv4 } \n?x1 :computer.programming_language_designer.languages_designed ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "computer"
        ],
        "s_expression": "(AND computer.programming_language (JOIN (R computer.programming_language_designer.languages_designed) m.04sv4))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07657k",
                "entity_name": "C#"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fp_1y",
                "entity_name": "Visual Basic"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h22q",
                "entity_name": "QuickBASIC"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02cv24",
                "entity_name": "QBasic"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01dpgv",
                "entity_name": "Visual Basic .NET"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0268yl",
                "entity_name": "J#"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dhl03",
                "entity_name": "Abstract State Machine Language"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0wrd",
                "entity_name": "Applesoft BASIC"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0137z3",
                "entity_name": "Microsoft BASIC"
            }
        ]
    },
    {
        "qid": 391000301,
        "question": "what characters in theater are patterned after almighty god?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j17knv",
                "entity_name": "Father"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02nw87f",
                "entity_name": "God"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fpwjwp",
                "entity_name": "Guide #33 (God)"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "theater.theater_character",
                    "class": "theater.theater_character",
                    "friendly_name": "Theater Character",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0d05l6",
                    "class": "fictional_universe.person_in_fiction",
                    "friendly_name": "almighty god",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "fictional_universe.person_in_fiction.representations_in_fiction",
                    "friendly_name": "Representations In Fiction"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :theater.theater_character . \nVALUES ?x1 { :m.0d05l6 } \n?x1 :fictional_universe.person_in_fiction.representations_in_fiction ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "fictional_universe"
        ],
        "s_expression": "(AND theater.theater_character (JOIN (R fictional_universe.person_in_fiction.representations_in_fiction) m.0d05l6))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j17knv",
                "entity_name": "Father"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02nw87f",
                "entity_name": "God"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fpwjwp",
                "entity_name": "Guide #33 (God)"
            }
        ]
    },
    {
        "qid": 316000301,
        "question": "the english has how many different dialects?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "13",
                "entity_name": "13"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "language.language_dialect",
                    "class": "language.language_dialect",
                    "friendly_name": "Language Dialect",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02h40lc",
                    "class": "language.human_language",
                    "friendly_name": "english",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "language.language_dialect.language",
                    "friendly_name": "Language"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :language.language_dialect . \nVALUES ?x1 { :m.02h40lc } \n?x0 :language.language_dialect.language ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "language"
        ],
        "s_expression": "(COUNT (AND language.language_dialect (JOIN language.language_dialect.language m.02h40lc)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "23"
            }
        ]
    },
    {
        "qid": 289000300,
        "question": "which organization of nascar does dale earnhardt, jr. own?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0clz6l",
                "entity_name": "JR Motorsports"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.nascar.nascar_racing_organization",
                    "class": "base.nascar.nascar_racing_organization",
                    "friendly_name": "NASCAR Racing Organization",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.014x8j",
                    "class": "base.nascar.nascar_racing_organization_owner",
                    "friendly_name": "Dale Earnhardt, Jr.",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.nascar.nascar_racing_organization_owner.racing_organization_owned",
                    "friendly_name": "Racing organization owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.nascar.nascar_racing_organization . \nVALUES ?x1 { :m.014x8j } \n?x1 :base.nascar.nascar_racing_organization_owner.racing_organization_owned ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.nascar.nascar_racing_organization (JOIN (R base.nascar.nascar_racing_organization_owner.racing_organization_owned) m.014x8j))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0clz6l",
                "entity_name": "JR Motorsports"
            }
        ]
    },
    {
        "qid": 415000402,
        "question": "which blocks of the periodic table of elements includes madame curie's discoveries?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0htq0",
                "entity_name": "p-block"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0htmp",
                "entity_name": "s-block"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "chemistry.periodic_table_block",
                    "class": "chemistry.periodic_table_block",
                    "friendly_name": "Periodic table block",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "chemistry.chemical_element",
                    "class": "chemistry.chemical_element",
                    "friendly_name": "Chemical Element",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.053_d",
                    "class": "chemistry.element_discoverer",
                    "friendly_name": "madame curie",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "chemistry.chemical_element.periodic_table_block",
                    "friendly_name": "Periodic table block"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "chemistry.chemical_element.discoverer",
                    "friendly_name": "Discoverer"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :chemistry.periodic_table_block . \n?x1 :type.object.type :chemistry.chemical_element . \nVALUES ?x2 { :m.053_d } \n?x1 :chemistry.chemical_element.periodic_table_block ?x0 . \n?x1 :chemistry.chemical_element.discoverer ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "chemistry"
        ],
        "s_expression": "(AND chemistry.periodic_table_block (JOIN (R chemistry.chemical_element.periodic_table_block) (JOIN chemistry.chemical_element.discoverer m.053_d)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0htq0",
                "entity_name": "p-block"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0htmp",
                "entity_name": "s-block"
            }
        ]
    },
    {
        "qid": 497000102,
        "question": "which golf course designed by jack william nicklaus has 18 holes and the smallest par?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06vfrc",
                "entity_name": "Harbour Town Golf Links"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04xw2w9",
                "entity_name": "SouthShore Golf Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04vydng",
                "entity_name": "Valhalla Golf Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04xgcgy",
                "entity_name": "Ohio State University Scarlet Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ymzzj",
                "entity_name": "Great Bear Golf Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04z4jsp",
                "entity_name": "Walnut Cove Course"
            }
        ],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "sports.golf_course",
                    "class": "sports.golf_course",
                    "friendly_name": "Golf Course",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "18^^http://www.w3.org/2001/XMLSchema#integer",
                    "class": "type.int",
                    "friendly_name": "18",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.01k7qh",
                    "class": "sports.golf_course_designer",
                    "friendly_name": "jack william nicklaus",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "sports.golf_course.holes",
                    "friendly_name": "Number of holes"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "sports.golf_course.par",
                    "friendly_name": "Par"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "sports.golf_course.designer",
                    "friendly_name": "Designer"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :sports.golf_course . \nVALUES ?x1 { \"18\"^^<http://www.w3.org/2001/XMLSchema#integer> } \n{\nSELECT (MIN(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :sports.golf_course . \nVALUES ?y1 { \"18\"^^<http://www.w3.org/2001/XMLSchema#integer> } \nVALUES ?y3 { :m.01k7qh } \n?y0 :sports.golf_course.holes ?y1 . \n?y0 :sports.golf_course.par ?y2 . \n?y0 :sports.golf_course.designer ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\nVALUES ?x3 { :m.01k7qh } \n?x0 :sports.golf_course.holes ?x1 . \n?x0 :sports.golf_course.par ?x2 . \n?x0 :sports.golf_course.designer ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "sports"
        ],
        "s_expression": "(ARGMIN (AND sports.golf_course (AND (JOIN sports.golf_course.holes 18^^http://www.w3.org/2001/XMLSchema#integer) (JOIN sports.golf_course.designer m.01k7qh))) sports.golf_course.par)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06vfrc",
                "entity_name": "Harbour Town Golf Links"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04xw2w9",
                "entity_name": "SouthShore Golf Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04vydng",
                "entity_name": "Valhalla Golf Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04xgcgy",
                "entity_name": "Ohio State University Scarlet Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ymzzj",
                "entity_name": "Great Bear Golf Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04z4jsp",
                "entity_name": "Walnut Cove Course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04zh0kg",
                "entity_name": "Cimarron Hills Golf Course"
            }
        ]
    },
    {
        "qid": 366000402,
        "question": "what gameplay modes does starcraft brood war have?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02hjn4",
                "entity_name": "Single-player video game"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.gameplay_mode",
                    "class": "cvg.gameplay_mode",
                    "friendly_name": "Gameplay Mode",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02z4kv",
                    "class": "cvg.computer_game_expansion",
                    "friendly_name": "starcraft brood war",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "cvg.gameplay_mode.games_with_this_mode",
                    "friendly_name": "Games with this mode"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.gameplay_mode . \nVALUES ?x1 { :m.02z4kv } \n?x0 :cvg.gameplay_mode.games_with_this_mode ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "cvg"
        ],
        "s_expression": "(AND cvg.gameplay_mode (JOIN cvg.gameplay_mode.games_with_this_mode m.02z4kv))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02hjn4",
                "entity_name": "Single-player video game"
            }
        ]
    },
    {
        "qid": 436000302,
        "question": "which area unit in the si system is the largest?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jljd",
                "entity_name": "Square kilometer"
            }
        ],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "measurement_unit.area_unit",
                    "class": "measurement_unit.area_unit",
                    "friendly_name": "Unit of Area",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0c13h",
                    "class": "measurement_unit.measurement_system",
                    "friendly_name": "si system",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "measurement_unit.area_unit.area_in_square_meters",
                    "friendly_name": "Area In Square Meters"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "measurement_unit.area_unit.measurement_system",
                    "friendly_name": "Measurement System"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.area_unit . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :measurement_unit.area_unit . \nVALUES ?y2 { :m.0c13h } \n?y0 :measurement_unit.area_unit.area_in_square_meters ?y1 . \n?y0 :measurement_unit.area_unit.measurement_system ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\nVALUES ?x2 { :m.0c13h } \n?x0 :measurement_unit.area_unit.area_in_square_meters ?x1 . \n?x0 :measurement_unit.area_unit.measurement_system ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "measurement_unit"
        ],
        "s_expression": "(ARGMAX (AND measurement_unit.area_unit (JOIN measurement_unit.area_unit.measurement_system m.0c13h)) measurement_unit.area_unit.area_in_square_meters)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jljd",
                "entity_name": "Square kilometer"
            }
        ]
    },
    {
        "qid": 301000401,
        "question": "what type of martial art is tai chi categorized under?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rj0b",
                "entity_name": "Strike"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "martial_arts.martial_art_category",
                    "class": "martial_arts.martial_art_category",
                    "friendly_name": "Martial Art Category",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07k4r",
                    "class": "martial_arts.martial_art",
                    "friendly_name": "tai chi",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "martial_arts.martial_art_category.martial_arts",
                    "friendly_name": "Martial arts"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :martial_arts.martial_art_category . \nVALUES ?x1 { :m.07k4r } \n?x0 :martial_arts.martial_art_category.martial_arts ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "martial_arts"
        ],
        "s_expression": "(AND martial_arts.martial_art_category (JOIN martial_arts.martial_art_category.martial_arts m.07k4r))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rj0b",
                "entity_name": "Strike"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.039cp",
                "entity_name": "Grappling"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_yl6z",
                "entity_name": "Internal"
            }
        ]
    },
    {
        "qid": 257000201,
        "question": "who published sasusaku?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03pnvq",
                "entity_name": "Shueisha"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "comic_books.comic_book_publisher",
                    "class": "comic_books.comic_book_publisher",
                    "friendly_name": "Comic Book Publisher",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01hryy",
                    "class": "comic_books.comic_book_series",
                    "friendly_name": "sasusaku",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "comic_books.comic_book_series.publisher",
                    "friendly_name": "Publisher"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :comic_books.comic_book_publisher . \nVALUES ?x1 { :m.01hryy } \n?x1 :comic_books.comic_book_series.publisher ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "comic_books"
        ],
        "s_expression": "(AND comic_books.comic_book_publisher (JOIN (R comic_books.comic_book_series.publisher) m.01hryy))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03pnvq",
                "entity_name": "Shueisha"
            }
        ]
    },
    {
        "qid": 377000001,
        "question": "whch mexican food ingredients are not suitable for vegan",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.011l9w",
                "entity_name": "Lard"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f25w9",
                "entity_name": "Chicken meat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xg7s",
                "entity_name": "Chorizo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064y0m",
                "entity_name": "Oaxaca cheese"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.mexicanfood.mexican_food_ingredient",
                    "class": "base.mexicanfood.mexican_food_ingredient",
                    "friendly_name": "Mexican food ingredient",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07_hy",
                    "class": "food.dietary_restriction",
                    "friendly_name": "vegan",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "food.dietary_restriction.incompatible_ingredients",
                    "friendly_name": "Incompatible ingredients"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.mexicanfood.mexican_food_ingredient . \nVALUES ?x1 { :m.07_hy } \n?x1 :food.dietary_restriction.incompatible_ingredients ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "food"
        ],
        "s_expression": "(AND base.mexicanfood.mexican_food_ingredient (JOIN (R food.dietary_restriction.incompatible_ingredients) m.07_hy))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01nkt",
                "entity_name": "Cheese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0frq6",
                "entity_name": "Pork"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011l9w",
                "entity_name": "Lard"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f25w9",
                "entity_name": "Chicken meat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xg7s",
                "entity_name": "Chorizo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064y0m",
                "entity_name": "Oaxaca cheese"
            }
        ]
    },
    {
        "qid": 442000001,
        "question": "what wdi roller coaster ride accommodates the fewest number of riders?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bkxys",
                "entity_name": "Gadget's Go Coaster"
            }
        ],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.roller_coaster",
                    "class": "amusement_parks.roller_coaster",
                    "friendly_name": "Roller Coaster",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04gvyp",
                    "class": "amusement_parks.ride_designer",
                    "friendly_name": "wdi",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "amusement_parks.ride_designer.rides",
                    "friendly_name": "Rides Designed"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "amusement_parks.ride.capacity",
                    "friendly_name": "Capacity (riders per hour)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.roller_coaster . \nVALUES ?x1 { :m.04gvyp } \n{\nSELECT (MIN(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :amusement_parks.roller_coaster . \nVALUES ?y1 { :m.04gvyp } \n?y1 :amusement_parks.ride_designer.rides ?y0 . \n?y0 :amusement_parks.ride.capacity ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :amusement_parks.ride_designer.rides ?x0 . \n?x0 :amusement_parks.ride.capacity ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "amusement_parks"
        ],
        "s_expression": "(ARGMIN (AND amusement_parks.roller_coaster (JOIN (R amusement_parks.ride_designer.rides) m.04gvyp)) amusement_parks.ride.capacity)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bkxys",
                "entity_name": "Gadget's Go Coaster"
            }
        ]
    },
    {
        "qid": 359000000,
        "question": "what is the largest casino?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05mg7jt",
                "entity_name": "Empress Casino Joliet"
            }
        ],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.casinos.casino",
                    "class": "base.casinos.casino",
                    "friendly_name": "Casino",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.casinos.casino.gaming_floor_space",
                    "friendly_name": "Gaming floor space"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.casinos.casino . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :base.casinos.casino . \n?y0 :base.casinos.casino.gaming_floor_space ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :base.casinos.casino.gaming_floor_space ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(ARGMAX base.casinos.casino base.casinos.casino.gaming_floor_space)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05mg7jt",
                "entity_name": "Empress Casino Joliet"
            }
        ]
    },
    {
        "qid": 489000802,
        "question": "during which month does nyc's average rainfall level is more than 86 mm?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xx5",
                "entity_name": "February"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_ly",
                "entity_name": "January"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05lf_",
                "entity_name": "October"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04wzr",
                "entity_name": "March"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.040fv",
                "entity_name": "July"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ll3",
                "entity_name": "August"
            }
        ],
        "function": ">",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "time.month",
                    "class": "time.month",
                    "friendly_name": "Month",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "travel.travel_destination_monthly_climate",
                    "class": "travel.travel_destination_monthly_climate",
                    "friendly_name": "Travel destination monthly climate",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02_286",
                    "class": "travel.travel_destination",
                    "friendly_name": "nyc",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "86^^http://www.w3.org/2001/XMLSchema#integer",
                    "class": "type.int",
                    "friendly_name": "86",
                    "question_node": 0,
                    "function": ">"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "travel.travel_destination_monthly_climate.month",
                    "friendly_name": "Month"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "travel.travel_destination.climate",
                    "friendly_name": "Climate"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "travel.travel_destination_monthly_climate.average_rainfall_mm",
                    "friendly_name": "Average rainfall"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :time.month . \n?x1 :type.object.type :travel.travel_destination_monthly_climate . \nVALUES ?x2 { :m.02_286 } \nFILTER (?x3 > \"86\"^^<http://www.w3.org/2001/XMLSchema#integer>)\n?x1 :travel.travel_destination_monthly_climate.month ?x0 . \n?x2 :travel.travel_destination.climate ?x1 . \n?x1 :travel.travel_destination_monthly_climate.average_rainfall_mm ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "travel"
        ],
        "s_expression": "(AND time.month (JOIN (R travel.travel_destination_monthly_climate.month) (AND (JOIN (R travel.travel_destination.climate) m.02_286) (gt travel.travel_destination_monthly_climate.average_rainfall_mm 86^^http://www.w3.org/2001/XMLSchema#integer))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xx5",
                "entity_name": "February"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_ly",
                "entity_name": "January"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05lf_",
                "entity_name": "October"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04wzr",
                "entity_name": "March"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.040fv",
                "entity_name": "July"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ll3",
                "entity_name": "August"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.028kb",
                "entity_name": "December"
            }
        ]
    },
    {
        "qid": 404000500,
        "question": "critically endangered are what species?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f89mk",
                "entity_name": "Cuban kite"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.conservation.protected_species",
                    "class": "base.conservation.protected_species",
                    "friendly_name": "Protected Species",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.conservation.protected_species_status",
                    "class": "base.conservation.protected_species_status",
                    "friendly_name": "Protected Species Status",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0cgnb7",
                    "class": "base.conservation.conservation_status_designation",
                    "friendly_name": "Critically Endangered",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.conservation.protected_species_status.protected_species",
                    "friendly_name": "Protected Species"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.conservation.protected_species_status.status_designation",
                    "friendly_name": "Status Designation"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.conservation.protected_species . \n?x1 :type.object.type :base.conservation.protected_species_status . \nVALUES ?x2 { :m.0cgnb7 } \n?x1 :base.conservation.protected_species_status.protected_species ?x0 . \n?x1 :base.conservation.protected_species_status.status_designation ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.conservation.protected_species (JOIN (R base.conservation.protected_species_status.protected_species) (JOIN base.conservation.protected_species_status.status_designation m.0cgnb7)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f89mk",
                "entity_name": "Cuban kite"
            }
        ]
    },
    {
        "qid": 485000200,
        "question": "who made the discovery of both the oxygen and some halogen element?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g68n",
                "entity_name": "Carl Wilhelm Scheele"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "chemistry.element_discoverer",
                    "class": "chemistry.element_discoverer",
                    "friendly_name": "Chemical Element Discoverer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "chemistry.chemical_element",
                    "class": "chemistry.chemical_element",
                    "friendly_name": "Chemical Element",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.025s6bf",
                    "class": "chemistry.chemical_element",
                    "friendly_name": "Oxygen",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.03gcp",
                    "class": "chemistry.chemical_series",
                    "friendly_name": "Halogen",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "chemistry.chemical_element.discoverer",
                    "friendly_name": "Discoverer"
                },
                {
                    "start": 3,
                    "end": 1,
                    "relation": "chemistry.chemical_series.elements",
                    "friendly_name": "Elements"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "chemistry.chemical_element.discoverer",
                    "friendly_name": "Discoverer"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :chemistry.element_discoverer . \n?x1 :type.object.type :chemistry.chemical_element . \nVALUES ?x2 { :m.025s6bf } \nVALUES ?x3 { :m.03gcp } \n?x1 :chemistry.chemical_element.discoverer ?x0 . \n?x3 :chemistry.chemical_series.elements ?x1 . \n?x2 :chemistry.chemical_element.discoverer ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "chemistry"
        ],
        "s_expression": "(AND chemistry.element_discoverer (AND (JOIN (R chemistry.chemical_element.discoverer) (JOIN (R chemistry.chemical_series.elements) m.03gcp)) (JOIN (R chemistry.chemical_element.discoverer) m.025s6bf)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g68n",
                "entity_name": "Carl Wilhelm Scheele"
            }
        ]
    },
    {
        "qid": 387000000,
        "question": "what scope of organization does federal bureau of investigation have?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09c7w0",
                "entity_name": "United States of America"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "organization.organization_scope",
                    "class": "organization.organization_scope",
                    "friendly_name": "Organization scope",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02_1m",
                    "class": "government.government_agency",
                    "friendly_name": "Federal Bureau of Investigation",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "organization.organization.geographic_scope",
                    "friendly_name": "Geographic scope"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :organization.organization_scope . \nVALUES ?x1 { :m.02_1m } \n?x1 :organization.organization.geographic_scope ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "organization"
        ],
        "s_expression": "(AND organization.organization_scope (JOIN (R organization.organization.geographic_scope) m.02_1m))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09c7w0",
                "entity_name": "United States of America"
            }
        ]
    },
    {
        "qid": 496000200,
        "question": "for the casinos owned by the same person as bellagio, which one is the smallest?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0937y7",
                "entity_name": "Nevada Landing Hotel and Casino"
            }
        ],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.casinos.casino",
                    "class": "base.casinos.casino",
                    "friendly_name": "Casino",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.casinos.casino_owner",
                    "class": "base.casinos.casino_owner",
                    "friendly_name": "Casino owner",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.033bxs",
                    "class": "base.casinos.casino",
                    "friendly_name": "Bellagio",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.casinos.casino_owner.casinos_owned",
                    "friendly_name": "Casinos owned"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "base.casinos.casino.rooms",
                    "friendly_name": "Rooms"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "base.casinos.casino_owner.casinos_owned",
                    "friendly_name": "Casinos owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.casinos.casino . \n?x1 :type.object.type :base.casinos.casino_owner . \n{\nSELECT (MIN(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :base.casinos.casino . \n?y1 :type.object.type :base.casinos.casino_owner . \nVALUES ?y3 { :m.033bxs } \n?y1 :base.casinos.casino_owner.casinos_owned ?y0 . \n?y0 :base.casinos.casino.rooms ?y2 . \n?y1 :base.casinos.casino_owner.casinos_owned ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\nVALUES ?x3 { :m.033bxs } \n?x1 :base.casinos.casino_owner.casinos_owned ?x0 . \n?x0 :base.casinos.casino.rooms ?x2 . \n?x1 :base.casinos.casino_owner.casinos_owned ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(ARGMIN (AND base.casinos.casino (JOIN (R base.casinos.casino_owner.casinos_owned) (JOIN base.casinos.casino_owner.casinos_owned m.033bxs))) base.casinos.casino.rooms)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0937y7",
                "entity_name": "Nevada Landing Hotel and Casino"
            }
        ]
    },
    {
        "qid": 331000300,
        "question": "what is the name for the brightest celestial object in the universe?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cg4fz",
                "entity_name": "4U 0142+61"
            }
        ],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.celestial_object",
                    "class": "astronomy.celestial_object",
                    "friendly_name": "Celestial Object",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.celestial_object.magnitude",
                    "friendly_name": "Apparent Magnitude"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.celestial_object . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :astronomy.celestial_object . \n?y0 :astronomy.celestial_object.magnitude ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :astronomy.celestial_object.magnitude ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "(ARGMAX astronomy.celestial_object astronomy.celestial_object.magnitude)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cg4fz",
                "entity_name": "4U 0142+61"
            }
        ]
    },
    {
        "qid": 434000001,
        "question": "what was mj inducted into the hall of fame as?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.051rbly",
                "entity_name": "Performers"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "award.hall_of_fame_induction_category",
                    "class": "award.hall_of_fame_induction_category",
                    "friendly_name": "Hall of fame induction category",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "award.hall_of_fame_induction",
                    "class": "award.hall_of_fame_induction",
                    "friendly_name": "Hall of fame induction",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.09889g",
                    "class": "award.hall_of_fame_inductee",
                    "friendly_name": "mj",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "award.hall_of_fame_inductee.hall_of_fame_inductions",
                    "friendly_name": "Hall of fame inductions"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "award.hall_of_fame_induction.category",
                    "friendly_name": "Category"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :award.hall_of_fame_induction_category . \n?x1 :type.object.type :award.hall_of_fame_induction . \nVALUES ?x2 { :m.09889g } \n?x2 :award.hall_of_fame_inductee.hall_of_fame_inductions ?x1 . \n?x1 :award.hall_of_fame_induction.category ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "award"
        ],
        "s_expression": "(AND award.hall_of_fame_induction_category (JOIN (R award.hall_of_fame_induction.category) (JOIN (R award.hall_of_fame_inductee.hall_of_fame_inductions) m.09889g)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.051rbly",
                "entity_name": "Performers"
            }
        ]
    },
    {
        "qid": 354000202,
        "question": "what competitions are held in nyc?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yhp9s",
                "entity_name": "Miss India Worldwide 1996"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0by1f9w",
                "entity_name": "Miss USA 1973"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bxzv0v",
                "entity_name": "Miss USA 1971"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yn8mg",
                "entity_name": "Miss India Worldwide 1994"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b75dnh",
                "entity_name": "Miss Dominican Republic US 2009"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "award.competition",
                    "class": "award.competition",
                    "friendly_name": "Competition",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02_286",
                    "class": "location.dated_location",
                    "friendly_name": "nyc",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.events",
                    "friendly_name": "Events"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :award.competition . \nVALUES ?x1 { :m.02_286 } \n?x1 :location.location.events ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "location"
        ],
        "s_expression": "(AND award.competition (JOIN (R location.location.events) m.02_286))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yhp9s",
                "entity_name": "Miss India Worldwide 1996"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0by1f9w",
                "entity_name": "Miss USA 1973"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bxzv0v",
                "entity_name": "Miss USA 1971"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yn8mg",
                "entity_name": "Miss India Worldwide 1994"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b75dnh",
                "entity_name": "Miss Dominican Republic US 2009"
            }
        ]
    },
    {
        "qid": 435000200,
        "question": "what is the unit for magnetic field strength in the measurement system using kelvin for temperature?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02sj414",
                "entity_name": "Ampere per metre"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "measurement_unit.magnetic_field_strength_unit",
                    "class": "measurement_unit.magnetic_field_strength_unit",
                    "friendly_name": "Unit of Magnetic Field Strength",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.047f7",
                    "class": "measurement_unit.temperature_unit",
                    "friendly_name": "Kelvin",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "measurement_unit.measurement_system",
                    "class": "measurement_unit.measurement_system",
                    "friendly_name": "Measurement System",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "measurement_unit.measurement_system.temperature_units",
                    "friendly_name": "Temperature Units"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "measurement_unit.measurement_system.magnetic_field_strength_units",
                    "friendly_name": "Magnetic Field Strength Units"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.magnetic_field_strength_unit . \nVALUES ?x1 { :m.047f7 } \n?x2 :type.object.type :measurement_unit.measurement_system . \n?x2 :measurement_unit.measurement_system.temperature_units ?x1 . \n?x2 :measurement_unit.measurement_system.magnetic_field_strength_units ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "measurement_unit"
        ],
        "s_expression": "(AND measurement_unit.magnetic_field_strength_unit (JOIN (R measurement_unit.measurement_system.magnetic_field_strength_units) (JOIN measurement_unit.measurement_system.temperature_units m.047f7)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02sj414",
                "entity_name": "Ampere per metre"
            }
        ]
    },
    {
        "qid": 297000101,
        "question": "how many firefighters are employed with the fdny?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "17",
                "entity_name": "17"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.fires.firefighter",
                    "class": "base.fires.firefighter",
                    "friendly_name": "Firefighter",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01q7bh",
                    "class": "base.fires.fire_department",
                    "friendly_name": "fdny",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.fires.firefighter.belongs_to_fire_department",
                    "friendly_name": "Belongs to fire department"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.fires.firefighter . \nVALUES ?x1 { :m.01q7bh } \n?x0 :base.fires.firefighter.belongs_to_fire_department ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(COUNT (AND base.fires.firefighter (JOIN base.fires.firefighter.belongs_to_fire_department m.01q7bh)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "17"
            }
        ]
    },
    {
        "qid": 401000301,
        "question": "what school category does davidson belong to?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01rs41",
                "entity_name": "Private school"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04qbv",
                "entity_name": "Liberal arts college"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "education.school_category",
                    "class": "education.school_category",
                    "friendly_name": "School category",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02pdhz",
                    "class": "education.university",
                    "friendly_name": "davidson",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "education.school_category.schools_of_this_kind",
                    "friendly_name": "Schools of this kind"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :education.school_category . \nVALUES ?x1 { :m.02pdhz } \n?x0 :education.school_category.schools_of_this_kind ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "education"
        ],
        "s_expression": "(AND education.school_category (JOIN education.school_category.schools_of_this_kind m.02pdhz))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01rs41",
                "entity_name": "Private school"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04qbv",
                "entity_name": "Liberal arts college"
            }
        ]
    },
    {
        "qid": 442000602,
        "question": "what's the lowest-capacity roller coaster of all the ones created by disney imagineering?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bkxys",
                "entity_name": "Gadget's Go Coaster"
            }
        ],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.roller_coaster",
                    "class": "amusement_parks.roller_coaster",
                    "friendly_name": "Roller Coaster",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04gvyp",
                    "class": "amusement_parks.ride_designer",
                    "friendly_name": "disney imagineering",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "amusement_parks.ride_designer.rides",
                    "friendly_name": "Rides Designed"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "amusement_parks.ride.capacity",
                    "friendly_name": "Capacity (riders per hour)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.roller_coaster . \nVALUES ?x1 { :m.04gvyp } \n{\nSELECT (MIN(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :amusement_parks.roller_coaster . \nVALUES ?y1 { :m.04gvyp } \n?y1 :amusement_parks.ride_designer.rides ?y0 . \n?y0 :amusement_parks.ride.capacity ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :amusement_parks.ride_designer.rides ?x0 . \n?x0 :amusement_parks.ride.capacity ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "amusement_parks"
        ],
        "s_expression": "(ARGMIN (AND amusement_parks.roller_coaster (JOIN (R amusement_parks.ride_designer.rides) m.04gvyp)) amusement_parks.ride.capacity)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bkxys",
                "entity_name": "Gadget's Go Coaster"
            }
        ]
    },
    {
        "qid": 257000101,
        "question": "what is the publishing company for sasusaku?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03pnvq",
                "entity_name": "Shueisha"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "comic_books.comic_book_publisher",
                    "class": "comic_books.comic_book_publisher",
                    "friendly_name": "Comic Book Publisher",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01hryy",
                    "class": "comic_books.comic_book_series",
                    "friendly_name": "sasusaku",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "comic_books.comic_book_series.publisher",
                    "friendly_name": "Publisher"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :comic_books.comic_book_publisher . \nVALUES ?x1 { :m.01hryy } \n?x1 :comic_books.comic_book_series.publisher ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "comic_books"
        ],
        "s_expression": "(AND comic_books.comic_book_publisher (JOIN (R comic_books.comic_book_series.publisher) m.01hryy))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03pnvq",
                "entity_name": "Shueisha"
            }
        ]
    },
    {
        "qid": 372000302,
        "question": "to which fields is arc paying attention?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0282n5",
                "entity_name": "Humanitarian aid"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.charities.charitable_field",
                    "class": "base.charities.charitable_field",
                    "friendly_name": "Charitable field",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0by8vb",
                    "class": "base.charities.charity",
                    "friendly_name": "arc",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.charities.charitable_field.charitable_organizations",
                    "friendly_name": "Charitable organizations"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.charities.charitable_field . \nVALUES ?x1 { :m.0by8vb } \n?x0 :base.charities.charitable_field.charitable_organizations ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.charities.charitable_field (JOIN base.charities.charitable_field.charitable_organizations m.0by8vb))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0282n5",
                "entity_name": "Humanitarian aid"
            }
        ]
    },
    {
        "qid": 456000000,
        "question": "which composers have collaborated with george balanchine in a ballet?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06wvj",
                "entity_name": "Sergei Prokofiev"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09h_q",
                "entity_name": "Igor Stravinsky"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.ballet.ballet_composer",
                    "class": "base.ballet.ballet_composer",
                    "friendly_name": "Ballet composer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.ballet.ballet",
                    "class": "base.ballet.ballet",
                    "friendly_name": "Ballet",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01dn0t",
                    "class": "base.ballet.choreographer",
                    "friendly_name": "George Balanchine",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.ballet.ballet_composer.ballets_composed",
                    "friendly_name": "Ballets composed"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.ballet.choreographer.ballets_choreographed",
                    "friendly_name": "Ballets choreographed"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.ballet.ballet_composer . \n?x1 :type.object.type :base.ballet.ballet . \nVALUES ?x2 { :m.01dn0t } \n?x0 :base.ballet.ballet_composer.ballets_composed ?x1 . \n?x2 :base.ballet.choreographer.ballets_choreographed ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.ballet.ballet_composer (JOIN base.ballet.ballet_composer.ballets_composed (JOIN (R base.ballet.choreographer.ballets_choreographed) m.01dn0t)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06wvj",
                "entity_name": "Sergei Prokofiev"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09h_q",
                "entity_name": "Igor Stravinsky"
            }
        ]
    },
    {
        "qid": 276000000,
        "question": "which file format is multiple-image network graphics extended from?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06279",
                "entity_name": "Portable Network Graphics"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.file_format",
                    "class": "computer.file_format",
                    "friendly_name": "File Format",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.052fr",
                    "class": "computer.file_format",
                    "friendly_name": "Multiple-image Network Graphics",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "computer.file_format.extended_from",
                    "friendly_name": "Extended From"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.file_format . \nVALUES ?x1 { :m.052fr } \n?x1 :computer.file_format.extended_from ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "computer"
        ],
        "s_expression": "(AND computer.file_format (JOIN (R computer.file_format.extended_from) m.052fr))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06279",
                "entity_name": "Portable Network Graphics"
            }
        ]
    },
    {
        "qid": 340000101,
        "question": "what are all the cats breeds in existence?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0132wl",
                "entity_name": "Japanese Bobtail"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017fr0",
                "entity_name": "Balinese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09747c",
                "entity_name": "Abyssinian cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j60_",
                "entity_name": "American Curl"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012cc2",
                "entity_name": "Russian Blue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012k5z",
                "entity_name": "Munchkin cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012lnv",
                "entity_name": "Himalayan cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012ltm",
                "entity_name": "Birman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0132vv",
                "entity_name": "American Bobtail"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01rn4d",
                "entity_name": "Korat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027rfv_",
                "entity_name": "Cheetoh"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zg0m",
                "entity_name": "Chartreux"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zh3c",
                "entity_name": "Javanese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bx2rr",
                "entity_name": "Donskoy cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03c_kl",
                "entity_name": "Snowshoe cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03c_ndy",
                "entity_name": "Aegean cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04049n",
                "entity_name": "Sokoke"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt7yc",
                "entity_name": "Exotic Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt82m",
                "entity_name": "Japanese Bobtail Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt82s",
                "entity_name": "Munchkin Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt837",
                "entity_name": "Shorthair Curl"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt83w",
                "entity_name": "Minskin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.068m4y",
                "entity_name": "Savannah cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07451s",
                "entity_name": "American Wirehair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.081lg8",
                "entity_name": "Peterbald"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cb37",
                "entity_name": "British Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dpc0v",
                "entity_name": "German Rex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jc3n",
                "entity_name": "Exotic Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zkf9",
                "entity_name": "Turkish Angora"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012jg5",
                "entity_name": "Manx cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012jgm",
                "entity_name": "Cymric cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012jh9",
                "entity_name": "Scottish Fold"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zfy2",
                "entity_name": "Bombay cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zjz9",
                "entity_name": "Oriental Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zkbf",
                "entity_name": "Siberian cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_27x",
                "entity_name": "Chausie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.043lfs6",
                "entity_name": "Ukrainian Levkoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.049dpf",
                "entity_name": "Ojos Azules"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt82y",
                "entity_name": "Munchkin Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05q5v1v",
                "entity_name": "Kurilian Bobtail"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.086tnk",
                "entity_name": "Serengeti cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0891tx",
                "entity_name": "Toyger"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.089hrx",
                "entity_name": "Ussuri"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09b5_s",
                "entity_name": "Asian Semi-longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0djkp8",
                "entity_name": "LaPerm"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gzxy",
                "entity_name": "Bengal cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h4sv",
                "entity_name": "Selkirk Rex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j46v",
                "entity_name": "Persian cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j60j",
                "entity_name": "Maine Coon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt83d",
                "entity_name": "European Burmese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zfvv",
                "entity_name": "American Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02w7c7",
                "entity_name": "Ragdoll"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.petbreeds.cat_breed",
                    "class": "base.petbreeds.cat_breed",
                    "friendly_name": "Cat Breed",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01yrx",
                    "class": "biology.domesticated_animal",
                    "friendly_name": "cats",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "biology.domesticated_animal.breeds",
                    "friendly_name": "Breeds"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.petbreeds.cat_breed . \nVALUES ?x1 { :m.01yrx } \n?x1 :biology.domesticated_animal.breeds ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "biology"
        ],
        "s_expression": "(AND base.petbreeds.cat_breed (JOIN (R biology.domesticated_animal.breeds) m.01yrx))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0132wl",
                "entity_name": "Japanese Bobtail"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ttd9",
                "entity_name": "Pixie-bob"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017fr0",
                "entity_name": "Balinese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09747c",
                "entity_name": "Abyssinian cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j60_",
                "entity_name": "American Curl"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012cc2",
                "entity_name": "Russian Blue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012k5z",
                "entity_name": "Munchkin cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012k6q",
                "entity_name": "Ocicat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012lnv",
                "entity_name": "Himalayan cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012lr2",
                "entity_name": "Devon Rex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012ltm",
                "entity_name": "Birman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012zzh",
                "entity_name": "Somali cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0132vv",
                "entity_name": "American Bobtail"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017fsk",
                "entity_name": "Norwegian Forest cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01mvkt",
                "entity_name": "Burmese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01rn4d",
                "entity_name": "Korat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027rfv_",
                "entity_name": "Cheetoh"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qlzz",
                "entity_name": "Havana Brown"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02wt_k",
                "entity_name": "California Spangled"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zg0m",
                "entity_name": "Chartreux"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zh3c",
                "entity_name": "Javanese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zkd7",
                "entity_name": "Singapura cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bx2rr",
                "entity_name": "Donskoy cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03c_kl",
                "entity_name": "Snowshoe cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03c_ndy",
                "entity_name": "Aegean cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04049n",
                "entity_name": "Sokoke"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt7yc",
                "entity_name": "Exotic Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt82m",
                "entity_name": "Japanese Bobtail Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt82s",
                "entity_name": "Munchkin Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt837",
                "entity_name": "Shorthair Curl"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt83w",
                "entity_name": "Minskin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.068m4y",
                "entity_name": "Savannah cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07451s",
                "entity_name": "American Wirehair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07nnhk",
                "entity_name": "Oriental Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.081lg8",
                "entity_name": "Peterbald"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08b02s",
                "entity_name": "British Semi-longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08nhst",
                "entity_name": "Ragamuffin cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cb37",
                "entity_name": "British Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dpc0v",
                "entity_name": "German Rex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jc3n",
                "entity_name": "Exotic Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zkf9",
                "entity_name": "Turkish Angora"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012jg5",
                "entity_name": "Manx cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012jgm",
                "entity_name": "Cymric cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012jh9",
                "entity_name": "Scottish Fold"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017fv0",
                "entity_name": "Nebelung"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0229mb",
                "entity_name": "Egyptian Mau"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02s4ff",
                "entity_name": "Tonkinese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zfy2",
                "entity_name": "Bombay cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zjz9",
                "entity_name": "Oriental Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zkbf",
                "entity_name": "Siberian cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_27x",
                "entity_name": "Chausie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.043lfs6",
                "entity_name": "Ukrainian Levkoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.049dpf",
                "entity_name": "Ojos Azules"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04c41_",
                "entity_name": "European Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt82y",
                "entity_name": "Munchkin Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt832",
                "entity_name": "Ruffle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04myxc",
                "entity_name": "Burmilla"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05q5v1v",
                "entity_name": "Kurilian Bobtail"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.086tnk",
                "entity_name": "Serengeti cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0891tx",
                "entity_name": "Toyger"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.089hrx",
                "entity_name": "Ussuri"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09b5_s",
                "entity_name": "Asian Semi-longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0djkp8",
                "entity_name": "LaPerm"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g_3r",
                "entity_name": "Siamese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gzxy",
                "entity_name": "Bengal cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h4sv",
                "entity_name": "Selkirk Rex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h5fb",
                "entity_name": "Sphynx cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j45k",
                "entity_name": "Turkish Van"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j46v",
                "entity_name": "Persian cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j60j",
                "entity_name": "Maine Coon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt83d",
                "entity_name": "European Burmese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zfvv",
                "entity_name": "American Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02w7c7",
                "entity_name": "Ragdoll"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h05_",
                "entity_name": "Cornish Rex"
            }
        ]
    },
    {
        "qid": 455000301,
        "question": "who can build bipropellant rocket engines with 2361800 n sea level trust or higher?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01vhl6",
                "entity_name": "Rocketdyne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p_3s6",
                "entity_name": "NPO Energomash"
            }
        ],
        "function": ">=",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine_manufacturer",
                    "class": "spaceflight.rocket_engine_manufacturer",
                    "friendly_name": "Rocket engine manufacturer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "spaceflight.bipropellant_rocket_engine",
                    "class": "spaceflight.bipropellant_rocket_engine",
                    "friendly_name": "Bipropellant rocket engine",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "2.3618e+06^^http://www.w3.org/2001/XMLSchema#double",
                    "class": "type.float",
                    "friendly_name": "2.3618e+06",
                    "question_node": 0,
                    "function": ">="
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "spaceflight.rocket_engine_manufacturer.rocket_engines",
                    "friendly_name": "Rocket engines"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "spaceflight.rocket_engine.thrust_sea_level",
                    "friendly_name": "Thrust (sea level)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.rocket_engine_manufacturer . \n?x1 :type.object.type :spaceflight.bipropellant_rocket_engine . \nFILTER (?x2 >= \"2.3618e+06\"^^<http://www.w3.org/2001/XMLSchema#double>)\n?x0 :spaceflight.rocket_engine_manufacturer.rocket_engines ?x1 . \n?x1 :spaceflight.rocket_engine.thrust_sea_level ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "spaceflight"
        ],
        "s_expression": "(AND spaceflight.rocket_engine_manufacturer (JOIN spaceflight.rocket_engine_manufacturer.rocket_engines (ge spaceflight.rocket_engine.thrust_sea_level 2.3618e+06^^http://www.w3.org/2001/XMLSchema#double)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01vhl6",
                "entity_name": "Rocketdyne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p_3s6",
                "entity_name": "NPO Energomash"
            }
        ]
    },
    {
        "qid": 268000001,
        "question": "what ciphers are created by bacon?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.056d01",
                "entity_name": "Bacon's cipher"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.cryptography.cipher",
                    "class": "base.cryptography.cipher",
                    "friendly_name": "Cipher",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.030dr",
                    "class": "base.cryptography.cryptographer",
                    "friendly_name": "bacon",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.cryptography.cryptographer.ciphers_created",
                    "friendly_name": "Ciphers created"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.cryptography.cipher . \nVALUES ?x1 { :m.030dr } \n?x1 :base.cryptography.cryptographer.ciphers_created ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.cryptography.cipher (JOIN (R base.cryptography.cryptographer.ciphers_created) m.030dr))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.056d01",
                "entity_name": "Bacon's cipher"
            }
        ]
    },
    {
        "qid": 322000302,
        "question": "how many annual editions are there of harley davidson nightster?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2",
                "entity_name": "2"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.motorcycle.motorcycle_model_year",
                    "class": "base.motorcycle.motorcycle_model_year",
                    "friendly_name": "Motorcycle model year",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03hq_72",
                    "class": "base.motorcycle.motorcycle_series",
                    "friendly_name": "harley davidson nightster",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.motorcycle.motorcycle_series.model_year_s",
                    "friendly_name": "Model year(s)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.motorcycle.motorcycle_model_year . \nVALUES ?x1 { :m.03hq_72 } \n?x1 :base.motorcycle.motorcycle_series.model_year_s ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(COUNT (AND base.motorcycle.motorcycle_model_year (JOIN (R base.motorcycle.motorcycle_series.model_year_s) m.03hq_72)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ]
    },
    {
        "qid": 292000600,
        "question": "armistice of cassibileended which war?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.081pw",
                "entity_name": "World War II"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.morelaw.war",
                    "class": "base.morelaw.war",
                    "friendly_name": "War",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08jn28",
                    "class": "base.morelaw.peace_treaty",
                    "friendly_name": "Armistice of Cassibile",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.morelaw.ceasefire.w",
                    "friendly_name": "War"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.morelaw.war . \nVALUES ?x1 { :m.08jn28 } \n?x1 :base.morelaw.ceasefire.w ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.morelaw.war (JOIN (R base.morelaw.ceasefire.w) m.08jn28))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.081pw",
                "entity_name": "World War II"
            }
        ]
    },
    {
        "qid": 314000102,
        "question": "how many kinds of digital camera are produced by hewlett packard?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5",
                "entity_name": "5"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "digicams.digital_camera",
                    "class": "digicams.digital_camera",
                    "friendly_name": "Digital Camera",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03mnk",
                    "class": "digicams.digital_camera_manufacturer",
                    "friendly_name": "hewlett packard",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "digicams.digital_camera_manufacturer.cameras",
                    "friendly_name": "Cameras"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :digicams.digital_camera . \nVALUES ?x1 { :m.03mnk } \n?x1 :digicams.digital_camera_manufacturer.cameras ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "digicams"
        ],
        "s_expression": "(COUNT (AND digicams.digital_camera (JOIN (R digicams.digital_camera_manufacturer.cameras) m.03mnk)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "7"
            }
        ]
    },
    {
        "qid": 459000300,
        "question": "ronald reagan received an injury, what was that injury?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05pzr_",
                "entity_name": "Hip fracture"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.disaster2.type_of_injury",
                    "class": "base.disaster2.type_of_injury",
                    "friendly_name": "Type of injury",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.disaster2.injury",
                    "class": "base.disaster2.injury",
                    "friendly_name": "Injury",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.06c0j",
                    "class": "base.disaster2.injured_person",
                    "friendly_name": "Ronald Reagan",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.disaster2.type_of_injury.people_with_this_injury",
                    "friendly_name": "People with this injury"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.disaster2.injury.injured_person",
                    "friendly_name": "Injured person"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.disaster2.type_of_injury . \n?x1 :type.object.type :base.disaster2.injury . \nVALUES ?x2 { :m.06c0j } \n?x0 :base.disaster2.type_of_injury.people_with_this_injury ?x1 . \n?x1 :base.disaster2.injury.injured_person ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.disaster2.type_of_injury (JOIN base.disaster2.type_of_injury.people_with_this_injury (JOIN base.disaster2.injury.injured_person m.06c0j)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01q1sz",
                "entity_name": "Pneumothorax"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05pzr_",
                "entity_name": "Hip fracture"
            }
        ]
    },
    {
        "qid": 379000202,
        "question": "find visual artists whose nationality is the united states.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.013_05",
                "entity_name": "Robert Smithson"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.015m45",
                "entity_name": "Diane Arbus"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0295sg",
                "entity_name": "Donald Judd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ktf7",
                "entity_name": "Richard Serra"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03dpcd",
                "entity_name": "William Eggleston"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074g02",
                "entity_name": "Cindy Sherman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08lx7n",
                "entity_name": "Sherrie Levine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07js9s",
                "entity_name": "Eva Hesse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gcjf",
                "entity_name": "Jasper Johns"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01zgr1",
                "entity_name": "Claes Oldenburg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kc6",
                "entity_name": "Andy Warhol"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03pytb",
                "entity_name": "George Bellows"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01t0_3",
                "entity_name": "Judy Chicago"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01jlc2",
                "entity_name": "Barnett Newman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04510",
                "entity_name": "Jackson Pollock"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0yd4t",
                "entity_name": "Mark Rothko"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023tsk",
                "entity_name": "Thomas Cole"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqch",
                "entity_name": "Marcel Duchamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0533_",
                "entity_name": "Mary Cassatt"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jmc03",
                "entity_name": "Sarah Choate Sears"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.smarthistory.visual_artist",
                    "class": "base.smarthistory.visual_artist",
                    "friendly_name": "Visual Artist",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.09c7w0",
                    "class": "base.unitednations.united_nations_member_state",
                    "friendly_name": "united states",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.person.nationality",
                    "friendly_name": "Country of nationality"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.smarthistory.visual_artist . \nVALUES ?x1 { :m.09c7w0 } \n?x0 :people.person.nationality ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "people"
        ],
        "s_expression": "(AND base.smarthistory.visual_artist (JOIN people.person.nationality m.09c7w0))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.013_05",
                "entity_name": "Robert Smithson"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.015m45",
                "entity_name": "Diane Arbus"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0295sg",
                "entity_name": "Donald Judd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ktf7",
                "entity_name": "Richard Serra"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03dpcd",
                "entity_name": "William Eggleston"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074g02",
                "entity_name": "Cindy Sherman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08lx7n",
                "entity_name": "Sherrie Levine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02c5bp",
                "entity_name": "Willem de Kooning"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07js9s",
                "entity_name": "Eva Hesse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gcjf",
                "entity_name": "Jasper Johns"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01zgr1",
                "entity_name": "Claes Oldenburg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kc6",
                "entity_name": "Andy Warhol"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03pytb",
                "entity_name": "George Bellows"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01t0_3",
                "entity_name": "Judy Chicago"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01jlc2",
                "entity_name": "Barnett Newman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04510",
                "entity_name": "Jackson Pollock"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0yd4t",
                "entity_name": "Mark Rothko"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023tsk",
                "entity_name": "Thomas Cole"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gcgd",
                "entity_name": "Roy Lichtenstein"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqch",
                "entity_name": "Marcel Duchamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0533_",
                "entity_name": "Mary Cassatt"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jmc03",
                "entity_name": "Sarah Choate Sears"
            }
        ]
    },
    {
        "qid": 345000000,
        "question": "who wrote guitar hero iii: legends of rock?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.035tl3",
                "entity_name": "Neversoft"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.067p42",
                "entity_name": "RedOctane"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051pnv",
                "entity_name": "Aspyr"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09v9mr",
                "entity_name": "Vicarious Visions"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p_nb4",
                "entity_name": "Budcat Creations"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.cvg_developer",
                    "class": "cvg.cvg_developer",
                    "friendly_name": "Video Game Developer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.025vn5m",
                    "class": "cvg.musical_game",
                    "friendly_name": "Guitar Hero III: Legends of Rock",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "cvg.computer_videogame.developer",
                    "friendly_name": "Developer"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.cvg_developer . \nVALUES ?x1 { :m.025vn5m } \n?x1 :cvg.computer_videogame.developer ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "cvg"
        ],
        "s_expression": "(AND cvg.cvg_developer (JOIN (R cvg.computer_videogame.developer) m.025vn5m))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.035tl3",
                "entity_name": "Neversoft"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.067p42",
                "entity_name": "RedOctane"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051pnv",
                "entity_name": "Aspyr"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09v9mr",
                "entity_name": "Vicarious Visions"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p_nb4",
                "entity_name": "Budcat Creations"
            }
        ]
    },
    {
        "qid": 424000101,
        "question": "find the endorsers for toyota's products.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r7ht6",
                "entity_name": "Greg Lutzka"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.product_endorser",
                    "class": "business.product_endorser",
                    "friendly_name": "Product Endorser",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "business.product_endorsement",
                    "class": "business.product_endorsement",
                    "friendly_name": "Product Endorsement",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.07mb6",
                    "class": "business.product_endorsee",
                    "friendly_name": "toyota",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "business.product_endorsee.endorsements",
                    "friendly_name": "Endorsements"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "business.product_endorsement.endorser",
                    "friendly_name": "Endorser"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.product_endorser . \n?x1 :type.object.type :business.product_endorsement . \nVALUES ?x2 { :m.07mb6 } \n?x2 :business.product_endorsee.endorsements ?x1 . \n?x1 :business.product_endorsement.endorser ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "business"
        ],
        "s_expression": "(AND business.product_endorser (JOIN (R business.product_endorsement.endorser) (JOIN (R business.product_endorsee.endorsements) m.07mb6)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r7ht6",
                "entity_name": "Greg Lutzka"
            }
        ]
    },
    {
        "qid": 326000000,
        "question": "how many different releases of the album get yer ya-ya's out! are there?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "11",
                "entity_name": "11"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "music.release",
                    "class": "music.release",
                    "friendly_name": "Musical Release",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01hmywl",
                    "class": "music.live_album",
                    "friendly_name": "Get Yer Ya-Ya's Out!",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.album.releases",
                    "friendly_name": "Releases"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :music.release . \nVALUES ?x1 { :m.01hmywl } \n?x1 :music.album.releases ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "music"
        ],
        "s_expression": "(COUNT (AND music.release (JOIN (R music.album.releases) m.01hmywl)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "11"
            }
        ]
    },
    {
        "qid": 438000300,
        "question": "what is the number of other video games credited to the creator of rock band 2?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "4",
                "entity_name": "4"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.computer_videogame",
                    "class": "cvg.computer_videogame",
                    "friendly_name": "Video game",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "cvg.cvg_designer",
                    "class": "cvg.cvg_designer",
                    "friendly_name": "Video Game Designer",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.04kbkd1",
                    "class": "cvg.musical_game",
                    "friendly_name": "Rock Band 2",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "cvg.computer_videogame.designers",
                    "friendly_name": "Designers"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "cvg.cvg_designer.games_designed",
                    "friendly_name": "Games Designed"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.computer_videogame . \n?x1 :type.object.type :cvg.cvg_designer . \nVALUES ?x2 { :m.04kbkd1 } \n?x0 :cvg.computer_videogame.designers ?x1 . \n?x1 :cvg.cvg_designer.games_designed ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "cvg"
        ],
        "s_expression": "(COUNT (AND cvg.computer_videogame (JOIN cvg.computer_videogame.designers (JOIN cvg.cvg_designer.games_designed m.04kbkd1))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "4"
            }
        ]
    },
    {
        "qid": 348000002,
        "question": "which paintings are discovered in lascaux caves?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy35w0",
                "entity_name": "Great Black Bull"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy3d5d",
                "entity_name": "Red Horse Black Horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z7pzh",
                "entity_name": "The Scene of the Dead Man"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy35d0",
                "entity_name": "Red Cow and First Chinese Horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy43_s",
                "entity_name": "The Red Chinese Horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbbf",
                "entity_name": "Swimming Deer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbcy",
                "entity_name": "Lascaux Bison"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbf9",
                "entity_name": "The Two Chinese Horses"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbkn",
                "entity_name": "Lascaux Antlered Stage"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbl_",
                "entity_name": "The Great Cow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbnh",
                "entity_name": "The Hall of Bulls"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbqc",
                "entity_name": "Falling Horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbrs",
                "entity_name": "Fleeing Horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbt3",
                "entity_name": "The Unicorn"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbvf",
                "entity_name": "The Chipped Auroch"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbz5",
                "entity_name": "Falling Cow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybc0n",
                "entity_name": "Star Eyed Auroch"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gyn0np",
                "entity_name": "Lascaux Hunting Scene"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.caveart.painting",
                    "class": "base.caveart.painting",
                    "friendly_name": "Cave Painting",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04q6t",
                    "class": "base.caveart.cave",
                    "friendly_name": "lascaux caves",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.caveart.cave.paintings",
                    "friendly_name": "Paintings"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.caveart.painting . \nVALUES ?x1 { :m.04q6t } \n?x1 :base.caveart.cave.paintings ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.caveart.painting (JOIN (R base.caveart.cave.paintings) m.04q6t))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy35w0",
                "entity_name": "Great Black Bull"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy3d5d",
                "entity_name": "Red Horse Black Horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z7pzh",
                "entity_name": "The Scene of the Dead Man"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy35d0",
                "entity_name": "Red Cow and First Chinese Horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy43_s",
                "entity_name": "The Red Chinese Horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbbf",
                "entity_name": "Swimming Deer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbcy",
                "entity_name": "Lascaux Bison"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbf9",
                "entity_name": "The Two Chinese Horses"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbkn",
                "entity_name": "Lascaux Antlered Stage"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbl_",
                "entity_name": "The Great Cow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbnh",
                "entity_name": "The Hall of Bulls"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbqc",
                "entity_name": "Falling Horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbrs",
                "entity_name": "Fleeing Horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbt3",
                "entity_name": "The Unicorn"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbvf",
                "entity_name": "The Chipped Auroch"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybbz5",
                "entity_name": "Falling Cow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybc0n",
                "entity_name": "Star Eyed Auroch"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gyn0np",
                "entity_name": "Lascaux Hunting Scene"
            }
        ]
    },
    {
        "qid": 415000000,
        "question": "the elements discovered by marie curie are in which block?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0htq0",
                "entity_name": "p-block"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0htmp",
                "entity_name": "s-block"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "chemistry.periodic_table_block",
                    "class": "chemistry.periodic_table_block",
                    "friendly_name": "Periodic table block",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "chemistry.chemical_element",
                    "class": "chemistry.chemical_element",
                    "friendly_name": "Chemical Element",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.053_d",
                    "class": "chemistry.element_discoverer",
                    "friendly_name": "Marie Curie",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "chemistry.chemical_element.periodic_table_block",
                    "friendly_name": "Periodic table block"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "chemistry.chemical_element.discoverer",
                    "friendly_name": "Discoverer"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :chemistry.periodic_table_block . \n?x1 :type.object.type :chemistry.chemical_element . \nVALUES ?x2 { :m.053_d } \n?x1 :chemistry.chemical_element.periodic_table_block ?x0 . \n?x1 :chemistry.chemical_element.discoverer ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "chemistry"
        ],
        "s_expression": "(AND chemistry.periodic_table_block (JOIN (R chemistry.chemical_element.periodic_table_block) (JOIN chemistry.chemical_element.discoverer m.053_d)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0htq0",
                "entity_name": "p-block"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0htmp",
                "entity_name": "s-block"
            }
        ]
    },
    {
        "qid": 500000300,
        "question": "of the characters in for your eyes only, which one is based on margaret thatcher?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kn_nn",
                "entity_name": "Margaret Thatcher"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "film.film_character",
                    "class": "film.film_character",
                    "friendly_name": "Film character",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "film.performance",
                    "class": "film.performance",
                    "friendly_name": "Film performance",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03f5vvx",
                    "class": "fictional_universe.person_in_fiction",
                    "friendly_name": "Margaret Thatcher",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0g5pv3",
                    "class": "base.jamesbond007.bond_film",
                    "friendly_name": "For Your Eyes Only",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.character",
                    "friendly_name": "Character"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "fictional_universe.fictional_character.based_on",
                    "friendly_name": "Based On"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.film",
                    "friendly_name": "Film"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :film.film_character . \n?x1 :type.object.type :film.performance . \nVALUES ?x2 { :m.03f5vvx } \nVALUES ?x3 { :m.0g5pv3 } \n?x1 :film.performance.character ?x0 . \n?x0 :fictional_universe.fictional_character.based_on ?x2 . \n?x1 :film.performance.film ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "film"
        ],
        "s_expression": "(AND film.film_character (AND (JOIN (R film.performance.character) (JOIN film.performance.film m.0g5pv3)) (JOIN fictional_universe.fictional_character.based_on m.03f5vvx)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kn_nn",
                "entity_name": "Margaret Thatcher"
            }
        ]
    },
    {
        "qid": 489000300,
        "question": "what is the month in which typical new york city precipitation exceeds 86 mm?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xx5",
                "entity_name": "February"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_ly",
                "entity_name": "January"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05lf_",
                "entity_name": "October"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04wzr",
                "entity_name": "March"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.040fv",
                "entity_name": "July"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ll3",
                "entity_name": "August"
            }
        ],
        "function": ">",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "time.month",
                    "class": "time.month",
                    "friendly_name": "Month",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "travel.travel_destination_monthly_climate",
                    "class": "travel.travel_destination_monthly_climate",
                    "friendly_name": "Travel destination monthly climate",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02_286",
                    "class": "travel.travel_destination",
                    "friendly_name": "New York City",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "86^^http://www.w3.org/2001/XMLSchema#integer",
                    "class": "type.int",
                    "friendly_name": "86",
                    "question_node": 0,
                    "function": ">"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "travel.travel_destination_monthly_climate.month",
                    "friendly_name": "Month"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "travel.travel_destination.climate",
                    "friendly_name": "Climate"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "travel.travel_destination_monthly_climate.average_rainfall_mm",
                    "friendly_name": "Average rainfall"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :time.month . \n?x1 :type.object.type :travel.travel_destination_monthly_climate . \nVALUES ?x2 { :m.02_286 } \nFILTER (?x3 > \"86\"^^<http://www.w3.org/2001/XMLSchema#integer>)\n?x1 :travel.travel_destination_monthly_climate.month ?x0 . \n?x2 :travel.travel_destination.climate ?x1 . \n?x1 :travel.travel_destination_monthly_climate.average_rainfall_mm ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "travel"
        ],
        "s_expression": "(AND time.month (JOIN (R travel.travel_destination_monthly_climate.month) (AND (JOIN (R travel.travel_destination.climate) m.02_286) (gt travel.travel_destination_monthly_climate.average_rainfall_mm 86^^http://www.w3.org/2001/XMLSchema#integer))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xx5",
                "entity_name": "February"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_ly",
                "entity_name": "January"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05lf_",
                "entity_name": "October"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04wzr",
                "entity_name": "March"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.040fv",
                "entity_name": "July"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ll3",
                "entity_name": "August"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.028kb",
                "entity_name": "December"
            }
        ]
    },
    {
        "qid": 431000200,
        "question": "what pet diseases have the same cause with canine arthritis?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05yv9kh",
                "entity_name": "Pancreatitis in cats and dogs"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b9fw1",
                "entity_name": "Corneal ulcers in animals"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.pethealth.pet_disease_or_medical_condition",
                    "class": "base.pethealth.pet_disease_or_medical_condition",
                    "friendly_name": "Pet disease or medical condition",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.pethealth.cause",
                    "class": "base.pethealth.cause",
                    "friendly_name": "Pet Disease Cause",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.05gj3zc",
                    "class": "base.pethealth.pet_disease_or_medical_condition",
                    "friendly_name": "Canine arthritis",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.pethealth.cause.pet_diseases_or_conditions_caused",
                    "friendly_name": "Pet diseases or conditions caused"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.pethealth.pet_disease_or_medical_condition.causes",
                    "friendly_name": "Causes"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.pethealth.pet_disease_or_medical_condition . \n?x1 :type.object.type :base.pethealth.cause . \nVALUES ?x2 { :m.05gj3zc } \n?x1 :base.pethealth.cause.pet_diseases_or_conditions_caused ?x0 . \n?x2 :base.pethealth.pet_disease_or_medical_condition.causes ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.pethealth.pet_disease_or_medical_condition (JOIN (R base.pethealth.cause.pet_diseases_or_conditions_caused) (JOIN (R base.pethealth.pet_disease_or_medical_condition.causes) m.05gj3zc)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05yv9kh",
                "entity_name": "Pancreatitis in cats and dogs"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b9fw1",
                "entity_name": "Corneal ulcers in animals"
            }
        ]
    },
    {
        "qid": 478000101,
        "question": "what songs can be found in guitar hero iii?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.050r2c",
                "entity_name": "Yellow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dgk51",
                "entity_name": "Knights of Cydonia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01twcs",
                "entity_name": "Anarchy in the U.K."
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cr_wt",
                "entity_name": "La Grange"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01cw9x7",
                "entity_name": "One"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03xp99",
                "entity_name": "One"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02871qq",
                "entity_name": "Same Old Song and Dance"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0q43m_",
                "entity_name": "Juke Box Hero"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08cklv",
                "entity_name": "Rock and Roll All Nite"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nc41y",
                "entity_name": "Tina"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nc49r",
                "entity_name": "Halo Theme MJOLNIR Mix"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rpmd",
                "entity_name": "Paranoid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0flpph",
                "entity_name": "Rock You Like a Hurricane"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0263041",
                "entity_name": "Excuse Me Mr."
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.070z4x",
                "entity_name": "Paint It Black"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m1d6v",
                "entity_name": "Ever Fallen In Love (With Someone You Shouldn\u2019t\u2019ve)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lf9nr",
                "entity_name": "Pride and Joy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059w87",
                "entity_name": "Sunshine of Your Love"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fjk88",
                "entity_name": "Black Magic Woman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0czkkl",
                "entity_name": "Story of My Life"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n02s1",
                "entity_name": "God Put a Smile Upon Your Face"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04lhdz5",
                "entity_name": "The Judas Kiss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07sftt",
                "entity_name": "Raining Blood"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0crrmn",
                "entity_name": "Rock of Ages"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d0xd3",
                "entity_name": "Supermassive Black Hole"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qccf",
                "entity_name": "Holiday in Cambodia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0547nq",
                "entity_name": "She Bangs the Drums"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0816cq",
                "entity_name": "Dream On"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04gv9b5",
                "entity_name": "The Day That Never Comes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nctfn",
                "entity_name": "(We Are) The Road Crew"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09dyxz",
                "entity_name": "Slow Ride"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy913",
                "entity_name": "Hit Me with Your Best Shot"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nc432",
                "entity_name": "Messages"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9p7g",
                "entity_name": "Don't Hold Back"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05p4g__",
                "entity_name": "Surfing with the Alien"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.096ydc",
                "entity_name": "Johnny I Hardly Knew Ye"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.121qgdnt",
                "entity_name": "Radio Song"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01f34k7",
                "entity_name": "My Curse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.021f1m",
                "entity_name": "Don't Speak"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025sd6q",
                "entity_name": "Sunday Morning"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026l86h",
                "entity_name": "The Seeker"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026m2nn",
                "entity_name": "Top Gun Anthem"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026nqlz",
                "entity_name": "Prayer of the Refugee"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026pvry",
                "entity_name": "Talk Dirty to Me"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026sf4s",
                "entity_name": "Through the Fire and Flames"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02702w6",
                "entity_name": "Operation Ground and Pound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0270knw",
                "entity_name": "F.C.P.R.E.M.I.X."
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027646y",
                "entity_name": "Ruby"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02774bg",
                "entity_name": "Cliffs of Dover"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027dm29",
                "entity_name": "Mississippi Queen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0288vsn",
                "entity_name": "Kool Thing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p90s8",
                "entity_name": "Juke Box Hero"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pgmbp",
                "entity_name": "Rock This Town"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pqbw1",
                "entity_name": "Can't Be Saved"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02q2ssd",
                "entity_name": "My Curse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qhv49",
                "entity_name": "Antisocial"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r14hc",
                "entity_name": "3's & 7's"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r4z9_",
                "entity_name": "She Builds Quick Machines"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02w1spk",
                "entity_name": "The Pretender"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x31zc",
                "entity_name": "Pretty Handsome Awkward"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x55kk",
                "entity_name": "In the Belly of a Shark"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z56_k",
                "entity_name": "Almost Easy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03c_729",
                "entity_name": "Cities on Flame with Rock and Roll"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03d8xhc",
                "entity_name": "Carcinogen Crush"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gpc5",
                "entity_name": "Taxman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gr9x7",
                "entity_name": "Go That Far"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03h5xpn",
                "entity_name": "Mauvais Gar\u00e7on"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03nlw9g",
                "entity_name": "Peace of Mind"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03qkg55",
                "entity_name": "Nine Lives"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0410z25",
                "entity_name": "Take this life"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0416__g",
                "entity_name": "Violet Hill"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.043l3_j",
                "entity_name": "I'm In the Band"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04_p_d",
                "entity_name": "Welcome to the Jungle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jpn45",
                "entity_name": "Cyanide"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04n4_ft",
                "entity_name": "Lay Down"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04p_zt2",
                "entity_name": "The Unforgiven III"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yb80m",
                "entity_name": "All Nightmare Long"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05h36rb",
                "entity_name": "Hier kommt Alex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05mtfsj",
                "entity_name": "Revolution Deathsquad"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n8__8",
                "entity_name": "The End of the Line"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n8__t",
                "entity_name": "Broken, Beat & Scarred"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n8_sw",
                "entity_name": "That Was Just Your Life"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9042",
                "entity_name": "Suicide & Redemption"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9c75",
                "entity_name": "Guitar Battle vs. Slash"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9cbf",
                "entity_name": "Guitar Battle vs. Tom Morello"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9l1l",
                "entity_name": "Avalancha"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9q8f",
                "entity_name": "Down 'N Dirty"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9sm5",
                "entity_name": "Generation Rock"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9zj_",
                "entity_name": "Monsters"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbltm",
                "entity_name": "Impulse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nblw6",
                "entity_name": "In Love"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbm63",
                "entity_name": "Metal Heavy Lady"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbm9y",
                "entity_name": "Minus Celsius"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbvkk",
                "entity_name": "Nothing for Me Here"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbvsw",
                "entity_name": "The Way It Ends"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncsbs",
                "entity_name": "Ernten Was Wir S\u00e4en"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncsdg",
                "entity_name": "So Payaso"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncsn7",
                "entity_name": "Sleeping Giant"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncst7",
                "entity_name": "The Arsonist"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncswb",
                "entity_name": "Famous For Nothing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nct6_",
                "entity_name": "Exo-Politics"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncthq",
                "entity_name": "Stay Clean"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nctmk",
                "entity_name": "Problems (Live at Brixton)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nctqj",
                "entity_name": "I Am Murloc"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncv9s",
                "entity_name": "Heroes of Our Time"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05p79hg",
                "entity_name": "The End Begins (to Rock)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.069lq1",
                "entity_name": "Reptilia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06slcm",
                "entity_name": "Suck My Kiss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06vw9m",
                "entity_name": "Slither"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06y3rd",
                "entity_name": "Motorhead"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07135q",
                "entity_name": "This Is a Call"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.071x8b",
                "entity_name": "All My Life"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07csl2",
                "entity_name": "Bulls on Parade"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07k62t",
                "entity_name": "For the Love of God"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07n6949",
                "entity_name": "Flannigan's Ball"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07npl0j",
                "entity_name": "Putting Holes In Happiness"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07t5_1_",
                "entity_name": "Original Composition"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.082dr7",
                "entity_name": "Sabotage"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.098bqv",
                "entity_name": "Any Way You Want It"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.098wyj",
                "entity_name": "Scary Monsters"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_hy5cl",
                "entity_name": "No More Sorrow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c7xw8",
                "entity_name": "Black Sunshine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c9my1",
                "entity_name": "Miss Murder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cc4r4",
                "entity_name": "School's Out"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cjv1p",
                "entity_name": "Before I Forget"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cszsh",
                "entity_name": "The Number of the Beast"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d1ss9",
                "entity_name": "Lay It Down"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ds2d7",
                "entity_name": "Stockholm Syndrome"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dyqww",
                "entity_name": "Stricken"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fd3k5",
                "entity_name": "When You Were Young"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fm7g9",
                "entity_name": "Helicopter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g_fc4",
                "entity_name": "Lanigan's Ball"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gm5h7",
                "entity_name": "Shoot the Runner"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h03jz",
                "entity_name": "Hole in the Earth"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h3dtn",
                "entity_name": "Photograph"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l0vsj",
                "entity_name": "Cult of Personality"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l0x_6",
                "entity_name": "Closer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m4f02",
                "entity_name": "Cities on Flame With Rock 'n' Roll"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.087bht",
                "entity_name": "Even Flow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kjvl",
                "entity_name": "The Devil Went Down to Georgia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045bch",
                "entity_name": "We Three Kings"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08nzqt",
                "entity_name": "I Predict a Riot"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nctxh",
                "entity_name": "Soothsayer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06hb7x",
                "entity_name": "Call Me"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ldf4n",
                "entity_name": "Kool Thing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gppf4",
                "entity_name": "My Name Is Jonas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c2rk6",
                "entity_name": "Barracuda"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05f8y_",
                "entity_name": "Cherub Rock"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.078mcc",
                "entity_name": "One Step Closer"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.musical_game_song",
                    "class": "cvg.musical_game_song",
                    "friendly_name": "Musical Game Song",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "cvg.musical_game_song_relationship",
                    "class": "cvg.musical_game_song_relationship",
                    "friendly_name": "Musical game/song relationship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.025vn5m",
                    "class": "cvg.musical_game",
                    "friendly_name": "guitar hero iii",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "cvg.musical_game_song_relationship.song",
                    "friendly_name": "Song"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "cvg.musical_game_song_relationship.game",
                    "friendly_name": "Game"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.musical_game_song . \n?x1 :type.object.type :cvg.musical_game_song_relationship . \nVALUES ?x2 { :m.025vn5m } \n?x1 :cvg.musical_game_song_relationship.song ?x0 . \n?x1 :cvg.musical_game_song_relationship.game ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "cvg"
        ],
        "s_expression": "(AND cvg.musical_game_song (JOIN (R cvg.musical_game_song_relationship.song) (JOIN cvg.musical_game_song_relationship.game m.025vn5m)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.050r2c",
                "entity_name": "Yellow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dgk51",
                "entity_name": "Knights of Cydonia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01twcs",
                "entity_name": "Anarchy in the U.K."
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cr_wt",
                "entity_name": "La Grange"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01cw9x7",
                "entity_name": "One"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03xp99",
                "entity_name": "One"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02871qq",
                "entity_name": "Same Old Song and Dance"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0q43m_",
                "entity_name": "Juke Box Hero"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08cklv",
                "entity_name": "Rock and Roll All Nite"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nc41y",
                "entity_name": "Tina"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nc49r",
                "entity_name": "Halo Theme MJOLNIR Mix"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rpmd",
                "entity_name": "Paranoid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0flpph",
                "entity_name": "Rock You Like a Hurricane"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0263041",
                "entity_name": "Excuse Me Mr."
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.070z4x",
                "entity_name": "Paint It Black"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m1d6v",
                "entity_name": "Ever Fallen In Love (With Someone You Shouldn\u2019t\u2019ve)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lf9nr",
                "entity_name": "Pride and Joy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059w87",
                "entity_name": "Sunshine of Your Love"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fjk88",
                "entity_name": "Black Magic Woman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0czkkl",
                "entity_name": "Story of My Life"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n02s1",
                "entity_name": "God Put a Smile Upon Your Face"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04lhdz5",
                "entity_name": "The Judas Kiss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07sftt",
                "entity_name": "Raining Blood"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0crrmn",
                "entity_name": "Rock of Ages"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d0xd3",
                "entity_name": "Supermassive Black Hole"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qccf",
                "entity_name": "Holiday in Cambodia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0547nq",
                "entity_name": "She Bangs the Drums"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0816cq",
                "entity_name": "Dream On"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04gv9b5",
                "entity_name": "The Day That Never Comes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nctfn",
                "entity_name": "(We Are) The Road Crew"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09dyxz",
                "entity_name": "Slow Ride"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy913",
                "entity_name": "Hit Me with Your Best Shot"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nc432",
                "entity_name": "Messages"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9p7g",
                "entity_name": "Don't Hold Back"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05p4g__",
                "entity_name": "Surfing with the Alien"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.096ydc",
                "entity_name": "Johnny I Hardly Knew Ye"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.121qgdnt",
                "entity_name": "Radio Song"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01f34k7",
                "entity_name": "My Curse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.021f1m",
                "entity_name": "Don't Speak"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025sd6q",
                "entity_name": "Sunday Morning"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026l86h",
                "entity_name": "The Seeker"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026m2nn",
                "entity_name": "Top Gun Anthem"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026nqlz",
                "entity_name": "Prayer of the Refugee"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026pvry",
                "entity_name": "Talk Dirty to Me"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026sf4s",
                "entity_name": "Through the Fire and Flames"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02702w6",
                "entity_name": "Operation Ground and Pound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0270knw",
                "entity_name": "F.C.P.R.E.M.I.X."
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027646y",
                "entity_name": "Ruby"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02774bg",
                "entity_name": "Cliffs of Dover"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027dm29",
                "entity_name": "Mississippi Queen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0288vsn",
                "entity_name": "Kool Thing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p90s8",
                "entity_name": "Juke Box Hero"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pgmbp",
                "entity_name": "Rock This Town"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pqbw1",
                "entity_name": "Can't Be Saved"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02q2ssd",
                "entity_name": "My Curse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qhv49",
                "entity_name": "Antisocial"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r14hc",
                "entity_name": "3's & 7's"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r4z9_",
                "entity_name": "She Builds Quick Machines"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02w1spk",
                "entity_name": "The Pretender"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x31zc",
                "entity_name": "Pretty Handsome Awkward"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x55kk",
                "entity_name": "In the Belly of a Shark"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z56_k",
                "entity_name": "Almost Easy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03c_729",
                "entity_name": "Cities on Flame with Rock and Roll"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03d8xhc",
                "entity_name": "Carcinogen Crush"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gpc5",
                "entity_name": "Taxman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gr9x7",
                "entity_name": "Go That Far"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03h5xpn",
                "entity_name": "Mauvais Gar\u00e7on"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03nlw9g",
                "entity_name": "Peace of Mind"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03qkg55",
                "entity_name": "Nine Lives"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0410z25",
                "entity_name": "Take this life"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0416__g",
                "entity_name": "Violet Hill"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.043l3_j",
                "entity_name": "I'm In the Band"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04_p_d",
                "entity_name": "Welcome to the Jungle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jpn45",
                "entity_name": "Cyanide"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04n4_ft",
                "entity_name": "Lay Down"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04p_zt2",
                "entity_name": "The Unforgiven III"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04yb80m",
                "entity_name": "All Nightmare Long"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05h36rb",
                "entity_name": "Hier kommt Alex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05mtfsj",
                "entity_name": "Revolution Deathsquad"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n8__8",
                "entity_name": "The End of the Line"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n8__t",
                "entity_name": "Broken, Beat & Scarred"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n8_sw",
                "entity_name": "That Was Just Your Life"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9042",
                "entity_name": "Suicide & Redemption"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9c75",
                "entity_name": "Guitar Battle vs. Slash"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9cbf",
                "entity_name": "Guitar Battle vs. Tom Morello"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9l1l",
                "entity_name": "Avalancha"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9q8f",
                "entity_name": "Down 'N Dirty"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9sm5",
                "entity_name": "Generation Rock"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05n9zj_",
                "entity_name": "Monsters"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbltm",
                "entity_name": "Impulse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nblw6",
                "entity_name": "In Love"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbm63",
                "entity_name": "Metal Heavy Lady"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbm9y",
                "entity_name": "Minus Celsius"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbvkk",
                "entity_name": "Nothing for Me Here"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbvsw",
                "entity_name": "The Way It Ends"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncsbs",
                "entity_name": "Ernten Was Wir S\u00e4en"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncsdg",
                "entity_name": "So Payaso"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncsn7",
                "entity_name": "Sleeping Giant"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncst7",
                "entity_name": "The Arsonist"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncswb",
                "entity_name": "Famous For Nothing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nct6_",
                "entity_name": "Exo-Politics"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncthq",
                "entity_name": "Stay Clean"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nctmk",
                "entity_name": "Problems (Live at Brixton)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nctqj",
                "entity_name": "I Am Murloc"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ncv9s",
                "entity_name": "Heroes of Our Time"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05p79hg",
                "entity_name": "The End Begins (to Rock)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.069lq1",
                "entity_name": "Reptilia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06slcm",
                "entity_name": "Suck My Kiss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06vw9m",
                "entity_name": "Slither"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06y3rd",
                "entity_name": "Motorhead"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07135q",
                "entity_name": "This Is a Call"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.071x8b",
                "entity_name": "All My Life"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07csl2",
                "entity_name": "Bulls on Parade"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07k62t",
                "entity_name": "For the Love of God"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07n6949",
                "entity_name": "Flannigan's Ball"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07npl0j",
                "entity_name": "Putting Holes In Happiness"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07t5_1_",
                "entity_name": "Original Composition"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.082dr7",
                "entity_name": "Sabotage"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.098bqv",
                "entity_name": "Any Way You Want It"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.098wyj",
                "entity_name": "Scary Monsters"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_hy5cl",
                "entity_name": "No More Sorrow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c7xw8",
                "entity_name": "Black Sunshine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c9my1",
                "entity_name": "Miss Murder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cc4r4",
                "entity_name": "School's Out"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cjv1p",
                "entity_name": "Before I Forget"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cszsh",
                "entity_name": "The Number of the Beast"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d1ss9",
                "entity_name": "Lay It Down"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ds2d7",
                "entity_name": "Stockholm Syndrome"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dyqww",
                "entity_name": "Stricken"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fd3k5",
                "entity_name": "When You Were Young"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fm7g9",
                "entity_name": "Helicopter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g_fc4",
                "entity_name": "Lanigan's Ball"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gm5h7",
                "entity_name": "Shoot the Runner"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h03jz",
                "entity_name": "Hole in the Earth"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h3dtn",
                "entity_name": "Photograph"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l0vsj",
                "entity_name": "Cult of Personality"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l0x_6",
                "entity_name": "Closer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m4f02",
                "entity_name": "Cities on Flame With Rock 'n' Roll"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.087bht",
                "entity_name": "Even Flow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kjvl",
                "entity_name": "The Devil Went Down to Georgia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045bch",
                "entity_name": "We Three Kings"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08nzqt",
                "entity_name": "I Predict a Riot"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nctxh",
                "entity_name": "Soothsayer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06hb7x",
                "entity_name": "Call Me"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ldf4n",
                "entity_name": "Kool Thing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gppf4",
                "entity_name": "My Name Is Jonas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c2rk6",
                "entity_name": "Barracuda"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05f8y_",
                "entity_name": "Cherub Rock"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.078mcc",
                "entity_name": "One Step Closer"
            }
        ]
    },
    {
        "qid": 425000402,
        "question": "locate plants capable of hosting black stem rust.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09gtx",
                "entity_name": "Barley"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "biology.plant_disease_host",
                    "class": "biology.plant_disease_host",
                    "friendly_name": "Plant Disease Host",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "biology.plant_disease_triangle",
                    "class": "biology.plant_disease_triangle",
                    "friendly_name": "Plant Disease Triangle",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02pn8yb",
                    "class": "biology.plant_disease",
                    "friendly_name": "black stem rust",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "biology.plant_disease_host.disease_s",
                    "friendly_name": "Disease(s)"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "biology.plant_disease_triangle.plant_disease",
                    "friendly_name": "Plant disease"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :biology.plant_disease_host . \n?x1 :type.object.type :biology.plant_disease_triangle . \nVALUES ?x2 { :m.02pn8yb } \n?x0 :biology.plant_disease_host.disease_s ?x1 . \n?x1 :biology.plant_disease_triangle.plant_disease ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "biology"
        ],
        "s_expression": "(AND biology.plant_disease_host (JOIN biology.plant_disease_host.disease_s (JOIN biology.plant_disease_triangle.plant_disease m.02pn8yb)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09gtx",
                "entity_name": "Barley"
            }
        ]
    },
    {
        "qid": 292000301,
        "question": "for which war was the italian armistice signed?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.081pw",
                "entity_name": "World War II"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.morelaw.war",
                    "class": "base.morelaw.war",
                    "friendly_name": "War",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08jn28",
                    "class": "base.morelaw.peace_treaty",
                    "friendly_name": "italian armistice",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.morelaw.ceasefire.w",
                    "friendly_name": "War"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.morelaw.war . \nVALUES ?x1 { :m.08jn28 } \n?x1 :base.morelaw.ceasefire.w ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.morelaw.war (JOIN (R base.morelaw.ceasefire.w) m.08jn28))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.081pw",
                "entity_name": "World War II"
            }
        ]
    },
    {
        "qid": 448000200,
        "question": "what number of children of eddard stark were born in winterfell?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "3",
                "entity_name": "3"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "fictional_universe.fictional_character",
                    "class": "fictional_universe.fictional_character",
                    "friendly_name": "Fictional Character",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03qs0n1",
                    "class": "base.iceandfire.house_lord",
                    "friendly_name": "Eddard Stark",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.04sstyx",
                    "class": "fictional_universe.fictional_setting",
                    "friendly_name": "Winterfell",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "fictional_universe.fictional_character.children",
                    "friendly_name": "Children"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "fictional_universe.fictional_character.place_of_birth",
                    "friendly_name": "Place of Birth"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fictional_universe.fictional_character . \nVALUES ?x1 { :m.03qs0n1 } \nVALUES ?x2 { :m.04sstyx } \n?x1 :fictional_universe.fictional_character.children ?x0 . \n?x0 :fictional_universe.fictional_character.place_of_birth ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "fictional_universe"
        ],
        "s_expression": "(COUNT (AND fictional_universe.fictional_character (AND (JOIN (R fictional_universe.fictional_character.children) m.03qs0n1) (JOIN fictional_universe.fictional_character.place_of_birth m.04sstyx))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "3"
            }
        ]
    },
    {
        "qid": 331000100,
        "question": "what is the brightest star, nebula, or planet in the known universe?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cg4fz",
                "entity_name": "4U 0142+61"
            }
        ],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.celestial_object",
                    "class": "astronomy.celestial_object",
                    "friendly_name": "Celestial Object",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.celestial_object.magnitude",
                    "friendly_name": "Apparent Magnitude"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.celestial_object . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :astronomy.celestial_object . \n?y0 :astronomy.celestial_object.magnitude ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :astronomy.celestial_object.magnitude ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "(ARGMAX astronomy.celestial_object astronomy.celestial_object.magnitude)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cg4fz",
                "entity_name": "4U 0142+61"
            }
        ]
    },
    {
        "qid": 354000201,
        "question": "what competitions are held in new york?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yhp9s",
                "entity_name": "Miss India Worldwide 1996"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0by1f9w",
                "entity_name": "Miss USA 1973"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bxzv0v",
                "entity_name": "Miss USA 1971"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yn8mg",
                "entity_name": "Miss India Worldwide 1994"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b75dnh",
                "entity_name": "Miss Dominican Republic US 2009"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "award.competition",
                    "class": "award.competition",
                    "friendly_name": "Competition",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02_286",
                    "class": "location.dated_location",
                    "friendly_name": "new york",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.events",
                    "friendly_name": "Events"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :award.competition . \nVALUES ?x1 { :m.02_286 } \n?x1 :location.location.events ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "location"
        ],
        "s_expression": "(AND award.competition (JOIN (R location.location.events) m.02_286))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yhp9s",
                "entity_name": "Miss India Worldwide 1996"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0by1f9w",
                "entity_name": "Miss USA 1973"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bxzv0v",
                "entity_name": "Miss USA 1971"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yn8mg",
                "entity_name": "Miss India Worldwide 1994"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b75dnh",
                "entity_name": "Miss Dominican Republic US 2009"
            }
        ]
    },
    {
        "qid": 457000200,
        "question": "who are the monarchs that following the royal line founded by napoleon bonaparte?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gvpd",
                "entity_name": "J\u00e9r\u00f4me Bonaparte"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0894pt",
                "entity_name": "Napol\u00e9on Louis Bonaparte"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g7lq",
                "entity_name": "Louis Bonaparte"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "royalty.monarch",
                    "class": "royalty.monarch",
                    "friendly_name": "Monarch",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "royalty.royal_line",
                    "class": "royalty.royal_line",
                    "friendly_name": "Royal line",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0j5b8",
                    "class": "people.family_member",
                    "friendly_name": "Napoleon Bonaparte",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "royalty.royal_line.monarchs_from_this_line",
                    "friendly_name": "Monarchs from this line"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "people.family.founder",
                    "friendly_name": "Founder"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :royalty.monarch . \n?x1 :type.object.type :royalty.royal_line . \nVALUES ?x2 { :m.0j5b8 } \n?x1 :royalty.royal_line.monarchs_from_this_line ?x0 . \n?x1 :people.family.founder ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "people"
        ],
        "s_expression": "(AND royalty.monarch (JOIN (R royalty.royal_line.monarchs_from_this_line) (JOIN people.family.founder m.0j5b8)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gx63",
                "entity_name": "Joseph Bonaparte"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gvpd",
                "entity_name": "J\u00e9r\u00f4me Bonaparte"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0894pt",
                "entity_name": "Napol\u00e9on Louis Bonaparte"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g7lq",
                "entity_name": "Louis Bonaparte"
            }
        ]
    },
    {
        "qid": 360000201,
        "question": "find all the streams available on live 365.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfvcr",
                "entity_name": "Beach and Classic Hits - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg04y",
                "entity_name": "World Vibe Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc61w",
                "entity_name": "Wolf Trap Radio - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc08f",
                "entity_name": "ASCAP Concert - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbs4j",
                "entity_name": "Modern Rock Classics - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc0wc",
                "entity_name": "All About Country Hits - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gdcf0",
                "entity_name": "Vanguard Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfgfx",
                "entity_name": "W305.com - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg074",
                "entity_name": "SportsAvengers.com - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gdcz8",
                "entity_name": "WUMB - Folk Radio - 24kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc2vl",
                "entity_name": "RAM Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc4yw",
                "entity_name": "Meander Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbsrt",
                "entity_name": "Zappa Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfwn3",
                "entity_name": "Click Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gf_zx",
                "entity_name": "ASCAP Rhythm and Soul - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg0h0",
                "entity_name": "American Family Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg134",
                "entity_name": "Solace Radio - 24kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfxdf",
                "entity_name": "IRiEradio1.com - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbxyx",
                "entity_name": "Planet Zeb! - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc19t",
                "entity_name": "Keystone Pure Country - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg12l",
                "entity_name": "Smallbiz America Radio - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbx_m",
                "entity_name": "POP GOES THE 70's! - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc07z",
                "entity_name": "Apollo Project - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc5c5",
                "entity_name": "Shokus Internet Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfsz1",
                "entity_name": "Forever Cool - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfl6w",
                "entity_name": "WRWN - REEWINEMUSIC.COM - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gb_sk",
                "entity_name": "KRSN AM 1490 Los Alamos NM - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc4gg",
                "entity_name": "ASCAP Ultimix - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfxy4",
                "entity_name": "Christmas 24/7 - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfsrl",
                "entity_name": "ASCAP Jazz - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gftjm",
                "entity_name": "ASCAP Latino - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfykj",
                "entity_name": "Prophetic Worship Radio.net - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbybg",
                "entity_name": "That 70.s Channel - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg035",
                "entity_name": "VirtualDJsOnline.com - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfs6d",
                "entity_name": "Radio Abeokuta - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc98l",
                "entity_name": "Radio Malvisi - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbs0p",
                "entity_name": "KSBR - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbs0y",
                "entity_name": "KSBR - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg0kq",
                "entity_name": "DennyRadio 24/7 - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ggtnh",
                "entity_name": "WJZQ - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc130",
                "entity_name": "CONSTANT COUNTRY KRS - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfs0q",
                "entity_name": "Pipeline 2 Paradise - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfsxf",
                "entity_name": "FAIRadio.net 1 - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbrql",
                "entity_name": "Devil's Night Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbs7t",
                "entity_name": "Owl Radio at KSU - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc0xc",
                "entity_name": "ASCAP Nashville - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc15z",
                "entity_name": "Gospel Twang Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gf_wz",
                "entity_name": "Van Richter Radio - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfwz7",
                "entity_name": "WAMU  88.5 FM . American University Radio - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfs4h",
                "entity_name": "Putumayo Radio. - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfw61",
                "entity_name": "RocklandUSA : Pop Rock - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg0bn",
                "entity_name": "ASCAP Playback - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gb_6_",
                "entity_name": "Music Illuminating Life - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gb__h",
                "entity_name": "SoulsVilleOnline.com - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gb_q3",
                "entity_name": "Classic Hits Radio - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gb_zy",
                "entity_name": "Santana Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbrfm",
                "entity_name": "90:00 Soccer Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbs40",
                "entity_name": "M3 Radio - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbs50",
                "entity_name": "Musical Justice Redux - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbs5j",
                "entity_name": "MusicalJustice.com - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbs6s",
                "entity_name": "Octane365 - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbw73",
                "entity_name": "60's Chicks - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbwcr",
                "entity_name": "Crazy Al's Radio Party - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbwd8",
                "entity_name": "Edgewater Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbwm9",
                "entity_name": "Music From The Bluelight - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbwp0",
                "entity_name": "Radio Orenovscotia - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbwy7",
                "entity_name": "12 Inch Retro - DJ Lex - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbydl",
                "entity_name": "Wild 4 The 80's - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc0dx",
                "entity_name": "FAIRadio.net 2 - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc0mp",
                "entity_name": "Whisperings: Solo Piano Radio - 96kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc0mx",
                "entity_name": "Whisperings: Solo Piano Radio - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc14z",
                "entity_name": "Cowboy Up Radio - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc198",
                "entity_name": "KEWLcountry - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc2ps",
                "entity_name": "Party Country Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc2rs",
                "entity_name": "Radio Louisiana - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc2yd",
                "entity_name": "Variety96 COUNTRY - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc3mk",
                "entity_name": "iRadioNYC.com - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc4bx",
                "entity_name": "A Raging Dragon Radio - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc4lx",
                "entity_name": "Fistful of Soundtracks - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc4xr",
                "entity_name": "Lucky Dog Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc526",
                "entity_name": "Radio DavidByrne.com - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc595",
                "entity_name": "Seasons & Celebrations - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc5d_",
                "entity_name": "Six Degrees Traveler - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gdb7j",
                "entity_name": "RAM Grass - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gdrh3",
                "entity_name": "Faultline Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gf5f4",
                "entity_name": "SacTownRadio - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gf__j",
                "entity_name": "DPE RADIO - Los Angeles - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gf_bq",
                "entity_name": "Bunk Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gf_h8",
                "entity_name": "Extreme Radio - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gf_wq",
                "entity_name": "Van Richter Radio - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfflf",
                "entity_name": "Urban Latino Hip Hop Show - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfqd3",
                "entity_name": "Christmas Music 24/7 - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfqg7",
                "entity_name": "WinterScapes - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfrxq",
                "entity_name": "Mandarin Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfryf",
                "entity_name": "Mediterranean Folk - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfs3y",
                "entity_name": "Pop Goes Asia - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfss9",
                "entity_name": "aTTeNTioN sPaN raDiO 1 - 24kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfssk",
                "entity_name": "aTTeNTioN sPaN raDiO 1 - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfst_",
                "entity_name": "aTTeNTioN sPaN raDiO 2 - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfsx1",
                "entity_name": "Dimensions in Jazz - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gft3q",
                "entity_name": "Pat Metheny - 96kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gftmg",
                "entity_name": "Codigoradio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfvc4",
                "entity_name": "ASCAP Pop/Rock - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfvgp",
                "entity_name": "Capital Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfw5h",
                "entity_name": "RocklandUSA : Pop Mix - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfwds",
                "entity_name": "WimaxRadio.FM Charts 07 - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfwv2",
                "entity_name": "KXLU - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfxbs",
                "entity_name": "Dr Dick's Dub Shack - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfxny",
                "entity_name": "Acappella Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfxsm",
                "entity_name": "BlackGospel Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfxyq",
                "entity_name": "Church Beat Radio - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfxz9",
                "entity_name": "Classic Gospel Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfy5g",
                "entity_name": "eXTreme Gospel - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfy72",
                "entity_name": "Gospel Harmony Mix - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfy7q",
                "entity_name": "heavenBound GB Ministry Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfy_y",
                "entity_name": "The Prophetic Nation - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfyh3",
                "entity_name": "Life Talk Kids - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfyhp",
                "entity_name": "New Consciousness Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfyj7",
                "entity_name": "One Vibration Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfz2j",
                "entity_name": "VBS Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfz7_",
                "entity_name": "YwePrayze FM - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg00t",
                "entity_name": "Prime USA Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg0__",
                "entity_name": "New Dimensions - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg0hm",
                "entity_name": "Big Soccer Radio - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg0m1",
                "entity_name": "Enlightenment Radio - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg0n5",
                "entity_name": "Free Capitalist Radio - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg0nx",
                "entity_name": "Hayhouse Radio-Radio for your Soul - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg0pg",
                "entity_name": "Its About Finance: News and CEO Interviews - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg11g",
                "entity_name": "Rainbow Soul - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg121",
                "entity_name": "REAL ESTATE NATION - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg171",
                "entity_name": "The History Capsule. - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg17n",
                "entity_name": "Traders Nation - 32kbps Stream"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "broadcast.internet_stream",
                    "class": "broadcast.internet_stream",
                    "friendly_name": "Internet Stream",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04rtjj",
                    "class": "broadcast.distributor",
                    "friendly_name": "live 365",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "broadcast.distributor.distributes",
                    "friendly_name": "Distributes"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :broadcast.internet_stream . \nVALUES ?x1 { :m.04rtjj } \n?x1 :broadcast.distributor.distributes ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "broadcast"
        ],
        "s_expression": "(AND broadcast.internet_stream (JOIN (R broadcast.distributor.distributes) m.04rtjj))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc6dk",
                "entity_name": "Chicago House Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfvcr",
                "entity_name": "Beach and Classic Hits - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg04y",
                "entity_name": "World Vibe Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc2pb",
                "entity_name": "NYWradio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc61w",
                "entity_name": "Wolf Trap Radio - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc08f",
                "entity_name": "ASCAP Concert - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbs4j",
                "entity_name": "Modern Rock Classics - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc0wc",
                "entity_name": "All About Country Hits - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gdxz1",
                "entity_name": "Hot Sauce Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gdcf0",
                "entity_name": "Vanguard Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfgfx",
                "entity_name": "W305.com - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg074",
                "entity_name": "SportsAvengers.com - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gdcz8",
                "entity_name": "WUMB - Folk Radio - 24kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc2vl",
                "entity_name": "RAM Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc4yw",
                "entity_name": "Meander Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbsrt",
                "entity_name": "Zappa Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfwn3",
                "entity_name": "Click Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gf_zx",
                "entity_name": "ASCAP Rhythm and Soul - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg0h0",
                "entity_name": "American Family Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg004",
                "entity_name": "Independent Star Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg134",
                "entity_name": "Solace Radio - 24kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfxdf",
                "entity_name": "IRiEradio1.com - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbxyx",
                "entity_name": "Planet Zeb! - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc19t",
                "entity_name": "Keystone Pure Country - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfpxl",
                "entity_name": "Christmas 24/7 - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg12l",
                "entity_name": "Smallbiz America Radio - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbx_m",
                "entity_name": "POP GOES THE 70's! - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc07z",
                "entity_name": "Apollo Project - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc5c5",
                "entity_name": "Shokus Internet Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfsz1",
                "entity_name": "Forever Cool - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfl6w",
                "entity_name": "WRWN - REEWINEMUSIC.COM - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gb_sk",
                "entity_name": "KRSN AM 1490 Los Alamos NM - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc4gg",
                "entity_name": "ASCAP Ultimix - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfxy4",
                "entity_name": "Christmas 24/7 - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfsrl",
                "entity_name": "ASCAP Jazz - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gftjm",
                "entity_name": "ASCAP Latino - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfykj",
                "entity_name": "Prophetic Worship Radio.net - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbybg",
                "entity_name": "That 70.s Channel - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg035",
                "entity_name": "VirtualDJsOnline.com - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfs6d",
                "entity_name": "Radio Abeokuta - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc98l",
                "entity_name": "Radio Malvisi - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbs0p",
                "entity_name": "KSBR - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbs0y",
                "entity_name": "KSBR - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg0kq",
                "entity_name": "DennyRadio 24/7 - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ggtnh",
                "entity_name": "WJZQ - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc130",
                "entity_name": "CONSTANT COUNTRY KRS - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc5ct",
                "entity_name": "ShowBizRadio.net - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfs0q",
                "entity_name": "Pipeline 2 Paradise - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfsxf",
                "entity_name": "FAIRadio.net 1 - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbrql",
                "entity_name": "Devil's Night Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc4y9",
                "entity_name": "Max Broadway - Variety - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbrjz",
                "entity_name": "Amplify SD - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbs7t",
                "entity_name": "Owl Radio at KSU - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc0xc",
                "entity_name": "ASCAP Nashville - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc15z",
                "entity_name": "Gospel Twang Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gf_wz",
                "entity_name": "Van Richter Radio - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfwz7",
                "entity_name": "WAMU  88.5 FM . American University Radio - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfs4h",
                "entity_name": "Putumayo Radio. - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfw61",
                "entity_name": "RocklandUSA : Pop Rock - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gf_g7",
                "entity_name": "Dynamic Independent Radio - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg0bn",
                "entity_name": "ASCAP Playback - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gb_6_",
                "entity_name": "Music Illuminating Life - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gb__h",
                "entity_name": "SoulsVilleOnline.com - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gb_q3",
                "entity_name": "Classic Hits Radio - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gb_zy",
                "entity_name": "Santana Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbrfm",
                "entity_name": "90:00 Soccer Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbs40",
                "entity_name": "M3 Radio - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbs50",
                "entity_name": "Musical Justice Redux - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbs5j",
                "entity_name": "MusicalJustice.com - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbs6s",
                "entity_name": "Octane365 - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbw73",
                "entity_name": "60's Chicks - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbwcr",
                "entity_name": "Crazy Al's Radio Party - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbwd8",
                "entity_name": "Edgewater Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbwm9",
                "entity_name": "Music From The Bluelight - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbwp0",
                "entity_name": "Radio Orenovscotia - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbwy7",
                "entity_name": "12 Inch Retro - DJ Lex - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gbydl",
                "entity_name": "Wild 4 The 80's - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc056",
                "entity_name": "Youroldiesradio.com - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc0dx",
                "entity_name": "FAIRadio.net 2 - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc0mp",
                "entity_name": "Whisperings: Solo Piano Radio - 96kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc0mx",
                "entity_name": "Whisperings: Solo Piano Radio - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc0wv",
                "entity_name": "AllAboutCountryNewMusic - 48kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc14z",
                "entity_name": "Cowboy Up Radio - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc15g",
                "entity_name": "Gospel Grass - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc198",
                "entity_name": "KEWLcountry - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc2ps",
                "entity_name": "Party Country Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc2rs",
                "entity_name": "Radio Louisiana - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc2yd",
                "entity_name": "Variety96 COUNTRY - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc3mk",
                "entity_name": "iRadioNYC.com - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc4bx",
                "entity_name": "A Raging Dragon Radio - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc4lx",
                "entity_name": "Fistful of Soundtracks - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc4xr",
                "entity_name": "Lucky Dog Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc526",
                "entity_name": "Radio DavidByrne.com - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc595",
                "entity_name": "Seasons & Celebrations - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gc5d_",
                "entity_name": "Six Degrees Traveler - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gdb7j",
                "entity_name": "RAM Grass - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gdrh3",
                "entity_name": "Faultline Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gf5f4",
                "entity_name": "SacTownRadio - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gf__j",
                "entity_name": "DPE RADIO - Los Angeles - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gf_bq",
                "entity_name": "Bunk Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gf_h8",
                "entity_name": "Extreme Radio - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gf_wq",
                "entity_name": "Van Richter Radio - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gf_xs",
                "entity_name": "Wicked Jester Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfflf",
                "entity_name": "Urban Latino Hip Hop Show - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfqd3",
                "entity_name": "Christmas Music 24/7 - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfqg7",
                "entity_name": "WinterScapes - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfrxq",
                "entity_name": "Mandarin Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfryf",
                "entity_name": "Mediterranean Folk - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfs3y",
                "entity_name": "Pop Goes Asia - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfss9",
                "entity_name": "aTTeNTioN sPaN raDiO 1 - 24kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfssk",
                "entity_name": "aTTeNTioN sPaN raDiO 1 - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfst_",
                "entity_name": "aTTeNTioN sPaN raDiO 2 - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfsx1",
                "entity_name": "Dimensions in Jazz - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gft3q",
                "entity_name": "Pat Metheny - 96kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gftmg",
                "entity_name": "Codigoradio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfvc4",
                "entity_name": "ASCAP Pop/Rock - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfvgp",
                "entity_name": "Capital Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfvxr",
                "entity_name": "Melina Momma - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfw5h",
                "entity_name": "RocklandUSA : Pop Mix - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfwds",
                "entity_name": "WimaxRadio.FM Charts 07 - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfwtk",
                "entity_name": "KUSF 90.3 FM - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfwv2",
                "entity_name": "KXLU - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfxbs",
                "entity_name": "Dr Dick's Dub Shack - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfxny",
                "entity_name": "Acappella Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfxsm",
                "entity_name": "BlackGospel Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfxyq",
                "entity_name": "Church Beat Radio - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfxz9",
                "entity_name": "Classic Gospel Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfy5g",
                "entity_name": "eXTreme Gospel - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfy72",
                "entity_name": "Gospel Harmony Mix - 128kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfy7q",
                "entity_name": "heavenBound GB Ministry Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfy93",
                "entity_name": "Holy Revival Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfy_y",
                "entity_name": "The Prophetic Nation - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfyh3",
                "entity_name": "Life Talk Kids - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfyhp",
                "entity_name": "New Consciousness Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfyj7",
                "entity_name": "One Vibration Radio - 64kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfz2j",
                "entity_name": "VBS Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gfz7_",
                "entity_name": "YwePrayze FM - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg00t",
                "entity_name": "Prime USA Radio - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg0__",
                "entity_name": "New Dimensions - 56kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg0hm",
                "entity_name": "Big Soccer Radio - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg0m1",
                "entity_name": "Enlightenment Radio - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg0n5",
                "entity_name": "Free Capitalist Radio - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg0nx",
                "entity_name": "Hayhouse Radio-Radio for your Soul - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg0pg",
                "entity_name": "Its About Finance: News and CEO Interviews - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg11g",
                "entity_name": "Rainbow Soul - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg121",
                "entity_name": "REAL ESTATE NATION - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg171",
                "entity_name": "The History Capsule. - 16kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg17n",
                "entity_name": "Traders Nation - 32kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg1f6",
                "entity_name": "WineFairy, Inc. - 48kbps Stream"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gg1k2",
                "entity_name": "wsRadio - 32kbps Stream"
            }
        ]
    },
    {
        "qid": 474000001,
        "question": "what other infectious diseases could be caused by the same things that cause hiv?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0mh4s",
                "entity_name": "Gonorrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064fq",
                "entity_name": "Pelvic inflammatory disease"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01glh",
                "entity_name": "Bacterial vaginosis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0259ln",
                "entity_name": "Tinea cruris"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07y4wwh",
                "entity_name": "HTLV-I Infections"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dc5_q2",
                "entity_name": "Phthirus pubis infestation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqpg",
                "entity_name": "Kaposi's sarcoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.019syx",
                "entity_name": "Human papillomavirus infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gxbfm",
                "entity_name": "Herpes simplex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254yv",
                "entity_name": "Molluscum contagiosum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01qmrl",
                "entity_name": "Non-gonococcal urethritis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m72x",
                "entity_name": "Trichomoniasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yjzm",
                "entity_name": "Hepatitis A"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0167bx",
                "entity_name": "Hepatitis B"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01lvyl",
                "entity_name": "Lymphogranuloma venereum"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.disaster2.infectious_disease",
                    "class": "base.disaster2.infectious_disease",
                    "friendly_name": "Infectious disease",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "medicine.risk_factor",
                    "class": "medicine.risk_factor",
                    "friendly_name": "Risk Factor",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d19y2",
                    "class": "medicine.disease",
                    "friendly_name": "hiv",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "medicine.disease.risk_factors",
                    "friendly_name": "Risk Factors"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "medicine.risk_factor.diseases",
                    "friendly_name": "Diseases with this Risk Factor"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.disaster2.infectious_disease . \n?x1 :type.object.type :medicine.risk_factor . \nVALUES ?x2 { :m.0d19y2 } \n?x0 :medicine.disease.risk_factors ?x1 . \n?x1 :medicine.risk_factor.diseases ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(AND base.disaster2.infectious_disease (JOIN medicine.disease.risk_factors (JOIN medicine.risk_factor.diseases m.0d19y2)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0mh4s",
                "entity_name": "Gonorrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064fq",
                "entity_name": "Pelvic inflammatory disease"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01glh",
                "entity_name": "Bacterial vaginosis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0259ln",
                "entity_name": "Tinea cruris"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07y4wwh",
                "entity_name": "HTLV-I Infections"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dc5_q2",
                "entity_name": "Phthirus pubis infestation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bqpg",
                "entity_name": "Kaposi's sarcoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.019syx",
                "entity_name": "Human papillomavirus infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gxbfm",
                "entity_name": "Herpes simplex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gv",
                "entity_name": "Candidiasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254yv",
                "entity_name": "Molluscum contagiosum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01qmrl",
                "entity_name": "Non-gonococcal urethritis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m72x",
                "entity_name": "Trichomoniasis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yjzm",
                "entity_name": "Hepatitis A"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0167bx",
                "entity_name": "Hepatitis B"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01lvyl",
                "entity_name": "Lymphogranuloma venereum"
            }
        ]
    },
    {
        "qid": 434000101,
        "question": "what title was given to mj when he was inducted into the hall of fame?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.051rbly",
                "entity_name": "Performers"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "award.hall_of_fame_induction_category",
                    "class": "award.hall_of_fame_induction_category",
                    "friendly_name": "Hall of fame induction category",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "award.hall_of_fame_induction",
                    "class": "award.hall_of_fame_induction",
                    "friendly_name": "Hall of fame induction",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.09889g",
                    "class": "award.hall_of_fame_inductee",
                    "friendly_name": "mj",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "award.hall_of_fame_inductee.hall_of_fame_inductions",
                    "friendly_name": "Hall of fame inductions"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "award.hall_of_fame_induction.category",
                    "friendly_name": "Category"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :award.hall_of_fame_induction_category . \n?x1 :type.object.type :award.hall_of_fame_induction . \nVALUES ?x2 { :m.09889g } \n?x2 :award.hall_of_fame_inductee.hall_of_fame_inductions ?x1 . \n?x1 :award.hall_of_fame_induction.category ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "award"
        ],
        "s_expression": "(AND award.hall_of_fame_induction_category (JOIN (R award.hall_of_fame_induction.category) (JOIN (R award.hall_of_fame_inductee.hall_of_fame_inductions) m.09889g)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.051rbly",
                "entity_name": "Performers"
            }
        ]
    },
    {
        "qid": 276000400,
        "question": "what file format is multiple-image network graphics an extension of?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06279",
                "entity_name": "Portable Network Graphics"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.file_format",
                    "class": "computer.file_format",
                    "friendly_name": "File Format",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.052fr",
                    "class": "computer.file_format",
                    "friendly_name": "Multiple-image Network Graphics",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "computer.file_format.extended_from",
                    "friendly_name": "Extended From"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.file_format . \nVALUES ?x1 { :m.052fr } \n?x1 :computer.file_format.extended_from ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "computer"
        ],
        "s_expression": "(AND computer.file_format (JOIN (R computer.file_format.extended_from) m.052fr))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06279",
                "entity_name": "Portable Network Graphics"
            }
        ]
    },
    {
        "qid": 255000100,
        "question": "who made a significant influence on paul the apostle?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.045m1_",
                "entity_name": "Jesus Christ"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "influence.influence_node",
                    "class": "influence.influence_node",
                    "friendly_name": "Influence Node",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.060nc",
                    "class": "influence.influence_node",
                    "friendly_name": "Paul the Apostle",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "influence.influence_node.influenced",
                    "friendly_name": "Influenced"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :influence.influence_node . \nVALUES ?x1 { :m.060nc } \n?x0 :influence.influence_node.influenced ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "influence"
        ],
        "s_expression": "(AND influence.influence_node (JOIN influence.influence_node.influenced m.060nc))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.045m1_",
                "entity_name": "Jesus Christ"
            }
        ]
    },
    {
        "qid": 415000300,
        "question": "in which blocks of the periodic table has marie curie found an element?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0htq0",
                "entity_name": "p-block"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0htmp",
                "entity_name": "s-block"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "chemistry.periodic_table_block",
                    "class": "chemistry.periodic_table_block",
                    "friendly_name": "Periodic table block",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "chemistry.chemical_element",
                    "class": "chemistry.chemical_element",
                    "friendly_name": "Chemical Element",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.053_d",
                    "class": "chemistry.element_discoverer",
                    "friendly_name": "Marie Curie",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "chemistry.chemical_element.periodic_table_block",
                    "friendly_name": "Periodic table block"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "chemistry.chemical_element.discoverer",
                    "friendly_name": "Discoverer"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :chemistry.periodic_table_block . \n?x1 :type.object.type :chemistry.chemical_element . \nVALUES ?x2 { :m.053_d } \n?x1 :chemistry.chemical_element.periodic_table_block ?x0 . \n?x1 :chemistry.chemical_element.discoverer ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "chemistry"
        ],
        "s_expression": "(AND chemistry.periodic_table_block (JOIN (R chemistry.chemical_element.periodic_table_block) (JOIN chemistry.chemical_element.discoverer m.053_d)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0htq0",
                "entity_name": "p-block"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0htmp",
                "entity_name": "s-block"
            }
        ]
    },
    {
        "qid": 306000000,
        "question": "what is the name of the type of cricket match where each team has more than 1 inning?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zjx",
                "entity_name": "First-class cricket"
            }
        ],
        "function": ">",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cricket.cricket_match_type",
                    "class": "cricket.cricket_match_type",
                    "friendly_name": "Cricket Match Type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "1^^http://www.w3.org/2001/XMLSchema#integer",
                    "class": "type.int",
                    "friendly_name": "1",
                    "question_node": 0,
                    "function": ">"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "cricket.cricket_match_type.innings_per_team",
                    "friendly_name": "Innings Per Team"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cricket.cricket_match_type . \nFILTER (?x1 > \"1\"^^<http://www.w3.org/2001/XMLSchema#integer>)\n?x0 :cricket.cricket_match_type.innings_per_team ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "cricket"
        ],
        "s_expression": "(AND cricket.cricket_match_type (gt cricket.cricket_match_type.innings_per_team 1^^http://www.w3.org/2001/XMLSchema#integer))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zjx",
                "entity_name": "First-class cricket"
            }
        ]
    },
    {
        "qid": 444000001,
        "question": "electronic arts has how many games found in the us?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5",
                "entity_name": "5"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.game_version",
                    "class": "cvg.game_version",
                    "friendly_name": "Video Game Version",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01n073",
                    "class": "cvg.cvg_publisher",
                    "friendly_name": "Electronic Arts",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.09c7w0",
                    "class": "cvg.computer_game_region",
                    "friendly_name": "us",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "cvg.cvg_publisher.game_versions_published",
                    "friendly_name": "Game Versions Published"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "cvg.game_version.regions",
                    "friendly_name": "Regions"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.game_version . \nVALUES ?x1 { :m.01n073 } \nVALUES ?x2 { :m.09c7w0 } \n?x1 :cvg.cvg_publisher.game_versions_published ?x0 . \n?x0 :cvg.game_version.regions ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "cvg"
        ],
        "s_expression": "(COUNT (AND cvg.game_version (AND (JOIN (R cvg.cvg_publisher.game_versions_published) m.01n073) (JOIN cvg.game_version.regions m.09c7w0))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "5"
            }
        ]
    },
    {
        "qid": 340000000,
        "question": "what breeds of cat are there?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0132wl",
                "entity_name": "Japanese Bobtail"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017fr0",
                "entity_name": "Balinese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09747c",
                "entity_name": "Abyssinian cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j60_",
                "entity_name": "American Curl"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012cc2",
                "entity_name": "Russian Blue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012k5z",
                "entity_name": "Munchkin cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012lnv",
                "entity_name": "Himalayan cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012ltm",
                "entity_name": "Birman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0132vv",
                "entity_name": "American Bobtail"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01rn4d",
                "entity_name": "Korat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027rfv_",
                "entity_name": "Cheetoh"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zg0m",
                "entity_name": "Chartreux"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zh3c",
                "entity_name": "Javanese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bx2rr",
                "entity_name": "Donskoy cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03c_kl",
                "entity_name": "Snowshoe cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03c_ndy",
                "entity_name": "Aegean cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04049n",
                "entity_name": "Sokoke"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt7yc",
                "entity_name": "Exotic Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt82m",
                "entity_name": "Japanese Bobtail Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt82s",
                "entity_name": "Munchkin Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt837",
                "entity_name": "Shorthair Curl"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt83w",
                "entity_name": "Minskin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.068m4y",
                "entity_name": "Savannah cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07451s",
                "entity_name": "American Wirehair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.081lg8",
                "entity_name": "Peterbald"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cb37",
                "entity_name": "British Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dpc0v",
                "entity_name": "German Rex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jc3n",
                "entity_name": "Exotic Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zkf9",
                "entity_name": "Turkish Angora"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012jg5",
                "entity_name": "Manx cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012jgm",
                "entity_name": "Cymric cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012jh9",
                "entity_name": "Scottish Fold"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zfy2",
                "entity_name": "Bombay cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zjz9",
                "entity_name": "Oriental Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zkbf",
                "entity_name": "Siberian cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_27x",
                "entity_name": "Chausie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.043lfs6",
                "entity_name": "Ukrainian Levkoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.049dpf",
                "entity_name": "Ojos Azules"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt82y",
                "entity_name": "Munchkin Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05q5v1v",
                "entity_name": "Kurilian Bobtail"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.086tnk",
                "entity_name": "Serengeti cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0891tx",
                "entity_name": "Toyger"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.089hrx",
                "entity_name": "Ussuri"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09b5_s",
                "entity_name": "Asian Semi-longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0djkp8",
                "entity_name": "LaPerm"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gzxy",
                "entity_name": "Bengal cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h4sv",
                "entity_name": "Selkirk Rex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j46v",
                "entity_name": "Persian cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j60j",
                "entity_name": "Maine Coon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt83d",
                "entity_name": "European Burmese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zfvv",
                "entity_name": "American Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02w7c7",
                "entity_name": "Ragdoll"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.petbreeds.cat_breed",
                    "class": "base.petbreeds.cat_breed",
                    "friendly_name": "Cat Breed",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01yrx",
                    "class": "biology.domesticated_animal",
                    "friendly_name": "Cat",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "biology.domesticated_animal.breeds",
                    "friendly_name": "Breeds"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.petbreeds.cat_breed . \nVALUES ?x1 { :m.01yrx } \n?x1 :biology.domesticated_animal.breeds ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "biology"
        ],
        "s_expression": "(AND base.petbreeds.cat_breed (JOIN (R biology.domesticated_animal.breeds) m.01yrx))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0132wl",
                "entity_name": "Japanese Bobtail"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ttd9",
                "entity_name": "Pixie-bob"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017fr0",
                "entity_name": "Balinese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09747c",
                "entity_name": "Abyssinian cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j60_",
                "entity_name": "American Curl"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012cc2",
                "entity_name": "Russian Blue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012k5z",
                "entity_name": "Munchkin cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012k6q",
                "entity_name": "Ocicat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012lnv",
                "entity_name": "Himalayan cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012lr2",
                "entity_name": "Devon Rex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012ltm",
                "entity_name": "Birman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012zzh",
                "entity_name": "Somali cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0132vv",
                "entity_name": "American Bobtail"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017fsk",
                "entity_name": "Norwegian Forest cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01mvkt",
                "entity_name": "Burmese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01rn4d",
                "entity_name": "Korat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027rfv_",
                "entity_name": "Cheetoh"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qlzz",
                "entity_name": "Havana Brown"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02wt_k",
                "entity_name": "California Spangled"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zg0m",
                "entity_name": "Chartreux"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zh3c",
                "entity_name": "Javanese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zkd7",
                "entity_name": "Singapura cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bx2rr",
                "entity_name": "Donskoy cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03c_kl",
                "entity_name": "Snowshoe cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03c_ndy",
                "entity_name": "Aegean cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04049n",
                "entity_name": "Sokoke"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt7yc",
                "entity_name": "Exotic Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt82m",
                "entity_name": "Japanese Bobtail Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt82s",
                "entity_name": "Munchkin Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt837",
                "entity_name": "Shorthair Curl"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt83w",
                "entity_name": "Minskin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.068m4y",
                "entity_name": "Savannah cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07451s",
                "entity_name": "American Wirehair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07nnhk",
                "entity_name": "Oriental Longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.081lg8",
                "entity_name": "Peterbald"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08b02s",
                "entity_name": "British Semi-longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08nhst",
                "entity_name": "Ragamuffin cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cb37",
                "entity_name": "British Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dpc0v",
                "entity_name": "German Rex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jc3n",
                "entity_name": "Exotic Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zkf9",
                "entity_name": "Turkish Angora"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012jg5",
                "entity_name": "Manx cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012jgm",
                "entity_name": "Cymric cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012jh9",
                "entity_name": "Scottish Fold"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017fv0",
                "entity_name": "Nebelung"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0229mb",
                "entity_name": "Egyptian Mau"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02s4ff",
                "entity_name": "Tonkinese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zfy2",
                "entity_name": "Bombay cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zjz9",
                "entity_name": "Oriental Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zkbf",
                "entity_name": "Siberian cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_27x",
                "entity_name": "Chausie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.043lfs6",
                "entity_name": "Ukrainian Levkoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.049dpf",
                "entity_name": "Ojos Azules"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04c41_",
                "entity_name": "European Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt82y",
                "entity_name": "Munchkin Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt832",
                "entity_name": "Ruffle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04myxc",
                "entity_name": "Burmilla"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05q5v1v",
                "entity_name": "Kurilian Bobtail"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.086tnk",
                "entity_name": "Serengeti cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0891tx",
                "entity_name": "Toyger"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.089hrx",
                "entity_name": "Ussuri"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09b5_s",
                "entity_name": "Asian Semi-longhair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0djkp8",
                "entity_name": "LaPerm"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g_3r",
                "entity_name": "Siamese cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gzxy",
                "entity_name": "Bengal cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h4sv",
                "entity_name": "Selkirk Rex"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h5fb",
                "entity_name": "Sphynx cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j45k",
                "entity_name": "Turkish Van"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j46v",
                "entity_name": "Persian cat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j60j",
                "entity_name": "Maine Coon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt83d",
                "entity_name": "European Burmese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zfvv",
                "entity_name": "American Shorthair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02w7c7",
                "entity_name": "Ragdoll"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h05_",
                "entity_name": "Cornish Rex"
            }
        ]
    },
    {
        "qid": 297000502,
        "question": "the new york fire department has how many firefighters?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "17",
                "entity_name": "17"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.fires.firefighter",
                    "class": "base.fires.firefighter",
                    "friendly_name": "Firefighter",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01q7bh",
                    "class": "base.fires.fire_department",
                    "friendly_name": "new york fire department",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.fires.firefighter.belongs_to_fire_department",
                    "friendly_name": "Belongs to fire department"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.fires.firefighter . \nVALUES ?x1 { :m.01q7bh } \n?x0 :base.fires.firefighter.belongs_to_fire_department ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(COUNT (AND base.fires.firefighter (JOIN base.fires.firefighter.belongs_to_fire_department m.01q7bh)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "17"
            }
        ]
    },
    {
        "qid": 314000101,
        "question": "how many kinds of digital camera are produced by hp?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5",
                "entity_name": "5"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "digicams.digital_camera",
                    "class": "digicams.digital_camera",
                    "friendly_name": "Digital Camera",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03mnk",
                    "class": "digicams.digital_camera_manufacturer",
                    "friendly_name": "hp",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "digicams.digital_camera_manufacturer.cameras",
                    "friendly_name": "Cameras"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :digicams.digital_camera . \nVALUES ?x1 { :m.03mnk } \n?x1 :digicams.digital_camera_manufacturer.cameras ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "digicams"
        ],
        "s_expression": "(COUNT (AND digicams.digital_camera (JOIN (R digicams.digital_camera_manufacturer.cameras) m.03mnk)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "7"
            }
        ]
    },
    {
        "qid": 312000100,
        "question": "how many founders does food and drug administration have?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2",
                "entity_name": "2"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "organization.organization_founder",
                    "class": "organization.organization_founder",
                    "friendly_name": "Organization founder",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.032mx",
                    "class": "government.government_agency",
                    "friendly_name": "Food and Drug Administration",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "organization.organization.founders",
                    "friendly_name": "Founders"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :organization.organization_founder . \nVALUES ?x1 { :m.032mx } \n?x1 :organization.organization.founders ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "organization"
        ],
        "s_expression": "(COUNT (AND organization.organization_founder (JOIN (R organization.organization.founders) m.032mx)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ]
    },
    {
        "qid": 432000300,
        "question": "to cook arroz con pollo what tools are needed?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xnc_",
                "entity_name": "Dutch oven"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "food.culinary_tool",
                    "class": "food.culinary_tool",
                    "friendly_name": "Culinary tool",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "food.recipe",
                    "class": "food.recipe",
                    "friendly_name": "Recipe",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.08wcf_",
                    "class": "base.ovguide.spanish_cuisine_dishes",
                    "friendly_name": "Arroz con pollo",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "food.recipe.equipment",
                    "friendly_name": "Equipment"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "food.dish.recipes",
                    "friendly_name": "Recipes"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :food.culinary_tool . \n?x1 :type.object.type :food.recipe . \nVALUES ?x2 { :m.08wcf_ } \n?x1 :food.recipe.equipment ?x0 . \n?x2 :food.dish.recipes ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "food"
        ],
        "s_expression": "(AND food.culinary_tool (JOIN (R food.recipe.equipment) (JOIN (R food.dish.recipes) m.08wcf_)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xnc_",
                "entity_name": "Dutch oven"
            }
        ]
    },
    {
        "qid": 371000001,
        "question": "what is the name of the hospital that the architecture firm shepley, rutan & coolidge built?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04gtf71",
                "entity_name": "Medfield State Hospital"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.hospital",
                    "class": "medicine.hospital",
                    "friendly_name": "Hospital",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0ksx3t",
                    "class": "architecture.architecture_firm",
                    "friendly_name": "shepley, rutan & coolidge",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "architecture.architecture_firm.projects",
                    "friendly_name": "Projects"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.hospital . \nVALUES ?x1 { :m.0ksx3t } \n?x1 :architecture.architecture_firm.projects ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "architecture"
        ],
        "s_expression": "(AND medicine.hospital (JOIN (R architecture.architecture_firm.projects) m.0ksx3t))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04gtf71",
                "entity_name": "Medfield State Hospital"
            }
        ]
    },
    {
        "qid": 353000000,
        "question": "new york city hosts which film festivals?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03yd6z6",
                "entity_name": "First Run Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gvsq87",
                "entity_name": "Film Crash"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011b_cnp",
                "entity_name": "Irish Film New York"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_tfhg0",
                "entity_name": "New York D\u00e9nouement Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010pkdps",
                "entity_name": "KINO! Festival of German Films"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011lz941",
                "entity_name": "Albanian Film Week Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rynh9",
                "entity_name": "Animation Block Party"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01166dgy",
                "entity_name": "Cinefest"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05y4qb",
                "entity_name": "New York Asian Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.080mly4",
                "entity_name": "ASIFA-East Animation Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c1035",
                "entity_name": "MIX NYC"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jt1jx_",
                "entity_name": "New York Indian Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011m51jg",
                "entity_name": "Epiphany Children's Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010xf0k7",
                "entity_name": "Metropolitan Film Festival of New York"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026zw8z",
                "entity_name": "Acefest"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011dd3_y",
                "entity_name": "Golden Egg Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g4w11l",
                "entity_name": "South Asian International Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j53753",
                "entity_name": "Big Apple Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cypqg",
                "entity_name": "Margaret Mead Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lt20l5",
                "entity_name": "Dance On Camera"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pyk9f",
                "entity_name": "Visionfest"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jk4mf4",
                "entity_name": "Urbanworld Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j_jy1t",
                "entity_name": "New York City Greek Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0105wfhm",
                "entity_name": "Chain NYC Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gcqryg",
                "entity_name": "Documentary Fortnight: MoMA\u2019s International Festival of Nonfiction Film and Media"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gxzwd_",
                "entity_name": "Japan Cuts"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09gcvsb",
                "entity_name": "Film Comment Selects"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09pth_",
                "entity_name": "New York Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ds53vb",
                "entity_name": "Israel Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0br0q9",
                "entity_name": "New York Lesbian, Gay, Bisexual, & Transgender Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07n9qtt",
                "entity_name": "Queer Black Cinema International Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02q4f4b",
                "entity_name": "Chinatown film festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06ryh7",
                "entity_name": "Tribeca Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j_m44q",
                "entity_name": "New York New Directors and New Films Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0clnv3",
                "entity_name": "New York International Independent Film and Video Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0z6fkkj",
                "entity_name": "Rooftop Films Summer Series"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0105ts2_",
                "entity_name": "Friars Club Comedy Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01183rm7",
                "entity_name": "The Philip K. Dick Science Fiction Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_hmvtq",
                "entity_name": "Be Film - The Underground Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n632nx",
                "entity_name": "NYC Independent Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nyglns",
                "entity_name": "Manhattan Short Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010r99c1",
                "entity_name": "Brazilian Film Festival of New York"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gj93ps",
                "entity_name": "Zero Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0114c8c0",
                "entity_name": "NY Portuguese Short Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05qf0d",
                "entity_name": "New York Underground Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0r9ltx9",
                "entity_name": "Athena Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_y264k",
                "entity_name": "Korean American Film Festival New York"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z4hp5",
                "entity_name": "Rooftop Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01149klh",
                "entity_name": "Sprout Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011nsjsz",
                "entity_name": "Video Art & Experimental Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010nr_wm",
                "entity_name": "First Time Fest"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010gw_d6",
                "entity_name": "All-American High School Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010llqny",
                "entity_name": "LA Di DA film festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0116w7km",
                "entity_name": "Havana Film Festival New York"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.047flwp",
                "entity_name": "PictureStart Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011nqh1q",
                "entity_name": "The New York WILD Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r7t4j",
                "entity_name": "Bicycle Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h63plw",
                "entity_name": "New York Film Festival Downtown"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010pndvd",
                "entity_name": "BAMcinemaFest"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xcnvp",
                "entity_name": "New York International Children's Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0113w7hp",
                "entity_name": "Reel China Documentary Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010h4mcy",
                "entity_name": "New York Turkish Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011c3djg",
                "entity_name": "HDFEST\u00ae"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_xpr6k",
                "entity_name": "Greenpoint Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bctnw",
                "entity_name": "New York City Horror Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j63jxy",
                "entity_name": "New York Polish Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0r5f0n8",
                "entity_name": "Cinekink Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0116wkss",
                "entity_name": "Other Israel Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05h4sv_",
                "entity_name": "New York Sephardic Jewish Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0sw97hd",
                "entity_name": "Manhattan Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0115vk5r",
                "entity_name": "The People\u2019s Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010p3nhk",
                "entity_name": "The Iron Mule Short Comedy Screening Series"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010qvmf2",
                "entity_name": "NY Shorts Fest"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jj1_x",
                "entity_name": "New York International Latino Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010gyvtv",
                "entity_name": "Fusion Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j6n04y",
                "entity_name": "NewFilmmakers New York"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0113zcjs",
                "entity_name": "Shadow Box Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010g996z",
                "entity_name": "African American Women In Cinema International Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010qrl_y",
                "entity_name": "Corto Circuito Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kd8ryt",
                "entity_name": "New York City International Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pr60n",
                "entity_name": "Film Collection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01124_j3",
                "entity_name": "Winter Film Awards Independent Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010l0b3c",
                "entity_name": "Human Rights Film Festival of Barcelona"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0qz7zfl",
                "entity_name": "Chashama Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bmjn6h",
                "entity_name": "Asian American International Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011m3jzb",
                "entity_name": "Red Hook Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b4t1z",
                "entity_name": "New York Korean Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05q975x",
                "entity_name": "New York Short Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.078psg",
                "entity_name": "Chechnya Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010qw3vd",
                "entity_name": "BeFilm The Underground Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n862nz",
                "entity_name": "NYC Downtown Short Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010vbr81",
                "entity_name": "Brownfish Short Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064p28c",
                "entity_name": "The United Film Festivals"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010q2xqc",
                "entity_name": "Architecture & Design Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0109hqh5",
                "entity_name": "Migrating Forms"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011mctmb",
                "entity_name": "NYLA International Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010p2wy3",
                "entity_name": "Cine Gear Expo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j967xw",
                "entity_name": "Soho International Film Festival"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "film.film_festival",
                    "class": "film.film_festival",
                    "friendly_name": "Film festival",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02_286",
                    "class": "location.hud_county_place",
                    "friendly_name": "New York City",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "film.film_festival.location",
                    "friendly_name": "Location"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :film.film_festival . \nVALUES ?x1 { :m.02_286 } \n?x0 :film.film_festival.location ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "film"
        ],
        "s_expression": "(AND film.film_festival (JOIN film.film_festival.location m.02_286))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03yd6z6",
                "entity_name": "First Run Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gvrjjp",
                "entity_name": "New York Jewish Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gvsq87",
                "entity_name": "Film Crash"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011b_cnp",
                "entity_name": "Irish Film New York"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_tfhg0",
                "entity_name": "New York D\u00e9nouement Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010pkdps",
                "entity_name": "KINO! Festival of German Films"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011lz941",
                "entity_name": "Albanian Film Week Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rynh9",
                "entity_name": "Animation Block Party"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01166dgy",
                "entity_name": "Cinefest"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05y4qb",
                "entity_name": "New York Asian Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.080mly4",
                "entity_name": "ASIFA-East Animation Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c1035",
                "entity_name": "MIX NYC"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jt1jx_",
                "entity_name": "New York Indian Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011m51jg",
                "entity_name": "Epiphany Children's Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010xf0k7",
                "entity_name": "Metropolitan Film Festival of New York"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026zw8z",
                "entity_name": "Acefest"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011dd3_y",
                "entity_name": "Golden Egg Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g4w11l",
                "entity_name": "South Asian International Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j53753",
                "entity_name": "Big Apple Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cypqg",
                "entity_name": "Margaret Mead Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lt20l5",
                "entity_name": "Dance On Camera"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pyk9f",
                "entity_name": "Visionfest"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jk4mf4",
                "entity_name": "Urbanworld Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j_jy1t",
                "entity_name": "New York City Greek Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0105wfhm",
                "entity_name": "Chain NYC Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gcqryg",
                "entity_name": "Documentary Fortnight: MoMA\u2019s International Festival of Nonfiction Film and Media"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gxzwd_",
                "entity_name": "Japan Cuts"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09gcvsb",
                "entity_name": "Film Comment Selects"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g8nw0s",
                "entity_name": "DocuWeeks Theatrical Documentary Showcase"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09pth_",
                "entity_name": "New York Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ds53vb",
                "entity_name": "Israel Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0br0q9",
                "entity_name": "New York Lesbian, Gay, Bisexual, & Transgender Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07n9qtt",
                "entity_name": "Queer Black Cinema International Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02q4f4b",
                "entity_name": "Chinatown film festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06ryh7",
                "entity_name": "Tribeca Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j_m44q",
                "entity_name": "New York New Directors and New Films Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0clnv3",
                "entity_name": "New York International Independent Film and Video Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.080jlwg",
                "entity_name": "City University Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0z6fkkj",
                "entity_name": "Rooftop Films Summer Series"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0105ts2_",
                "entity_name": "Friars Club Comedy Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01183rm7",
                "entity_name": "The Philip K. Dick Science Fiction Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_hmvtq",
                "entity_name": "Be Film - The Underground Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n632nx",
                "entity_name": "NYC Independent Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nyglns",
                "entity_name": "Manhattan Short Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0k92d7q",
                "entity_name": "ReelAbilities"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010r99c1",
                "entity_name": "Brazilian Film Festival of New York"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gb5y_6",
                "entity_name": "Columbia University Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gj93ps",
                "entity_name": "Zero Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0114c8c0",
                "entity_name": "NY Portuguese Short Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05qf0d",
                "entity_name": "New York Underground Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0r9ltx9",
                "entity_name": "Athena Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_y264k",
                "entity_name": "Korean American Film Festival New York"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z4hp5",
                "entity_name": "Rooftop Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04n3__8",
                "entity_name": "African Diaspora Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01149klh",
                "entity_name": "Sprout Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011nsjsz",
                "entity_name": "Video Art & Experimental Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010nr_wm",
                "entity_name": "First Time Fest"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010gw_d6",
                "entity_name": "All-American High School Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010llqny",
                "entity_name": "LA Di DA film festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0116w7km",
                "entity_name": "Havana Film Festival New York"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.047flwp",
                "entity_name": "PictureStart Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011nqh1q",
                "entity_name": "The New York WILD Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r7t4j",
                "entity_name": "Bicycle Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h63plw",
                "entity_name": "New York Film Festival Downtown"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010pndvd",
                "entity_name": "BAMcinemaFest"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xcnvp",
                "entity_name": "New York International Children's Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0113w7hp",
                "entity_name": "Reel China Documentary Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010p366w",
                "entity_name": "DOC NYC"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010h4mcy",
                "entity_name": "New York Turkish Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011c3djg",
                "entity_name": "HDFEST\u00ae"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_xpr6k",
                "entity_name": "Greenpoint Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bctnw",
                "entity_name": "New York City Horror Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j63jxy",
                "entity_name": "New York Polish Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0r5f0n8",
                "entity_name": "Cinekink Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0116wkss",
                "entity_name": "Other Israel Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05h4sv_",
                "entity_name": "New York Sephardic Jewish Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0sw97hd",
                "entity_name": "Manhattan Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010r59n1",
                "entity_name": "NBCU Short Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.057r38",
                "entity_name": "Native American Film and Video Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0115vk5r",
                "entity_name": "The People\u2019s Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010p3nhk",
                "entity_name": "The Iron Mule Short Comedy Screening Series"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010qvmf2",
                "entity_name": "NY Shorts Fest"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jj1_x",
                "entity_name": "New York International Latino Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010gyvtv",
                "entity_name": "Fusion Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j6n04y",
                "entity_name": "NewFilmmakers New York"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0113zcjs",
                "entity_name": "Shadow Box Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010g996z",
                "entity_name": "African American Women In Cinema International Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010qrl_y",
                "entity_name": "Corto Circuito Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kd8ryt",
                "entity_name": "New York City International Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pr60n",
                "entity_name": "Film Collection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01124_j3",
                "entity_name": "Winter Film Awards Independent Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010l0b3c",
                "entity_name": "Human Rights Film Festival of Barcelona"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0qz7zfl",
                "entity_name": "Chashama Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bmjn6h",
                "entity_name": "Asian American International Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011m3jzb",
                "entity_name": "Red Hook Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b4t1z",
                "entity_name": "New York Korean Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027530n",
                "entity_name": "New York International Documentary Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05q975x",
                "entity_name": "New York Short Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.078psg",
                "entity_name": "Chechnya Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010qw3vd",
                "entity_name": "BeFilm The Underground Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n862nz",
                "entity_name": "NYC Downtown Short Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010vbr81",
                "entity_name": "Brownfish Short Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064p28c",
                "entity_name": "The United Film Festivals"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010q2xqc",
                "entity_name": "Architecture & Design Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0109hqh5",
                "entity_name": "Migrating Forms"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011mctmb",
                "entity_name": "NYLA International Film Festival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010p2wy3",
                "entity_name": "Cine Gear Expo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j967xw",
                "entity_name": "Soho International Film Festival"
            }
        ]
    },
    {
        "qid": 445000400,
        "question": "the smallest electrical charge in the quark family belongs to which subatomic particle?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.094nrqp",
                "entity_name": "Top antiquark"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.093bvm7",
                "entity_name": "Up antiquark"
            }
        ],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "physics.particle",
                    "class": "physics.particle",
                    "friendly_name": "Subatomic particle",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0695j",
                    "class": "physics.particle_family",
                    "friendly_name": "Quark",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "physics.particle_family.particles",
                    "friendly_name": "Particles"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "physics.particle.electric_charge",
                    "friendly_name": "Electric charge"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :physics.particle . \nVALUES ?x1 { :m.0695j } \n{\nSELECT (MIN(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :physics.particle . \nVALUES ?y1 { :m.0695j } \n?y1 :physics.particle_family.particles ?y0 . \n?y0 :physics.particle.electric_charge ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :physics.particle_family.particles ?x0 . \n?x0 :physics.particle.electric_charge ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "physics"
        ],
        "s_expression": "(ARGMIN (AND physics.particle (JOIN (R physics.particle_family.particles) m.0695j)) physics.particle.electric_charge)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.093vy16",
                "entity_name": "Charm antiquark"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.094nrqp",
                "entity_name": "Top antiquark"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.093bvm7",
                "entity_name": "Up antiquark"
            }
        ]
    },
    {
        "qid": 485000201,
        "question": "who made the discovery of both the o and some halogen element?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g68n",
                "entity_name": "Carl Wilhelm Scheele"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "chemistry.element_discoverer",
                    "class": "chemistry.element_discoverer",
                    "friendly_name": "Chemical Element Discoverer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "chemistry.chemical_element",
                    "class": "chemistry.chemical_element",
                    "friendly_name": "Chemical Element",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.025s6bf",
                    "class": "chemistry.chemical_element",
                    "friendly_name": "o",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.03gcp",
                    "class": "chemistry.chemical_series",
                    "friendly_name": "Halogen",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "chemistry.chemical_element.discoverer",
                    "friendly_name": "Discoverer"
                },
                {
                    "start": 3,
                    "end": 1,
                    "relation": "chemistry.chemical_series.elements",
                    "friendly_name": "Elements"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "chemistry.chemical_element.discoverer",
                    "friendly_name": "Discoverer"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :chemistry.element_discoverer . \n?x1 :type.object.type :chemistry.chemical_element . \nVALUES ?x2 { :m.025s6bf } \nVALUES ?x3 { :m.03gcp } \n?x1 :chemistry.chemical_element.discoverer ?x0 . \n?x3 :chemistry.chemical_series.elements ?x1 . \n?x2 :chemistry.chemical_element.discoverer ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "chemistry"
        ],
        "s_expression": "(AND chemistry.element_discoverer (AND (JOIN (R chemistry.chemical_element.discoverer) (JOIN (R chemistry.chemical_series.elements) m.03gcp)) (JOIN (R chemistry.chemical_element.discoverer) m.025s6bf)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g68n",
                "entity_name": "Carl Wilhelm Scheele"
            }
        ]
    },
    {
        "qid": 404000400,
        "question": "which species are critically endangered?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f89mk",
                "entity_name": "Cuban kite"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.conservation.protected_species",
                    "class": "base.conservation.protected_species",
                    "friendly_name": "Protected Species",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.conservation.protected_species_status",
                    "class": "base.conservation.protected_species_status",
                    "friendly_name": "Protected Species Status",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0cgnb7",
                    "class": "base.conservation.conservation_status_designation",
                    "friendly_name": "Critically Endangered",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.conservation.protected_species_status.protected_species",
                    "friendly_name": "Protected Species"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.conservation.protected_species_status.status_designation",
                    "friendly_name": "Status Designation"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.conservation.protected_species . \n?x1 :type.object.type :base.conservation.protected_species_status . \nVALUES ?x2 { :m.0cgnb7 } \n?x1 :base.conservation.protected_species_status.protected_species ?x0 . \n?x1 :base.conservation.protected_species_status.status_designation ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.conservation.protected_species (JOIN (R base.conservation.protected_species_status.protected_species) (JOIN base.conservation.protected_species_status.status_designation m.0cgnb7)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f89mk",
                "entity_name": "Cuban kite"
            }
        ]
    },
    {
        "qid": 264000202,
        "question": "the picmicro is produced by what company?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c5zfd",
                "entity_name": "Microchip Technology"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "computer.processor_manufacturer",
                    "class": "computer.processor_manufacturer",
                    "friendly_name": "Processor Manufacturer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0196qx",
                    "class": "computer.computer_processor",
                    "friendly_name": "picmicro",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "computer.computer_processor.manufacturers",
                    "friendly_name": "Manufacturers"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :computer.processor_manufacturer . \nVALUES ?x1 { :m.0196qx } \n?x1 :computer.computer_processor.manufacturers ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "computer"
        ],
        "s_expression": "(AND computer.processor_manufacturer (JOIN (R computer.computer_processor.manufacturers) m.0196qx))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c5zfd",
                "entity_name": "Microchip Technology"
            }
        ]
    },
    {
        "qid": 357000402,
        "question": "which type of gameplay mode is secondlife most considered?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01z747",
                "entity_name": "Multiplayer video game"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.gameplay_mode",
                    "class": "cvg.gameplay_mode",
                    "friendly_name": "Gameplay Mode",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02sz9d",
                    "class": "cvg.computer_videogame",
                    "friendly_name": "secondlife",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "cvg.computer_videogame.gameplay_modes",
                    "friendly_name": "Gameplay modes"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.gameplay_mode . \nVALUES ?x1 { :m.02sz9d } \n?x1 :cvg.computer_videogame.gameplay_modes ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "cvg"
        ],
        "s_expression": "(AND cvg.gameplay_mode (JOIN (R cvg.computer_videogame.gameplay_modes) m.02sz9d))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01z747",
                "entity_name": "Multiplayer video game"
            }
        ]
    },
    {
        "qid": 483000301,
        "question": "who designed an aircraft model that is comparable with a380?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.027nt7j",
                "entity_name": "Joe Sutter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ctgc",
                "entity_name": "Antonov"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "aviation.aircraft_designer",
                    "class": "aviation.aircraft_designer",
                    "friendly_name": "Aircraft designer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "aviation.aircraft_model",
                    "class": "aviation.aircraft_model",
                    "friendly_name": "Aircraft model",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "aviation.comparable_aircraft_relationship",
                    "class": "aviation.comparable_aircraft_relationship",
                    "friendly_name": "Comparable Aircraft Relationship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.018rl2",
                    "class": "aviation.aircraft_model",
                    "friendly_name": "a380",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "aviation.aircraft_designer.aircraft_models_designed",
                    "friendly_name": "Aircraft models designed"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "aviation.comparable_aircraft_relationship.aircraft",
                    "friendly_name": "Aircraft"
                },
                {
                    "start": 3,
                    "end": 2,
                    "relation": "aviation.aircraft_model.comparable_aircraft",
                    "friendly_name": "Comparable Aircraft"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :aviation.aircraft_designer . \n?x1 :type.object.type :aviation.aircraft_model . \n?x2 :type.object.type :aviation.comparable_aircraft_relationship . \nVALUES ?x3 { :m.018rl2 } \n?x0 :aviation.aircraft_designer.aircraft_models_designed ?x1 . \n?x2 :aviation.comparable_aircraft_relationship.aircraft ?x1 . \n?x3 :aviation.aircraft_model.comparable_aircraft ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "aviation"
        ],
        "s_expression": "(AND aviation.aircraft_designer (JOIN aviation.aircraft_designer.aircraft_models_designed (JOIN (R aviation.comparable_aircraft_relationship.aircraft) (JOIN (R aviation.aircraft_model.comparable_aircraft) m.018rl2))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.027nt7j",
                "entity_name": "Joe Sutter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ctgc",
                "entity_name": "Antonov"
            }
        ]
    },
    {
        "qid": 444000202,
        "question": "how many electronic arts games are available for purchase in the united states?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5",
                "entity_name": "5"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.game_version",
                    "class": "cvg.game_version",
                    "friendly_name": "Video Game Version",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01n073",
                    "class": "cvg.cvg_publisher",
                    "friendly_name": "Electronic Arts",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.09c7w0",
                    "class": "cvg.computer_game_region",
                    "friendly_name": "united states",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "cvg.cvg_publisher.game_versions_published",
                    "friendly_name": "Game Versions Published"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "cvg.game_version.regions",
                    "friendly_name": "Regions"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.game_version . \nVALUES ?x1 { :m.01n073 } \nVALUES ?x2 { :m.09c7w0 } \n?x1 :cvg.cvg_publisher.game_versions_published ?x0 . \n?x0 :cvg.game_version.regions ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "cvg"
        ],
        "s_expression": "(COUNT (AND cvg.game_version (AND (JOIN (R cvg.cvg_publisher.game_versions_published) m.01n073) (JOIN cvg.game_version.regions m.09c7w0))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "5"
            }
        ]
    },
    {
        "qid": 404000301,
        "question": "list the species that is considered to be cr.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f89mk",
                "entity_name": "Cuban kite"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.conservation.protected_species",
                    "class": "base.conservation.protected_species",
                    "friendly_name": "Protected Species",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.conservation.protected_species_status",
                    "class": "base.conservation.protected_species_status",
                    "friendly_name": "Protected Species Status",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0cgnb7",
                    "class": "base.conservation.conservation_status_designation",
                    "friendly_name": "cr",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.conservation.protected_species_status.protected_species",
                    "friendly_name": "Protected Species"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.conservation.protected_species_status.status_designation",
                    "friendly_name": "Status Designation"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.conservation.protected_species . \n?x1 :type.object.type :base.conservation.protected_species_status . \nVALUES ?x2 { :m.0cgnb7 } \n?x1 :base.conservation.protected_species_status.protected_species ?x0 . \n?x1 :base.conservation.protected_species_status.status_designation ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.conservation.protected_species (JOIN (R base.conservation.protected_species_status.protected_species) (JOIN base.conservation.protected_species_status.status_designation m.0cgnb7)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f89mk",
                "entity_name": "Cuban kite"
            }
        ]
    },
    {
        "qid": 361000101,
        "question": "what is pavarotti's vocal range?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j862",
                "entity_name": "Tenor"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "music.voice",
                    "class": "music.voice",
                    "friendly_name": "Musical voice",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01h5j3",
                    "class": "music.opera_singer",
                    "friendly_name": "pavarotti",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.opera_singer.voice_type",
                    "friendly_name": "Voice Type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :music.voice . \nVALUES ?x1 { :m.01h5j3 } \n?x1 :music.opera_singer.voice_type ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "music"
        ],
        "s_expression": "(AND music.voice (JOIN (R music.opera_singer.voice_type) m.01h5j3))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j862",
                "entity_name": "Tenor"
            }
        ]
    },
    {
        "qid": 460000401,
        "question": "why did the saint francis dam fail?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.058_r3w",
                "entity_name": "Geological Instability"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.damsbase.dam_destruction_method",
                    "class": "base.damsbase.dam_destruction_method",
                    "friendly_name": "Dam Failure Cause",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.damsbase.dam_failure",
                    "class": "base.damsbase.dam_failure",
                    "friendly_name": "Dam Failure",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.026yjh",
                    "class": "base.engineering.dam",
                    "friendly_name": "saint francis dam",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.damsbase.dam_failure.cause_of_failure",
                    "friendly_name": "Cause of Failure"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.engineering.dam.failures",
                    "friendly_name": "Failures"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.damsbase.dam_destruction_method . \n?x1 :type.object.type :base.damsbase.dam_failure . \nVALUES ?x2 { :m.026yjh } \n?x1 :base.damsbase.dam_failure.cause_of_failure ?x0 . \n?x2 :base.engineering.dam.failures ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.damsbase.dam_destruction_method (JOIN (R base.damsbase.dam_failure.cause_of_failure) (JOIN (R base.engineering.dam.failures) m.026yjh)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.058_r3w",
                "entity_name": "Geological Instability"
            }
        ]
    },
    {
        "qid": 436000101,
        "question": "the largest unit of area in the si is called as?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jljd",
                "entity_name": "Square kilometer"
            }
        ],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "measurement_unit.area_unit",
                    "class": "measurement_unit.area_unit",
                    "friendly_name": "Unit of Area",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0c13h",
                    "class": "measurement_unit.measurement_system",
                    "friendly_name": "si",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "measurement_unit.area_unit.area_in_square_meters",
                    "friendly_name": "Area In Square Meters"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "measurement_unit.area_unit.measurement_system",
                    "friendly_name": "Measurement System"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :measurement_unit.area_unit . \n{\nSELECT (MAX(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :measurement_unit.area_unit . \nVALUES ?y2 { :m.0c13h } \n?y0 :measurement_unit.area_unit.area_in_square_meters ?y1 . \n?y0 :measurement_unit.area_unit.measurement_system ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\nVALUES ?x2 { :m.0c13h } \n?x0 :measurement_unit.area_unit.area_in_square_meters ?x1 . \n?x0 :measurement_unit.area_unit.measurement_system ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "measurement_unit"
        ],
        "s_expression": "(ARGMAX (AND measurement_unit.area_unit (JOIN measurement_unit.area_unit.measurement_system m.0c13h)) measurement_unit.area_unit.area_in_square_meters)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jljd",
                "entity_name": "Square kilometer"
            }
        ]
    },
    {
        "qid": 445000200,
        "question": "which quark family subatomic particle has the smallest electric charge?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.094nrqp",
                "entity_name": "Top antiquark"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.093bvm7",
                "entity_name": "Up antiquark"
            }
        ],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "physics.particle",
                    "class": "physics.particle",
                    "friendly_name": "Subatomic particle",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0695j",
                    "class": "physics.particle_family",
                    "friendly_name": "Quark",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "physics.particle_family.particles",
                    "friendly_name": "Particles"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "physics.particle.electric_charge",
                    "friendly_name": "Electric charge"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :physics.particle . \nVALUES ?x1 { :m.0695j } \n{\nSELECT (MIN(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :physics.particle . \nVALUES ?y1 { :m.0695j } \n?y1 :physics.particle_family.particles ?y0 . \n?y0 :physics.particle.electric_charge ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :physics.particle_family.particles ?x0 . \n?x0 :physics.particle.electric_charge ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "physics"
        ],
        "s_expression": "(ARGMIN (AND physics.particle (JOIN (R physics.particle_family.particles) m.0695j)) physics.particle.electric_charge)",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.093vy16",
                "entity_name": "Charm antiquark"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.094nrqp",
                "entity_name": "Top antiquark"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.093bvm7",
                "entity_name": "Up antiquark"
            }
        ]
    },
    {
        "qid": 268000100,
        "question": "francis bacon created what ciphers?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.056d01",
                "entity_name": "Bacon's cipher"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.cryptography.cipher",
                    "class": "base.cryptography.cipher",
                    "friendly_name": "Cipher",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.030dr",
                    "class": "base.cryptography.cryptographer",
                    "friendly_name": "Francis Bacon",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.cryptography.cryptographer.ciphers_created",
                    "friendly_name": "Ciphers created"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.cryptography.cipher . \nVALUES ?x1 { :m.030dr } \n?x1 :base.cryptography.cryptographer.ciphers_created ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.cryptography.cipher (JOIN (R base.cryptography.cryptographer.ciphers_created) m.030dr))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.056d01",
                "entity_name": "Bacon's cipher"
            }
        ]
    },
    {
        "qid": 299000100,
        "question": "which of the satellites orbiting the earth weigh 1768.0 kg or less?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.021y62_",
                "entity_name": "AcrimSat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027dbkk",
                "entity_name": "EgyptSat 1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jph4f",
                "entity_name": "Astra 3A"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04n35zv",
                "entity_name": "Astra 5A"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07cndv",
                "entity_name": "Astra 1A"
            }
        ],
        "function": "<=",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.satelites.earth_orbiting_satellite",
                    "class": "base.satelites.earth_orbiting_satellite",
                    "friendly_name": "Earth orbiting satellite",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "1768.0^^http://www.w3.org/2001/XMLSchema#double",
                    "class": "type.float",
                    "friendly_name": "1768.0",
                    "question_node": 0,
                    "function": "<="
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "spaceflight.satellite.launch_mass_kg",
                    "friendly_name": "Launch Mass"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.satelites.earth_orbiting_satellite . \nFILTER (?x1 <= \"1768.0\"^^<http://www.w3.org/2001/XMLSchema#double>)\n?x0 :spaceflight.satellite.launch_mass_kg ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "spaceflight"
        ],
        "s_expression": "(AND base.satelites.earth_orbiting_satellite (le spaceflight.satellite.launch_mass_kg 1768.0^^http://www.w3.org/2001/XMLSchema#double))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.021y62_",
                "entity_name": "AcrimSat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027dbkk",
                "entity_name": "EgyptSat 1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jph4f",
                "entity_name": "Astra 3A"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04n35zv",
                "entity_name": "Astra 5A"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07cndv",
                "entity_name": "Astra 1A"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.037vz_",
                "entity_name": "Vanguard 3"
            }
        ]
    },
    {
        "qid": 368000000,
        "question": "what musical games has nintendo created?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05r9g9",
                "entity_name": "Daigasso! Band Brothers"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.musical_game",
                    "class": "cvg.musical_game",
                    "friendly_name": "Musical Game",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.059wk",
                    "class": "cvg.cvg_designer",
                    "friendly_name": "Nintendo",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "cvg.cvg_designer.games_designed",
                    "friendly_name": "Games Designed"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.musical_game . \nVALUES ?x1 { :m.059wk } \n?x1 :cvg.cvg_designer.games_designed ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "cvg"
        ],
        "s_expression": "(AND cvg.musical_game (JOIN (R cvg.cvg_designer.games_designed) m.059wk))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05r9g9",
                "entity_name": "Daigasso! Band Brothers"
            }
        ]
    },
    {
        "qid": 273000302,
        "question": "identify all the states of the united states.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fkf",
                "entity_name": "North Carolina"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07h34",
                "entity_name": "Tennessee"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07z1m",
                "entity_name": "Virginia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gyh",
                "entity_name": "Alabama"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05k7sb",
                "entity_name": "Massachusetts"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01n4w",
                "entity_name": "Colorado"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ly1",
                "entity_name": "Louisiana"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06mz5",
                "entity_name": "South Dakota"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0vbk",
                "entity_name": "Arkansas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ych",
                "entity_name": "Missouri"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01n7q",
                "entity_name": "California"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026mj",
                "entity_name": "Delaware"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xry",
                "entity_name": "Florida"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gh4",
                "entity_name": "Hawaii"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03s0w",
                "entity_name": "Iowa"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03s5t",
                "entity_name": "Idaho"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03v0t",
                "entity_name": "Illinois"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03v1s",
                "entity_name": "Indiana"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0488g",
                "entity_name": "Kansas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0498y",
                "entity_name": "Kentucky"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rrd",
                "entity_name": "Maryland"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rrx",
                "entity_name": "Michigan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ykg",
                "entity_name": "Minnesota"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.050ks",
                "entity_name": "Maine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.050l8",
                "entity_name": "Montana"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059_c",
                "entity_name": "Nevada"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059f4",
                "entity_name": "New Hampshire"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059rby",
                "entity_name": "New York"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fhy",
                "entity_name": "Nebraska"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fjf",
                "entity_name": "New Jersey"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fjy",
                "entity_name": "New Mexico"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fky",
                "entity_name": "North Dakota"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kj_",
                "entity_name": "Oregon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kkh",
                "entity_name": "Ohio"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05mph",
                "entity_name": "Oklahoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06btq",
                "entity_name": "Rhode Island"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06yxd",
                "entity_name": "South Carolina"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07_f2",
                "entity_name": "Vermont"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07b_l",
                "entity_name": "Texas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07srw",
                "entity_name": "Utah"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.081mh",
                "entity_name": "West Virginia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0824r",
                "entity_name": "Wisconsin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0846v",
                "entity_name": "Wyoming"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d0x8",
                "entity_name": "Georgia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hjy",
                "entity_name": "Alaska"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0vmt",
                "entity_name": "Arizona"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.locations.states_and_provences",
                    "class": "base.locations.states_and_provences",
                    "friendly_name": "States and provinces",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.09c7w0",
                    "class": "base.locations.countries",
                    "friendly_name": "united states",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.locations.countries.states_provinces_within",
                    "friendly_name": "States/provinces within"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.locations.states_and_provences . \nVALUES ?x1 { :m.09c7w0 } \n?x1 :base.locations.countries.states_provinces_within ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.locations.states_and_provences (JOIN (R base.locations.countries.states_provinces_within) m.09c7w0))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fkf",
                "entity_name": "North Carolina"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07h34",
                "entity_name": "Tennessee"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07z1m",
                "entity_name": "Virginia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gyh",
                "entity_name": "Alabama"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05k7sb",
                "entity_name": "Massachusetts"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01n4w",
                "entity_name": "Colorado"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ly1",
                "entity_name": "Louisiana"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06mz5",
                "entity_name": "South Dakota"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0vbk",
                "entity_name": "Arkansas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ych",
                "entity_name": "Missouri"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05tbn",
                "entity_name": "Pennsylvania"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01n7q",
                "entity_name": "California"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01x73",
                "entity_name": "Connecticut"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026mj",
                "entity_name": "Delaware"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xry",
                "entity_name": "Florida"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gh4",
                "entity_name": "Hawaii"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03s0w",
                "entity_name": "Iowa"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03s5t",
                "entity_name": "Idaho"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03v0t",
                "entity_name": "Illinois"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03v1s",
                "entity_name": "Indiana"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0488g",
                "entity_name": "Kansas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0498y",
                "entity_name": "Kentucky"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rrd",
                "entity_name": "Maryland"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rrx",
                "entity_name": "Michigan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04tgp",
                "entity_name": "Mississippi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04ykg",
                "entity_name": "Minnesota"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.050ks",
                "entity_name": "Maine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.050l8",
                "entity_name": "Montana"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059_c",
                "entity_name": "Nevada"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059f4",
                "entity_name": "New Hampshire"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059rby",
                "entity_name": "New York"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fhy",
                "entity_name": "Nebraska"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fjf",
                "entity_name": "New Jersey"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fjy",
                "entity_name": "New Mexico"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fky",
                "entity_name": "North Dakota"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kj_",
                "entity_name": "Oregon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kkh",
                "entity_name": "Ohio"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05mph",
                "entity_name": "Oklahoma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06btq",
                "entity_name": "Rhode Island"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06yxd",
                "entity_name": "South Carolina"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07_f2",
                "entity_name": "Vermont"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07b_l",
                "entity_name": "Texas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07srw",
                "entity_name": "Utah"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.081mh",
                "entity_name": "West Virginia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.081yw",
                "entity_name": "Washington"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0824r",
                "entity_name": "Wisconsin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0846v",
                "entity_name": "Wyoming"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d0x8",
                "entity_name": "Georgia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hjy",
                "entity_name": "Alaska"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0vmt",
                "entity_name": "Arizona"
            }
        ]
    },
    {
        "qid": 317000400,
        "question": "the chromosome 11 (human) has how many genes?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "837",
                "entity_name": "837"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "biology.gene",
                    "class": "biology.gene",
                    "friendly_name": "Gene",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.099wcz",
                    "class": "biology.chromosome",
                    "friendly_name": "Chromosome 11 (human)",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "biology.chromosome.gene",
                    "friendly_name": "Gene"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :biology.gene . \nVALUES ?x1 { :m.099wcz } \n?x1 :biology.chromosome.gene ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "biology"
        ],
        "s_expression": "(COUNT (AND biology.gene (JOIN (R biology.chromosome.gene) m.099wcz)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "1226"
            }
        ]
    },
    {
        "qid": 444000201,
        "question": "how many electronic arts games are available for purchase in the us?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5",
                "entity_name": "5"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.game_version",
                    "class": "cvg.game_version",
                    "friendly_name": "Video Game Version",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01n073",
                    "class": "cvg.cvg_publisher",
                    "friendly_name": "Electronic Arts",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.09c7w0",
                    "class": "cvg.computer_game_region",
                    "friendly_name": "us",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "cvg.cvg_publisher.game_versions_published",
                    "friendly_name": "Game Versions Published"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "cvg.game_version.regions",
                    "friendly_name": "Regions"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.game_version . \nVALUES ?x1 { :m.01n073 } \nVALUES ?x2 { :m.09c7w0 } \n?x1 :cvg.cvg_publisher.game_versions_published ?x0 . \n?x0 :cvg.game_version.regions ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "cvg"
        ],
        "s_expression": "(COUNT (AND cvg.game_version (AND (JOIN (R cvg.cvg_publisher.game_versions_published) m.01n073) (JOIN cvg.game_version.regions m.09c7w0))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "5"
            }
        ]
    },
    {
        "qid": 297000400,
        "question": "how many firefighters does the new york city fire department have?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "17",
                "entity_name": "17"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.fires.firefighter",
                    "class": "base.fires.firefighter",
                    "friendly_name": "Firefighter",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01q7bh",
                    "class": "base.fires.fire_department",
                    "friendly_name": "New York City Fire Department",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.fires.firefighter.belongs_to_fire_department",
                    "friendly_name": "Belongs to fire department"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.fires.firefighter . \nVALUES ?x1 { :m.01q7bh } \n?x0 :base.fires.firefighter.belongs_to_fire_department ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(COUNT (AND base.fires.firefighter (JOIN base.fires.firefighter.belongs_to_fire_department m.01q7bh)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "17"
            }
        ]
    },
    {
        "qid": 368000200,
        "question": "find me musical games designed by nintendo.",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05r9g9",
                "entity_name": "Daigasso! Band Brothers"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "cvg.musical_game",
                    "class": "cvg.musical_game",
                    "friendly_name": "Musical Game",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.059wk",
                    "class": "cvg.cvg_designer",
                    "friendly_name": "Nintendo",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "cvg.cvg_designer.games_designed",
                    "friendly_name": "Games Designed"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :cvg.musical_game . \nVALUES ?x1 { :m.059wk } \n?x1 :cvg.cvg_designer.games_designed ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "cvg"
        ],
        "s_expression": "(AND cvg.musical_game (JOIN (R cvg.cvg_designer.games_designed) m.059wk))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05r9g9",
                "entity_name": "Daigasso! Band Brothers"
            }
        ]
    },
    {
        "qid": 391000101,
        "question": "what are the characters in a play that represents almighty god?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j17knv",
                "entity_name": "Father"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02nw87f",
                "entity_name": "God"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fpwjwp",
                "entity_name": "Guide #33 (God)"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "theater.theater_character",
                    "class": "theater.theater_character",
                    "friendly_name": "Theater Character",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0d05l6",
                    "class": "fictional_universe.person_in_fiction",
                    "friendly_name": "almighty god",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "fictional_universe.person_in_fiction.representations_in_fiction",
                    "friendly_name": "Representations In Fiction"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :theater.theater_character . \nVALUES ?x1 { :m.0d05l6 } \n?x1 :fictional_universe.person_in_fiction.representations_in_fiction ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "fictional_universe"
        ],
        "s_expression": "(AND theater.theater_character (JOIN (R fictional_universe.person_in_fiction.representations_in_fiction) m.0d05l6))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j17knv",
                "entity_name": "Father"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02nw87f",
                "entity_name": "God"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fpwjwp",
                "entity_name": "Guide #33 (God)"
            }
        ]
    },
    {
        "qid": 488000100,
        "question": "tony stewart's starting position was before 6 in which races?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pz66h",
                "entity_name": "2007 Food City 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qk12y",
                "entity_name": "2006 DirecTV 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c7l_x",
                "entity_name": "2005 Chevy American Revolution 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c8tw9",
                "entity_name": "2005 Sylvania 300"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cgrl0",
                "entity_name": "2003 Pocono 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05chpbr",
                "entity_name": "2002 Sirius Satellite Radio at The Glen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05crl_l",
                "entity_name": "2000 Pennsylvania 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4g1",
                "entity_name": "1999 Goody's Body Pain 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4h8",
                "entity_name": "1999 Frontier @ The Glen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4hn",
                "entity_name": "1999 Exide NASCAR Select Batteries 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05crm0m",
                "entity_name": "2000 Winston 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06yvd26",
                "entity_name": "2009 Sunoco Red Cross Pennsylvania 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qzm9c",
                "entity_name": "2006 Subway Fresh 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.028980f",
                "entity_name": "2007 Daytona 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cdj0l",
                "entity_name": "2004 Sylvania 300"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cfvym",
                "entity_name": "2002 Pontiac Excitement 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02prcg6",
                "entity_name": "2006 UAW-DaimlerChrysler 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rz895",
                "entity_name": "2007 Toyota/Save Mart 350"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0407qq1",
                "entity_name": "2008 Aaron's 499"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04n7lhl",
                "entity_name": "2004 Daytona 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05bncyf",
                "entity_name": "2006 Subway 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c7r8r",
                "entity_name": "2005 Batman Begins 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c87b6",
                "entity_name": "2005 Pepsi 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c8vds",
                "entity_name": "2005 UAW-Ford 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c8wf8",
                "entity_name": "2005 UAW-GM Quality 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c8wxt",
                "entity_name": "2005 Subway 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cqxgj",
                "entity_name": "2001 UAW-DaimlerChrysler 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cr7cs",
                "entity_name": "2001 NAPA Auto Parts 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05crd7j",
                "entity_name": "2001 Dodge/Save Mart 350"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05crlyx",
                "entity_name": "2001 New Hampshire 300"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05crm0f",
                "entity_name": "2000 NAPA AutoCare 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4fp",
                "entity_name": "1999 Cracker Barrel 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4hr",
                "entity_name": "1999 Dura Lube/Kmart 300"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4hv",
                "entity_name": "1999 MBNA Gold 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4j3",
                "entity_name": "1999 Winston 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064v0t9",
                "entity_name": "2009 Toyota/SaveMart 350"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.065x32t",
                "entity_name": "2009 Coke Zero 400 Powered by Coca-Cola"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063wzjr",
                "entity_name": "2009 Pocono 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.043r0nf",
                "entity_name": "2008 Dodge Challenger 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04n7k72",
                "entity_name": "2005 Daytona 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cg284",
                "entity_name": "2002 Dodge/Save Mart 350"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05crblp",
                "entity_name": "2001 Pocono 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05crl_9",
                "entity_name": "2000 Save Mart/Kragen 350K"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02prcw8",
                "entity_name": "2006 Food City 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cg_pk",
                "entity_name": "2003 Sirius 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cj63n",
                "entity_name": "2002 Mountain Dew Southern 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cqk67",
                "entity_name": "2002 UAW-GM Quality 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02w_8m5",
                "entity_name": "2007 Centurion Boats at the Glen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cqjgc",
                "entity_name": "2002 EA Sports 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4fz",
                "entity_name": "1999 Food City 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4gt",
                "entity_name": "1999 Save Mart/Kragen 350"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4hg",
                "entity_name": "1999 Goody's Headache Powder 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4j0",
                "entity_name": "1999 UAW-GM Quality 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qzmbr",
                "entity_name": "2006 Aaron's 499"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.043mkq3",
                "entity_name": "2009 Daytona 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05bn1dc",
                "entity_name": "2006 Sharpie 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c8qvd",
                "entity_name": "2005 Sirius Satellite Radio at the Glen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c9nwb",
                "entity_name": "2003 Auto Club 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cdb0r",
                "entity_name": "2004 GFS Marketplace 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ch0rf",
                "entity_name": "2003 Tropicana 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05chk66",
                "entity_name": "2002 Brickyard 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cqm87",
                "entity_name": "2002 NAPA 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05bmk3x",
                "entity_name": "2006 Pepsi 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04mx7h5",
                "entity_name": "1999 Daytona 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cd8_m",
                "entity_name": "2004 Sirius at the Glen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05bmm31",
                "entity_name": "2006 Lenox Industrial Tools 300"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.065lvkv",
                "entity_name": "2009 Lenox Industrial Tools 301"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cwsm4",
                "entity_name": "2003 Sirius at the Glen"
            }
        ],
        "function": "<",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.nascar.nascar_race_instance",
                    "class": "base.nascar.nascar_race_instance",
                    "friendly_name": "NASCAR race instance",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.nascar.nascar_race_result",
                    "class": "base.nascar.nascar_race_result",
                    "friendly_name": "NASCAR race result",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "6^^http://www.w3.org/2001/XMLSchema#integer",
                    "class": "type.int",
                    "friendly_name": "6",
                    "question_node": 0,
                    "function": "<"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0271xk",
                    "class": "base.nascar.nascar_driver",
                    "friendly_name": "Tony Stewart",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.nascar.nascar_race_instance.results",
                    "friendly_name": "Results"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "base.nascar.nascar_race_result.start_position",
                    "friendly_name": "Start position"
                },
                {
                    "start": 3,
                    "end": 1,
                    "relation": "base.nascar.nascar_driver.nascar_races",
                    "friendly_name": "NASCAR Races"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.nascar.nascar_race_instance . \n?x1 :type.object.type :base.nascar.nascar_race_result . \nFILTER (?x2 < \"6\"^^<http://www.w3.org/2001/XMLSchema#integer>)\nVALUES ?x3 { :m.0271xk } \n?x0 :base.nascar.nascar_race_instance.results ?x1 . \n?x1 :base.nascar.nascar_race_result.start_position ?x2 . \n?x3 :base.nascar.nascar_driver.nascar_races ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.nascar.nascar_race_instance (JOIN base.nascar.nascar_race_instance.results (AND (lt base.nascar.nascar_race_result.start_position 6^^http://www.w3.org/2001/XMLSchema#integer) (JOIN (R base.nascar.nascar_driver.nascar_races) m.0271xk))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pz66h",
                "entity_name": "2007 Food City 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qk12y",
                "entity_name": "2006 DirecTV 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c7l_x",
                "entity_name": "2005 Chevy American Revolution 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c8tw9",
                "entity_name": "2005 Sylvania 300"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cgrl0",
                "entity_name": "2003 Pocono 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05chpbr",
                "entity_name": "2002 Sirius Satellite Radio at The Glen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05crl_l",
                "entity_name": "2000 Pennsylvania 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4g1",
                "entity_name": "1999 Goody's Body Pain 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4h8",
                "entity_name": "1999 Frontier @ The Glen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4hn",
                "entity_name": "1999 Exide NASCAR Select Batteries 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05crm0m",
                "entity_name": "2000 Winston 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06yvd26",
                "entity_name": "2009 Sunoco Red Cross Pennsylvania 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qzm9c",
                "entity_name": "2006 Subway Fresh 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.028980f",
                "entity_name": "2007 Daytona 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cdj0l",
                "entity_name": "2004 Sylvania 300"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cfvym",
                "entity_name": "2002 Pontiac Excitement 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02prcg6",
                "entity_name": "2006 UAW-DaimlerChrysler 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rz895",
                "entity_name": "2007 Toyota/Save Mart 350"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0407qq1",
                "entity_name": "2008 Aaron's 499"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04n7lhl",
                "entity_name": "2004 Daytona 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05bncyf",
                "entity_name": "2006 Subway 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c7r8r",
                "entity_name": "2005 Batman Begins 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c87b6",
                "entity_name": "2005 Pepsi 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c8vds",
                "entity_name": "2005 UAW-Ford 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c8wf8",
                "entity_name": "2005 UAW-GM Quality 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c8wxt",
                "entity_name": "2005 Subway 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cqxgj",
                "entity_name": "2001 UAW-DaimlerChrysler 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cr7cs",
                "entity_name": "2001 NAPA Auto Parts 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05crd7j",
                "entity_name": "2001 Dodge/Save Mart 350"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05crlyx",
                "entity_name": "2001 New Hampshire 300"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05crm0f",
                "entity_name": "2000 NAPA AutoCare 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4fp",
                "entity_name": "1999 Cracker Barrel 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4hr",
                "entity_name": "1999 Dura Lube/Kmart 300"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4hv",
                "entity_name": "1999 MBNA Gold 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4j3",
                "entity_name": "1999 Winston 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064v0t9",
                "entity_name": "2009 Toyota/SaveMart 350"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.065x32t",
                "entity_name": "2009 Coke Zero 400 Powered by Coca-Cola"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063wzjr",
                "entity_name": "2009 Pocono 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.043r0nf",
                "entity_name": "2008 Dodge Challenger 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04n7k72",
                "entity_name": "2005 Daytona 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cg284",
                "entity_name": "2002 Dodge/Save Mart 350"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05crblp",
                "entity_name": "2001 Pocono 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05crl_9",
                "entity_name": "2000 Save Mart/Kragen 350K"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02prcw8",
                "entity_name": "2006 Food City 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cg_pk",
                "entity_name": "2003 Sirius 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cj63n",
                "entity_name": "2002 Mountain Dew Southern 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cqk67",
                "entity_name": "2002 UAW-GM Quality 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02w_8m5",
                "entity_name": "2007 Centurion Boats at the Glen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cqjgc",
                "entity_name": "2002 EA Sports 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4fz",
                "entity_name": "1999 Food City 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4gt",
                "entity_name": "1999 Save Mart/Kragen 350"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4hg",
                "entity_name": "1999 Goody's Headache Powder 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cw4j0",
                "entity_name": "1999 UAW-GM Quality 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qzmbr",
                "entity_name": "2006 Aaron's 499"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.043mkq3",
                "entity_name": "2009 Daytona 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05bn1dc",
                "entity_name": "2006 Sharpie 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c8qvd",
                "entity_name": "2005 Sirius Satellite Radio at the Glen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c9nwb",
                "entity_name": "2003 Auto Club 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cdb0r",
                "entity_name": "2004 GFS Marketplace 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ch0rf",
                "entity_name": "2003 Tropicana 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05chk66",
                "entity_name": "2002 Brickyard 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cqm87",
                "entity_name": "2002 NAPA 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05bmk3x",
                "entity_name": "2006 Pepsi 400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04mx7h5",
                "entity_name": "1999 Daytona 500"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cd8_m",
                "entity_name": "2004 Sirius at the Glen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05bmm31",
                "entity_name": "2006 Lenox Industrial Tools 300"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.065lvkv",
                "entity_name": "2009 Lenox Industrial Tools 301"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cwsm4",
                "entity_name": "2003 Sirius at the Glen"
            }
        ]
    },
    {
        "qid": 381000101,
        "question": "what is the legal structure of nestle?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.079bdg",
                "entity_name": "Publicly listed company"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.company_type",
                    "class": "business.company_type",
                    "friendly_name": "Organization legal structure",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01556g",
                    "class": "food.candy_bar_manufacturer",
                    "friendly_name": "nestle",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "organization.organization.legal_structure",
                    "friendly_name": "Legal structure"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.company_type . \nVALUES ?x1 { :m.01556g } \n?x1 :organization.organization.legal_structure ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "organization"
        ],
        "s_expression": "(AND business.company_type (JOIN (R organization.organization.legal_structure) m.01556g))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.079bdg",
                "entity_name": "Publicly listed company"
            }
        ]
    },
    {
        "qid": 491000001,
        "question": "verdana's designer created how many other typefaces for ms?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1",
                "entity_name": "1"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.typefaces.typeface",
                    "class": "base.typefaces.typeface",
                    "friendly_name": "Typeface",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.typefaces.typeface_creator",
                    "class": "base.typefaces.typeface_creator",
                    "friendly_name": "Typeface Creator",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0h56_",
                    "class": "base.typefaces.typeface",
                    "friendly_name": "Verdana",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.04sv4",
                    "class": "base.typefaces.typeface_foundry",
                    "friendly_name": "ms",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.typefaces.typeface.typeface_creator",
                    "friendly_name": "Creator"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.typefaces.typeface.typeface_creator",
                    "friendly_name": "Creator"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "base.typefaces.typeface.foundry",
                    "friendly_name": "Foundry"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.typefaces.typeface . \n?x1 :type.object.type :base.typefaces.typeface_creator . \nVALUES ?x2 { :m.0h56_ } \nVALUES ?x3 { :m.04sv4 } \n?x0 :base.typefaces.typeface.typeface_creator ?x1 . \n?x2 :base.typefaces.typeface.typeface_creator ?x1 . \n?x0 :base.typefaces.typeface.foundry ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(COUNT (AND base.typefaces.typeface (AND (JOIN base.typefaces.typeface.typeface_creator (JOIN (R base.typefaces.typeface.typeface_creator) m.0h56_)) (JOIN base.typefaces.typeface.foundry m.04sv4))))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "qid": 401000400,
        "question": "what kind of school is davidson college?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01rs41",
                "entity_name": "Private school"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04qbv",
                "entity_name": "Liberal arts college"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "education.school_category",
                    "class": "education.school_category",
                    "friendly_name": "School category",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02pdhz",
                    "class": "education.university",
                    "friendly_name": "Davidson College",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "education.school_category.schools_of_this_kind",
                    "friendly_name": "Schools of this kind"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :education.school_category . \nVALUES ?x1 { :m.02pdhz } \n?x0 :education.school_category.schools_of_this_kind ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "education"
        ],
        "s_expression": "(AND education.school_category (JOIN education.school_category.schools_of_this_kind m.02pdhz))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01rs41",
                "entity_name": "Private school"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04qbv",
                "entity_name": "Liberal arts college"
            }
        ]
    },
    {
        "qid": 418000100,
        "question": "which baseball teams were coached by dave eiland?",
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cqt41",
                "entity_name": "New York Yankees"
            }
        ],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "baseball.baseball_team",
                    "class": "baseball.baseball_team",
                    "friendly_name": "Baseball Team",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "baseball.historical_coaching_tenure",
                    "class": "baseball.historical_coaching_tenure",
                    "friendly_name": "Historical Coaching Tenure",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0c0x6v",
                    "class": "baseball.baseball_coach",
                    "friendly_name": "Dave Eiland",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "baseball.baseball_team.historical_coaches",
                    "friendly_name": "Historical Coaches"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "baseball.historical_coaching_tenure.baseball_coach",
                    "friendly_name": "Baseball Coach"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :baseball.baseball_team . \n?x1 :type.object.type :baseball.historical_coaching_tenure . \nVALUES ?x2 { :m.0c0x6v } \n?x0 :baseball.baseball_team.historical_coaches ?x1 . \n?x1 :baseball.historical_coaching_tenure.baseball_coach ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "baseball"
        ],
        "s_expression": "(AND baseball.baseball_team (JOIN baseball.baseball_team.historical_coaches (JOIN baseball.historical_coaching_tenure.baseball_coach m.0c0x6v)))",
        "qType": "A",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cqt41",
                "entity_name": "New York Yankees"
            }
        ]
    },
    {
        "qid": 468000301,
        "question": "who were the grandmasters of the chivalric order?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "royalty.chivalric_order_officer",
                    "class": "royalty.chivalric_order_officer",
                    "friendly_name": "Chivalric Order Officer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "royalty.chivalric_order_position_tenure",
                    "class": "royalty.chivalric_order_position_tenure",
                    "friendly_name": "Chivalric Order Officer Tenure",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.092pxy",
                    "class": "royalty.chivalric_office",
                    "friendly_name": "grandmaster",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "royalty.chivalric_order_position_tenure.officer",
                    "friendly_name": "Officer"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "royalty.chivalric_office.position_holders",
                    "friendly_name": "Position Holders"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :royalty.chivalric_order_officer . \n?x1 :type.object.type :royalty.chivalric_order_position_tenure . \nVALUES ?x2 { :m.092pxy } \n?x1 :royalty.chivalric_order_position_tenure.officer ?x0 . \n?x2 :royalty.chivalric_office.position_holders ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "royalty"
        ],
        "s_expression": "(AND royalty.chivalric_order_officer (JOIN (R royalty.chivalric_order_position_tenure.officer) (JOIN (R royalty.chivalric_office.position_holders) m.092pxy)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ds",
                "entity_name": "Charles III, Duke of Savoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0482zf",
                "entity_name": "Emmanuel Philibert, Duke of Savoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j56x",
                "entity_name": "Vittorio Emanuele, Prince of Naples"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j1xk",
                "entity_name": "Antipope Felix V"
            }
        ]
    },
    {
        "qid": 251000000,
        "question": "xtracycle is which type of bicycle?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "bicycles.bicycle_type",
                    "class": "bicycles.bicycle_type",
                    "friendly_name": "Bicycle type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0gx1q5",
                    "class": "bicycles.bicycle_model",
                    "friendly_name": "Xtracycle",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "bicycles.bicycle_model.bicycle_type",
                    "friendly_name": "Bicycle type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :bicycles.bicycle_type . \nVALUES ?x1 { :m.0gx1q5 } \n?x1 :bicycles.bicycle_model.bicycle_type ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "bicycles"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09rtmfj",
                "entity_name": "Longtail"
            }
        ]
    },
    {
        "qid": 269000302,
        "question": "what churches are in the new westminster diocese?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.anglican.church",
                    "class": "base.anglican.church",
                    "friendly_name": "Church",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03qsr8",
                    "class": "base.anglican.diocese",
                    "friendly_name": "new westminster diocese",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.anglican.diocese.church",
                    "friendly_name": "Church"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.anglican.church . \nVALUES ?x1 { :m.03qsr8 } \n?x1 :base.anglican.diocese.church ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.anglican.church (JOIN (R base.anglican.diocese.church) m.03qsr8))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04drnj",
                "entity_name": "Anglican Church of Canada"
            }
        ]
    },
    {
        "qid": 419000400,
        "question": "what meteor showers took place in the constellation with vega?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.meteor_shower",
                    "class": "astronomy.meteor_shower",
                    "friendly_name": "Meteor Shower",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "astronomy.constellation",
                    "class": "astronomy.constellation",
                    "friendly_name": "Constellation",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.080jt",
                    "class": "astronomy.star",
                    "friendly_name": "Vega",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.meteor_shower.radiant",
                    "friendly_name": "Radiant"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "astronomy.star.constellation",
                    "friendly_name": "Constellation"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.meteor_shower . \n?x1 :type.object.type :astronomy.constellation . \nVALUES ?x2 { :m.080jt } \n?x0 :astronomy.meteor_shower.radiant ?x1 . \n?x2 :astronomy.star.constellation ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "(AND astronomy.meteor_shower (JOIN astronomy.meteor_shower.radiant (JOIN (R astronomy.star.constellation) m.080jt)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0267sh0",
                "entity_name": "Lyrids"
            }
        ]
    },
    {
        "qid": 400000400,
        "question": "for which films pertaining to surfing has sarah finn served as the casting director?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.surfing.surf_film",
                    "class": "base.surfing.surf_film",
                    "friendly_name": "Surf Film",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08mt595",
                    "class": "film.film_casting_director",
                    "friendly_name": "Sarah Finn",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.film_casting_director.films_casting_directed",
                    "friendly_name": "Films casting directed"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.surfing.surf_film . \nVALUES ?x1 { :m.08mt595 } \n?x1 :film.film_casting_director.films_casting_directed ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "film"
        ],
        "s_expression": "(AND base.surfing.surf_film (JOIN (R film.film_casting_director.films_casting_directed) m.08mt595))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01snqb",
                "entity_name": "Blue Crush"
            }
        ]
    },
    {
        "qid": 398000200,
        "question": "who was crown royal produced by?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "distilled_spirits.spirit_blender",
                    "class": "distilled_spirits.spirit_blender",
                    "friendly_name": "Spirit product manufacturer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05j9r4",
                    "class": "distilled_spirits.blended_spirit",
                    "friendly_name": "Crown Royal",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "distilled_spirits.blended_spirit.blender",
                    "friendly_name": "Blender"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :distilled_spirits.spirit_blender . \nVALUES ?x1 { :m.05j9r4 } \n?x1 :distilled_spirits.blended_spirit.blender ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "distilled_spirits"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.022cdf",
                "entity_name": "Diageo"
            }
        ]
    },
    {
        "qid": 481000400,
        "question": "what are the diseases transmitted through sex that have the same type of infectious agents as tuberculosis?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.infectious_disease",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "Infectious Disease",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06ng1",
                    "class": "medicine.transmission_route",
                    "friendly_name": "Sex",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "medicine.type_of_infectious_agent",
                    "class": "medicine.type_of_infectious_agent",
                    "friendly_name": "Type of infectious agent",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.07jwr",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "Tuberculosis",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.transmission_route.infections_that_travel_this_way",
                    "friendly_name": "Infections that travel this way"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "medicine.infectious_disease.infectious_agent_type",
                    "friendly_name": "Type of infectious agent"
                },
                {
                    "start": 2,
                    "end": 3,
                    "relation": "medicine.type_of_infectious_agent.diseases",
                    "friendly_name": "Diseases with this type of agent"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.infectious_disease . \nVALUES ?x1 { :m.06ng1 } \n?x2 :type.object.type :medicine.type_of_infectious_agent . \nVALUES ?x3 { :m.07jwr } \n?x1 :medicine.transmission_route.infections_that_travel_this_way ?x0 . \n?x0 :medicine.infectious_disease.infectious_agent_type ?x2 . \n?x2 :medicine.type_of_infectious_agent.diseases ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            }
        ]
    },
    {
        "qid": 412000300,
        "question": "the uab hospital has which medical specialities concerned with aids?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.medical_specialty",
                    "class": "medicine.medical_specialty",
                    "friendly_name": "Medical specialty",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0d19y2",
                    "class": "base.bioventurist.bv_medical_condition",
                    "friendly_name": "AIDS",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0bt60t",
                    "class": "medicine.hospital",
                    "friendly_name": "UAB Hospital",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.disease.medical_specialties",
                    "friendly_name": "Associated medical specialties"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "medicine.hospital.medical_specialties",
                    "friendly_name": "Medical Specialties"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_specialty . \nVALUES ?x1 { :m.0d19y2 } \nVALUES ?x2 { :m.0bt60t } \n?x1 :medicine.disease.medical_specialties ?x0 . \n?x2 :medicine.hospital.medical_specialties ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(AND medicine.medical_specialty (AND (JOIN (R medicine.disease.medical_specialties) m.0d19y2) (JOIN (R medicine.hospital.medical_specialties) m.0bt60t)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dxdt",
                "entity_name": "Obstetrics and gynaecology"
            }
        ]
    },
    {
        "qid": 269000502,
        "question": "what church can be found in the new westminster diocese?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.anglican.church",
                    "class": "base.anglican.church",
                    "friendly_name": "Church",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03qsr8",
                    "class": "base.anglican.diocese",
                    "friendly_name": "new westminster diocese",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.anglican.diocese.church",
                    "friendly_name": "Church"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.anglican.church . \nVALUES ?x1 { :m.03qsr8 } \n?x1 :base.anglican.diocese.church ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.anglican.church (JOIN (R base.anglican.diocese.church) m.03qsr8))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04drnj",
                "entity_name": "Anglican Church of Canada"
            }
        ]
    },
    {
        "qid": 479000300,
        "question": "what are the tablet computers made by apple inc.?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.consumer_product",
                    "class": "business.consumer_product",
                    "friendly_name": "Consumer product",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "business.company_product_relationship",
                    "class": "business.company_product_relationship",
                    "friendly_name": "Company-product relationship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0bh9flk",
                    "class": "business.product_category",
                    "friendly_name": "Tablet computer",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0k8z",
                    "class": "business.consumer_company",
                    "friendly_name": "Apple Inc.",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "business.company_product_relationship.consumer_product",
                    "friendly_name": "Consumer product"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "business.consumer_product.category",
                    "friendly_name": "Category"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "business.company_product_relationship.company",
                    "friendly_name": "Company"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.consumer_product . \n?x1 :type.object.type :business.company_product_relationship . \nVALUES ?x2 { :m.0bh9flk } \nVALUES ?x3 { :m.0k8z } \n?x1 :business.company_product_relationship.consumer_product ?x0 . \n?x0 :business.consumer_product.category ?x2 . \n?x1 :business.company_product_relationship.company ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "business"
        ],
        "s_expression": "(AND business.consumer_product (AND (JOIN (R business.company_product_relationship.consumer_product) (JOIN business.company_product_relationship.company m.0k8z)) (JOIN business.consumer_product.category m.0bh9flk)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j30q9x",
                "entity_name": "iPad 3"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ggbcny",
                "entity_name": "iPad 2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n3s_98",
                "entity_name": "iPad Mini"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nb7vg2",
                "entity_name": "iPad 4"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nb7m7f",
                "entity_name": "iPad 1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ynv62p",
                "entity_name": "iPad Air"
            }
        ]
    },
    {
        "qid": 481000001,
        "question": "what sex transmitted diseases are carried by the same type of agent as tb?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.infectious_disease",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "Infectious Disease",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06ng1",
                    "class": "medicine.transmission_route",
                    "friendly_name": "Sex",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "medicine.type_of_infectious_agent",
                    "class": "medicine.type_of_infectious_agent",
                    "friendly_name": "Type of infectious agent",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.07jwr",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "tb",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.transmission_route.infections_that_travel_this_way",
                    "friendly_name": "Infections that travel this way"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "medicine.infectious_disease.infectious_agent_type",
                    "friendly_name": "Type of infectious agent"
                },
                {
                    "start": 2,
                    "end": 3,
                    "relation": "medicine.type_of_infectious_agent.diseases",
                    "friendly_name": "Diseases with this type of agent"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.infectious_disease . \nVALUES ?x1 { :m.06ng1 } \n?x2 :type.object.type :medicine.type_of_infectious_agent . \nVALUES ?x3 { :m.07jwr } \n?x1 :medicine.transmission_route.infections_that_travel_this_way ?x0 . \n?x0 :medicine.infectious_disease.infectious_agent_type ?x2 . \n?x2 :medicine.type_of_infectious_agent.diseases ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            }
        ]
    },
    {
        "qid": 479000301,
        "question": "what are the tablet computers made by apple?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.consumer_product",
                    "class": "business.consumer_product",
                    "friendly_name": "Consumer product",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "business.company_product_relationship",
                    "class": "business.company_product_relationship",
                    "friendly_name": "Company-product relationship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0bh9flk",
                    "class": "business.product_category",
                    "friendly_name": "Tablet computer",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0k8z",
                    "class": "business.consumer_company",
                    "friendly_name": "apple",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "business.company_product_relationship.consumer_product",
                    "friendly_name": "Consumer product"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "business.consumer_product.category",
                    "friendly_name": "Category"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "business.company_product_relationship.company",
                    "friendly_name": "Company"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.consumer_product . \n?x1 :type.object.type :business.company_product_relationship . \nVALUES ?x2 { :m.0bh9flk } \nVALUES ?x3 { :m.0k8z } \n?x1 :business.company_product_relationship.consumer_product ?x0 . \n?x0 :business.consumer_product.category ?x2 . \n?x1 :business.company_product_relationship.company ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "business"
        ],
        "s_expression": "(AND business.consumer_product (AND (JOIN (R business.company_product_relationship.consumer_product) (JOIN business.company_product_relationship.company m.0k8z)) (JOIN business.consumer_product.category m.0bh9flk)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j30q9x",
                "entity_name": "iPad 3"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ggbcny",
                "entity_name": "iPad 2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n3s_98",
                "entity_name": "iPad Mini"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nb7vg2",
                "entity_name": "iPad 4"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nb7m7f",
                "entity_name": "iPad 1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ynv62p",
                "entity_name": "iPad Air"
            }
        ]
    },
    {
        "qid": 410000401,
        "question": "what ski sites are owned by redford?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "skiing.ski_area",
                    "class": "skiing.ski_area",
                    "friendly_name": "Ski Area",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "skiing.ski_area_ownership",
                    "class": "skiing.ski_area_ownership",
                    "friendly_name": "Ski Area Ownership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0gs1_",
                    "class": "skiing.ski_area_owner",
                    "friendly_name": "redford",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "skiing.ski_area_ownership.ski_area",
                    "friendly_name": "Ski Area"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "skiing.ski_area_owner.ski_areas_owned",
                    "friendly_name": "Ski Areas Owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :skiing.ski_area . \n?x1 :type.object.type :skiing.ski_area_ownership . \nVALUES ?x2 { :m.0gs1_ } \n?x1 :skiing.ski_area_ownership.ski_area ?x0 . \n?x2 :skiing.ski_area_owner.ski_areas_owned ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "skiing"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fd3v",
                "entity_name": "Sundance Resort"
            }
        ]
    },
    {
        "qid": 325000000,
        "question": "which nuclear ship powerplant is the smallest in power?",
        "answer": [],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "boats.nuclear_powerplant",
                    "class": "boats.nuclear_powerplant",
                    "friendly_name": "Nuclear Ship Powerplant",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "boats.nuclear_powerplant.power_kw",
                    "friendly_name": "Power (kw)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :boats.nuclear_powerplant . \n{\nSELECT (MIN(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :boats.nuclear_powerplant . \n?y0 :boats.nuclear_powerplant.power_kw ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :boats.nuclear_powerplant.power_kw ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "boats"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ck0rk",
                "entity_name": "VM-A reactor"
            }
        ]
    },
    {
        "qid": 427000101,
        "question": "cheerio uses which standard barcoding system?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.barcode.barcode_system",
                    "class": "base.barcode.barcode_system",
                    "friendly_name": "Barcode system",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.barcode.barcode",
                    "class": "base.barcode.barcode",
                    "friendly_name": "Barcode",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03m1ls",
                    "class": "base.barcode.barcoded_item",
                    "friendly_name": "cheerio",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.barcode.barcode.barcode_system",
                    "friendly_name": "Barcode system"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.barcode.barcoded_item.barcode",
                    "friendly_name": "Barcode"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.barcode.barcode_system . \n?x1 :type.object.type :base.barcode.barcode . \nVALUES ?x2 { :m.03m1ls } \n?x1 :base.barcode.barcode.barcode_system ?x0 . \n?x2 :base.barcode.barcoded_item.barcode ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.barcode.barcode_system (JOIN (R base.barcode.barcode.barcode_system) (JOIN (R base.barcode.barcoded_item.barcode) m.03m1ls)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f1yc",
                "entity_name": "Universal Product Code"
            }
        ]
    },
    {
        "qid": 447000400,
        "question": "what is the weakest type of bourbon whiskey?",
        "answer": [],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "distilled_spirits.distilled_spirit",
                    "class": "distilled_spirits.distilled_spirit",
                    "friendly_name": "Distilled spirit",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0c59y",
                    "class": "distilled_spirits.distilled_spirit_type",
                    "friendly_name": "Bourbon whiskey",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "distilled_spirits.distilled_spirit.abv",
                    "friendly_name": "Alcohol content"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "distilled_spirits.distilled_spirit.spirit_type",
                    "friendly_name": "Spirit type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :distilled_spirits.distilled_spirit . \n{\nSELECT (MIN(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :distilled_spirits.distilled_spirit . \nVALUES ?y2 { :m.0c59y } \n?y0 :distilled_spirits.distilled_spirit.abv ?y1 . \n?y0 :distilled_spirits.distilled_spirit.spirit_type ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\nVALUES ?x2 { :m.0c59y } \n?x0 :distilled_spirits.distilled_spirit.abv ?x1 . \n?x0 :distilled_spirits.distilled_spirit.spirit_type ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "distilled_spirits"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.095b59",
                "entity_name": "Cougar Bourbon"
            }
        ]
    },
    {
        "qid": 277000002,
        "question": "what asterisms are there in the hunter?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.asterism",
                    "class": "astronomy.asterism",
                    "friendly_name": "Asterism",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0142jk",
                    "class": "astronomy.constellation",
                    "friendly_name": "the hunter",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.asterism.constellations",
                    "friendly_name": "Constellations"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.asterism . \nVALUES ?x1 { :m.0142jk } \n?x0 :astronomy.asterism.constellations ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03nlltw",
                "entity_name": "Orion's Belt"
            }
        ]
    },
    {
        "qid": 482000302,
        "question": "the maximum speed can be found in which ride designed by the same designer as haunted manison?",
        "answer": [],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.ride",
                    "class": "amusement_parks.ride",
                    "friendly_name": "Amusement Ride",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.ride_designer",
                    "class": "amusement_parks.ride_designer",
                    "friendly_name": "Amusement Ride Designer",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01p79p",
                    "class": "amusement_parks.ride",
                    "friendly_name": "haunted manison",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.ride.designer",
                    "friendly_name": "Designer"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "amusement_parks.ride_designer.rides",
                    "friendly_name": "Rides Designed"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "amusement_parks.ride.max_speed",
                    "friendly_name": "Max Speed"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.ride . \n?x1 :type.object.type :amusement_parks.ride_designer . \nVALUES ?x2 { :m.01p79p } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :amusement_parks.ride . \n?y1 :type.object.type :amusement_parks.ride_designer . \nVALUES ?y2 { :m.01p79p } \n?y0 :amusement_parks.ride.designer ?y1 . \n?y1 :amusement_parks.ride_designer.rides ?y2 . \n?y0 :amusement_parks.ride.max_speed ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x0 :amusement_parks.ride.designer ?x1 . \n?x1 :amusement_parks.ride_designer.rides ?x2 . \n?x0 :amusement_parks.ride.max_speed ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "amusement_parks"
        ],
        "s_expression": "(ARGMAX (AND amusement_parks.ride (JOIN amusement_parks.ride.designer (JOIN amusement_parks.ride_designer.rides m.01p79p))) amusement_parks.ride.max_speed)",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.040fq5",
                "entity_name": "California Screamin'"
            }
        ]
    },
    {
        "qid": 463000501,
        "question": "what kind of grappling is putin good at?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "martial_arts.martial_art",
                    "class": "martial_arts.martial_art",
                    "friendly_name": "Martial Art",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08193",
                    "class": "martial_arts.martial_artist",
                    "friendly_name": "putin",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.039cp",
                    "class": "martial_arts.martial_art_category",
                    "friendly_name": "Grappling",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "martial_arts.martial_artist.martial_art",
                    "friendly_name": "Martial Art(s)"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "martial_arts.martial_art.category",
                    "friendly_name": "Category"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :martial_arts.martial_art . \nVALUES ?x1 { :m.08193 } \nVALUES ?x2 { :m.039cp } \n?x1 :martial_arts.martial_artist.martial_art ?x0 . \n?x0 :martial_arts.martial_art.category ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "martial_arts"
        ],
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN (R martial_arts.martial_artist.martial_art) m.08193) (JOIN martial_arts.martial_art.category m.039cp)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_8r",
                "entity_name": "Judo"
            }
        ]
    },
    {
        "qid": 278000302,
        "question": "the cervus canadensis is used as supporter in which coat of arms?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms",
                    "class": "symbols.coat_of_arms",
                    "friendly_name": "Coat of Arms",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.026545k",
                    "class": "symbols.heraldic_supporter",
                    "friendly_name": "cervus canadensis",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.heraldic_supporter.coat_of_arms",
                    "friendly_name": "Coat of Arms"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms . \nVALUES ?x1 { :m.026545k } \n?x1 :symbols.heraldic_supporter.coat_of_arms ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01vy7d",
                "entity_name": "Coat of arms of British Columbia"
            }
        ]
    },
    {
        "qid": 261000400,
        "question": "what do you need to make a cuba libre?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.cocktails.cocktail_ingredient",
                    "class": "base.cocktails.cocktail_ingredient",
                    "friendly_name": "Cocktail Ingredient",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.024jj",
                    "class": "base.cocktails.cocktail",
                    "friendly_name": "Cuba Libre",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.cocktails.cocktail_ingredient.cocktails_with_this_ingredient",
                    "friendly_name": "Cocktails with this ingredient"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.cocktails.cocktail_ingredient . \nVALUES ?x1 { :m.024jj } \n?x0 :base.cocktails.cocktail_ingredient.cocktails_with_this_ingredient ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.cocktails.cocktail_ingredient (JOIN base.cocktails.cocktail_ingredient.cocktails_with_this_ingredient m.024jj))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yvs",
                "entity_name": "Coca-Cola"
            }
        ]
    },
    {
        "qid": 410000200,
        "question": "which ski sights does robert redford own?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "skiing.ski_area",
                    "class": "skiing.ski_area",
                    "friendly_name": "Ski Area",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "skiing.ski_area_ownership",
                    "class": "skiing.ski_area_ownership",
                    "friendly_name": "Ski Area Ownership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0gs1_",
                    "class": "skiing.ski_area_owner",
                    "friendly_name": "Robert Redford",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "skiing.ski_area_ownership.ski_area",
                    "friendly_name": "Ski Area"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "skiing.ski_area_owner.ski_areas_owned",
                    "friendly_name": "Ski Areas Owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :skiing.ski_area . \n?x1 :type.object.type :skiing.ski_area_ownership . \nVALUES ?x2 { :m.0gs1_ } \n?x1 :skiing.ski_area_ownership.ski_area ?x0 . \n?x2 :skiing.ski_area_owner.ski_areas_owned ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "skiing"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fd3v",
                "entity_name": "Sundance Resort"
            }
        ]
    },
    {
        "qid": 462000501,
        "question": "who bears a coat of arms granted by queen?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms_bearer",
                    "class": "symbols.coat_of_arms_bearer",
                    "friendly_name": "Coat of Arms Bearer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "symbols.armorial_grant",
                    "class": "symbols.armorial_grant",
                    "friendly_name": "Armorial Grant",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d1_f",
                    "class": "symbols.heraldry_granting_body",
                    "friendly_name": "queen",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.armorial_grant.armiger",
                    "friendly_name": "Used by (Armiger)"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "symbols.armorial_grant.granted_by",
                    "friendly_name": "Granted By (if an authority granted the use to the bearer)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms_bearer . \n?x1 :type.object.type :symbols.armorial_grant . \nVALUES ?x2 { :m.0d1_f } \n?x1 :symbols.armorial_grant.armiger ?x0 . \n?x1 :symbols.armorial_grant.granted_by ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "(AND symbols.coat_of_arms_bearer (JOIN (R symbols.armorial_grant.armiger) (JOIN symbols.armorial_grant.granted_by m.0d1_f)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0847q",
                "entity_name": "Western Australia"
            }
        ]
    },
    {
        "qid": 410000402,
        "question": "what ski sites are owned by bob redford?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "skiing.ski_area",
                    "class": "skiing.ski_area",
                    "friendly_name": "Ski Area",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "skiing.ski_area_ownership",
                    "class": "skiing.ski_area_ownership",
                    "friendly_name": "Ski Area Ownership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0gs1_",
                    "class": "skiing.ski_area_owner",
                    "friendly_name": "bob redford",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "skiing.ski_area_ownership.ski_area",
                    "friendly_name": "Ski Area"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "skiing.ski_area_owner.ski_areas_owned",
                    "friendly_name": "Ski Areas Owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :skiing.ski_area . \n?x1 :type.object.type :skiing.ski_area_ownership . \nVALUES ?x2 { :m.0gs1_ } \n?x1 :skiing.ski_area_ownership.ski_area ?x0 . \n?x2 :skiing.ski_area_owner.ski_areas_owned ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "skiing"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fd3v",
                "entity_name": "Sundance Resort"
            }
        ]
    },
    {
        "qid": 398000400,
        "question": "what companies are producing the crown royal whiskey?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "distilled_spirits.spirit_blender",
                    "class": "distilled_spirits.spirit_blender",
                    "friendly_name": "Spirit product manufacturer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05j9r4",
                    "class": "distilled_spirits.blended_spirit",
                    "friendly_name": "Crown Royal",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "distilled_spirits.blended_spirit.blender",
                    "friendly_name": "Blender"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :distilled_spirits.spirit_blender . \nVALUES ?x1 { :m.05j9r4 } \n?x1 :distilled_spirits.blended_spirit.blender ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "distilled_spirits"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.022cdf",
                "entity_name": "Diageo"
            }
        ]
    },
    {
        "qid": 251000100,
        "question": "what's the category of xtracycle?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "bicycles.bicycle_type",
                    "class": "bicycles.bicycle_type",
                    "friendly_name": "Bicycle type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0gx1q5",
                    "class": "bicycles.bicycle_model",
                    "friendly_name": "Xtracycle",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "bicycles.bicycle_model.bicycle_type",
                    "friendly_name": "Bicycle type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :bicycles.bicycle_type . \nVALUES ?x1 { :m.0gx1q5 } \n?x1 :bicycles.bicycle_model.bicycle_type ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "bicycles"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09rtmfj",
                "entity_name": "Longtail"
            }
        ]
    },
    {
        "qid": 362000100,
        "question": "is there a model who is also a tennis player?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.schemastaging.tennis_player_extra",
                    "class": "base.schemastaging.tennis_player_extra",
                    "friendly_name": "Tennis player extra",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0d1pc",
                    "class": "people.profession",
                    "friendly_name": "Model",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.person.profession",
                    "friendly_name": "Profession"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.schemastaging.tennis_player_extra . \nVALUES ?x1 { :m.0d1pc } \n?x0 :people.person.profession ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "people"
        ],
        "s_expression": "(AND base.schemastaging.tennis_player_extra (JOIN people.person.profession m.0d1pc))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03b7gw",
                "entity_name": "Maria Sharapova"
            }
        ]
    },
    {
        "qid": 481000401,
        "question": "what are the diseases transmitted through sex that have the same type of infectious agents as tb?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.infectious_disease",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "Infectious Disease",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06ng1",
                    "class": "medicine.transmission_route",
                    "friendly_name": "Sex",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "medicine.type_of_infectious_agent",
                    "class": "medicine.type_of_infectious_agent",
                    "friendly_name": "Type of infectious agent",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.07jwr",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "tb",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.transmission_route.infections_that_travel_this_way",
                    "friendly_name": "Infections that travel this way"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "medicine.infectious_disease.infectious_agent_type",
                    "friendly_name": "Type of infectious agent"
                },
                {
                    "start": 2,
                    "end": 3,
                    "relation": "medicine.type_of_infectious_agent.diseases",
                    "friendly_name": "Diseases with this type of agent"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.infectious_disease . \nVALUES ?x1 { :m.06ng1 } \n?x2 :type.object.type :medicine.type_of_infectious_agent . \nVALUES ?x3 { :m.07jwr } \n?x1 :medicine.transmission_route.infections_that_travel_this_way ?x0 . \n?x0 :medicine.infectious_disease.infectious_agent_type ?x2 . \n?x2 :medicine.type_of_infectious_agent.diseases ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            }
        ]
    },
    {
        "qid": 463000400,
        "question": "which type of grappling does vladimir putin excel at?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "martial_arts.martial_art",
                    "class": "martial_arts.martial_art",
                    "friendly_name": "Martial Art",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08193",
                    "class": "martial_arts.martial_artist",
                    "friendly_name": "Vladimir Putin",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.039cp",
                    "class": "martial_arts.martial_art_category",
                    "friendly_name": "Grappling",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "martial_arts.martial_artist.martial_art",
                    "friendly_name": "Martial Art(s)"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "martial_arts.martial_art.category",
                    "friendly_name": "Category"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :martial_arts.martial_art . \nVALUES ?x1 { :m.08193 } \nVALUES ?x2 { :m.039cp } \n?x1 :martial_arts.martial_artist.martial_art ?x0 . \n?x0 :martial_arts.martial_art.category ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "martial_arts"
        ],
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN (R martial_arts.martial_artist.martial_art) m.08193) (JOIN martial_arts.martial_art.category m.039cp)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_8r",
                "entity_name": "Judo"
            }
        ]
    },
    {
        "qid": 493000500,
        "question": "list wood sailing ships that have 3 masts and whose displacement is greater than or equal to 213.0 t.",
        "answer": [],
        "function": ">=",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.sails.sailing_ship",
                    "class": "base.sails.sailing_ship",
                    "friendly_name": "Sailing Ship",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "3^^http://www.w3.org/2001/XMLSchema#integer",
                    "class": "type.int",
                    "friendly_name": "3",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "213.0^^http://www.w3.org/2001/XMLSchema#double",
                    "class": "type.float",
                    "friendly_name": "213.0",
                    "question_node": 0,
                    "function": ">="
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.083vt",
                    "class": "boats.hull_material",
                    "friendly_name": "Wood",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.sails.sailing_ship.number_of_masts",
                    "friendly_name": "Number of Masts"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "boats.ship.displacement",
                    "friendly_name": "Displacement"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "boats.ship.hull_material",
                    "friendly_name": "Hull material"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.sails.sailing_ship . \nVALUES ?x1 { \"3\"^^<http://www.w3.org/2001/XMLSchema#integer> } \nFILTER (?x2 >= \"213.0\"^^<http://www.w3.org/2001/XMLSchema#double>)\nVALUES ?x3 { :m.083vt } \n?x0 :base.sails.sailing_ship.number_of_masts ?x1 . \n?x0 :boats.ship.displacement ?x2 . \n?x0 :boats.ship.hull_material ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "boats"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0270tpt",
                "entity_name": "Columbia Rediviva"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017__v",
                "entity_name": "Cutty Sark"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.080ql3",
                "entity_name": "USS Bear"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jf4sf",
                "entity_name": "French frigate Hermione"
            }
        ]
    },
    {
        "qid": 481000200,
        "question": "which sex-transmitted diseases mirror the infectious agent carrying tuberculosis?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.infectious_disease",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "Infectious Disease",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06ng1",
                    "class": "medicine.transmission_route",
                    "friendly_name": "Sex",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "medicine.type_of_infectious_agent",
                    "class": "medicine.type_of_infectious_agent",
                    "friendly_name": "Type of infectious agent",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.07jwr",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "Tuberculosis",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.transmission_route.infections_that_travel_this_way",
                    "friendly_name": "Infections that travel this way"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "medicine.infectious_disease.infectious_agent_type",
                    "friendly_name": "Type of infectious agent"
                },
                {
                    "start": 2,
                    "end": 3,
                    "relation": "medicine.type_of_infectious_agent.diseases",
                    "friendly_name": "Diseases with this type of agent"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.infectious_disease . \nVALUES ?x1 { :m.06ng1 } \n?x2 :type.object.type :medicine.type_of_infectious_agent . \nVALUES ?x3 { :m.07jwr } \n?x1 :medicine.transmission_route.infections_that_travel_this_way ?x0 . \n?x0 :medicine.infectious_disease.infectious_agent_type ?x2 . \n?x2 :medicine.type_of_infectious_agent.diseases ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            }
        ]
    },
    {
        "qid": 462000402,
        "question": "queen elizabeth granted who a coat of arms to bear?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms_bearer",
                    "class": "symbols.coat_of_arms_bearer",
                    "friendly_name": "Coat of Arms Bearer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "symbols.armorial_grant",
                    "class": "symbols.armorial_grant",
                    "friendly_name": "Armorial Grant",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d1_f",
                    "class": "symbols.heraldry_granting_body",
                    "friendly_name": "queen elizabeth",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.armorial_grant.armiger",
                    "friendly_name": "Used by (Armiger)"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "symbols.armorial_grant.granted_by",
                    "friendly_name": "Granted By (if an authority granted the use to the bearer)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms_bearer . \n?x1 :type.object.type :symbols.armorial_grant . \nVALUES ?x2 { :m.0d1_f } \n?x1 :symbols.armorial_grant.armiger ?x0 . \n?x1 :symbols.armorial_grant.granted_by ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "(AND symbols.coat_of_arms_bearer (JOIN (R symbols.armorial_grant.armiger) (JOIN symbols.armorial_grant.granted_by m.0d1_f)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0847q",
                "entity_name": "Western Australia"
            }
        ]
    },
    {
        "qid": 420000401,
        "question": "who are the endorsers of coke?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.product_endorser",
                    "class": "business.product_endorser",
                    "friendly_name": "Product Endorser",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "business.product_endorsement",
                    "class": "business.product_endorsement",
                    "friendly_name": "Product Endorsement",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01yvs",
                    "class": "business.endorsed_product",
                    "friendly_name": "coke",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "business.product_endorser.products_endorsed",
                    "friendly_name": "Products Endorsed"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "business.endorsed_product.endorsements",
                    "friendly_name": "Endorsements"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.product_endorser . \n?x1 :type.object.type :business.product_endorsement . \nVALUES ?x2 { :m.01yvs } \n?x0 :business.product_endorser.products_endorsed ?x1 . \n?x2 :business.endorsed_product.endorsements ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "business"
        ],
        "s_expression": "(AND business.product_endorser (JOIN business.product_endorser.products_endorsed (JOIN (R business.endorsed_product.endorsements) m.01yvs)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04q0rh",
                "entity_name": "Gretchen Bleiler"
            }
        ]
    },
    {
        "qid": 447000001,
        "question": "which bourbon has the lowest alcohol content?",
        "answer": [],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "distilled_spirits.distilled_spirit",
                    "class": "distilled_spirits.distilled_spirit",
                    "friendly_name": "Distilled spirit",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0c59y",
                    "class": "distilled_spirits.distilled_spirit_type",
                    "friendly_name": "bourbon",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "distilled_spirits.distilled_spirit.abv",
                    "friendly_name": "Alcohol content"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "distilled_spirits.distilled_spirit.spirit_type",
                    "friendly_name": "Spirit type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :distilled_spirits.distilled_spirit . \n{\nSELECT (MIN(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :distilled_spirits.distilled_spirit . \nVALUES ?y2 { :m.0c59y } \n?y0 :distilled_spirits.distilled_spirit.abv ?y1 . \n?y0 :distilled_spirits.distilled_spirit.spirit_type ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\nVALUES ?x2 { :m.0c59y } \n?x0 :distilled_spirits.distilled_spirit.abv ?x1 . \n?x0 :distilled_spirits.distilled_spirit.spirit_type ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "distilled_spirits"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.095b59",
                "entity_name": "Cougar Bourbon"
            }
        ]
    },
    {
        "qid": 277000301,
        "question": "which asterisms appear in orion the hunter?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.asterism",
                    "class": "astronomy.asterism",
                    "friendly_name": "Asterism",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0142jk",
                    "class": "astronomy.constellation",
                    "friendly_name": "orion the hunter",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.asterism.constellations",
                    "friendly_name": "Constellations"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.asterism . \nVALUES ?x1 { :m.0142jk } \n?x0 :astronomy.asterism.constellations ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03nlltw",
                "entity_name": "Orion's Belt"
            }
        ]
    },
    {
        "qid": 325000100,
        "question": "what is the least powerful nuclear ship powerplant?",
        "answer": [],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "boats.nuclear_powerplant",
                    "class": "boats.nuclear_powerplant",
                    "friendly_name": "Nuclear Ship Powerplant",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "boats.nuclear_powerplant.power_kw",
                    "friendly_name": "Power (kw)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :boats.nuclear_powerplant . \n{\nSELECT (MIN(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :boats.nuclear_powerplant . \n?y0 :boats.nuclear_powerplant.power_kw ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :boats.nuclear_powerplant.power_kw ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "boats"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ck0rk",
                "entity_name": "VM-A reactor"
            }
        ]
    },
    {
        "qid": 278000102,
        "question": "which coat of arms used cervus canadensis as a supporter?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms",
                    "class": "symbols.coat_of_arms",
                    "friendly_name": "Coat of Arms",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.026545k",
                    "class": "symbols.heraldic_supporter",
                    "friendly_name": "cervus canadensis",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.heraldic_supporter.coat_of_arms",
                    "friendly_name": "Coat of Arms"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms . \nVALUES ?x1 { :m.026545k } \n?x1 :symbols.heraldic_supporter.coat_of_arms ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01vy7d",
                "entity_name": "Coat of arms of British Columbia"
            }
        ]
    },
    {
        "qid": 430000500,
        "question": "what works are lost for the same reason as le moulin de blute-fin?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "media_common.lost_work",
                    "class": "media_common.lost_work",
                    "friendly_name": "Lost work",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "media_common.cause_of_loss",
                    "class": "media_common.cause_of_loss",
                    "friendly_name": "Cause of loss",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0hgz3zy",
                    "class": "media_common.lost_work",
                    "friendly_name": "Le Moulin de Blute-Fin",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "media_common.lost_work.reason_for_loss",
                    "friendly_name": "Reason for loss"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "media_common.lost_work.reason_for_loss",
                    "friendly_name": "Reason for loss"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :media_common.lost_work . \n?x1 :type.object.type :media_common.cause_of_loss . \nVALUES ?x2 { :m.0hgz3zy } \n?x0 :media_common.lost_work.reason_for_loss ?x1 . \n?x2 :media_common.lost_work.reason_for_loss ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "media_common"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.044dnb2",
                "entity_name": "Vase with Five Sunflowers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059pt2q",
                "entity_name": "The Seven Sacraments: Penance"
            }
        ]
    },
    {
        "qid": 462000001,
        "question": "queen has granted a coat of arms to whom?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms_bearer",
                    "class": "symbols.coat_of_arms_bearer",
                    "friendly_name": "Coat of Arms Bearer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "symbols.armorial_grant",
                    "class": "symbols.armorial_grant",
                    "friendly_name": "Armorial Grant",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d1_f",
                    "class": "symbols.heraldry_granting_body",
                    "friendly_name": "queen",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.armorial_grant.armiger",
                    "friendly_name": "Used by (Armiger)"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "symbols.armorial_grant.granted_by",
                    "friendly_name": "Granted By (if an authority granted the use to the bearer)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms_bearer . \n?x1 :type.object.type :symbols.armorial_grant . \nVALUES ?x2 { :m.0d1_f } \n?x1 :symbols.armorial_grant.armiger ?x0 . \n?x1 :symbols.armorial_grant.granted_by ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "(AND symbols.coat_of_arms_bearer (JOIN (R symbols.armorial_grant.armiger) (JOIN symbols.armorial_grant.granted_by m.0d1_f)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0847q",
                "entity_name": "Western Australia"
            }
        ]
    },
    {
        "qid": 338000000,
        "question": "who is the bottler for the old crow whiskey?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "distilled_spirits.spirit_bottler",
                    "class": "distilled_spirits.spirit_bottler",
                    "friendly_name": "Spirit bottler",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03ntz9",
                    "class": "distilled_spirits.distilled_spirit",
                    "friendly_name": "Old Crow",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "distilled_spirits.distilled_spirit.bottler",
                    "friendly_name": "Bottler"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :distilled_spirits.spirit_bottler . \nVALUES ?x1 { :m.03ntz9 } \n?x1 :distilled_spirits.distilled_spirit.bottler ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "distilled_spirits"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06wps6",
                "entity_name": "Fortune Brands"
            }
        ]
    },
    {
        "qid": 397000200,
        "question": "in asimov's \"foundation\" series, the fictional galactic language is spoken by which species?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "fictional_universe.character_species",
                    "class": "fictional_universe.character_species",
                    "friendly_name": "Character Species",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04krrq2",
                    "class": "fictional_universe.fictional_language",
                    "friendly_name": "Galactic",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "fictional_universe.fictional_language.spoken_by",
                    "friendly_name": "Spoken by character species"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fictional_universe.character_species . \nVALUES ?x1 { :m.04krrq2 } \n?x1 :fictional_universe.fictional_language.spoken_by ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "fictional_universe"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dgw9r",
                "entity_name": "Homo sapiens"
            }
        ]
    },
    {
        "qid": 388000000,
        "question": "which scuba company was started by jacques-yves cousteau?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.scubadiving.scuba_manufacturer",
                    "class": "base.scubadiving.scuba_manufacturer",
                    "friendly_name": "Scuba Manufacturer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.044lg",
                    "class": "organization.organization_founder",
                    "friendly_name": "Jacques-Yves Cousteau",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "organization.organization.founders",
                    "friendly_name": "Founders"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.scubadiving.scuba_manufacturer . \nVALUES ?x1 { :m.044lg } \n?x0 :organization.organization.founders ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "organization"
        ],
        "s_expression": "(AND base.scubadiving.scuba_manufacturer (JOIN organization.organization.founders m.044lg))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.040bcf5",
                "entity_name": "Aqua Lung/La Spirotechnique"
            }
        ]
    },
    {
        "qid": 462000700,
        "question": "granted by elizabeth ii who bears the coat of arms?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms_bearer",
                    "class": "symbols.coat_of_arms_bearer",
                    "friendly_name": "Coat of Arms Bearer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "symbols.armorial_grant",
                    "class": "symbols.armorial_grant",
                    "friendly_name": "Armorial Grant",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d1_f",
                    "class": "symbols.heraldry_granting_body",
                    "friendly_name": "Elizabeth II",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.armorial_grant.armiger",
                    "friendly_name": "Used by (Armiger)"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "symbols.armorial_grant.granted_by",
                    "friendly_name": "Granted By (if an authority granted the use to the bearer)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms_bearer . \n?x1 :type.object.type :symbols.armorial_grant . \nVALUES ?x2 { :m.0d1_f } \n?x1 :symbols.armorial_grant.armiger ?x0 . \n?x1 :symbols.armorial_grant.granted_by ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "(AND symbols.coat_of_arms_bearer (JOIN (R symbols.armorial_grant.armiger) (JOIN symbols.armorial_grant.granted_by m.0d1_f)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0847q",
                "entity_name": "Western Australia"
            }
        ]
    },
    {
        "qid": 307000200,
        "question": "what are the tropical cyclones that have led to fewer than 74 fatalities?",
        "answer": [],
        "function": "<",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "meteorology.tropical_cyclone",
                    "class": "meteorology.tropical_cyclone",
                    "friendly_name": "Tropical Cyclone",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "74^^http://www.w3.org/2001/XMLSchema#integer",
                    "class": "type.int",
                    "friendly_name": "74",
                    "question_node": 0,
                    "function": "<"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "meteorology.tropical_cyclone.total_fatalities",
                    "friendly_name": "Total fatalities"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :meteorology.tropical_cyclone . \nFILTER (?x1 < \"74\"^^<http://www.w3.org/2001/XMLSchema#integer>)\n?x0 :meteorology.tropical_cyclone.total_fatalities ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "meteorology"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p6ph1",
                "entity_name": "Tropical Storm Lee"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01x7s0",
                "entity_name": "Tropical Storm Allison"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.021159",
                "entity_name": "Cyclone Tracy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09_bwn",
                "entity_name": "1991 Perfect Storm"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01pm2v",
                "entity_name": "Hurricane Hugo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p70bg",
                "entity_name": "Hurricane Irene"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063xjl5",
                "entity_name": "Cyclone Winifred"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011dw9h1",
                "entity_name": "Typhoon Halong"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0k0x457",
                "entity_name": "Tropical Storm Debby"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02q1bcz",
                "entity_name": "Cyclone George"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c2kdf",
                "entity_name": "Cyclone Larry"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0vsgmpg",
                "entity_name": "Hurricane Barbara"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pjl1",
                "entity_name": "Hurricane Juan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0zbwrpx",
                "entity_name": "Typhoon Wutip"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yhf4f",
                "entity_name": "Cyclone Lusi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.088nnl",
                "entity_name": "Hurricane Wilma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03mtf0",
                "entity_name": "Hurricane Charley"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03wcnw",
                "entity_name": "Hurricane Gloria"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09lv_w",
                "entity_name": "Tropical Storm Arlene"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011vldfq",
                "entity_name": "Tropical Storm Fung-wong"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0w7kbx8",
                "entity_name": "Typhoon Soulik"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011v6mk8",
                "entity_name": "Typhoon Kalmaegi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01f01h",
                "entity_name": "Hurricane Andrew"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.049ds6",
                "entity_name": "Hurricane John"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0vw_h6l",
                "entity_name": "Tropical Storm Andrea"
            }
        ]
    },
    {
        "qid": 277000302,
        "question": "which asterisms appear in the hunter?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.asterism",
                    "class": "astronomy.asterism",
                    "friendly_name": "Asterism",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0142jk",
                    "class": "astronomy.constellation",
                    "friendly_name": "the hunter",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.asterism.constellations",
                    "friendly_name": "Constellations"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.asterism . \nVALUES ?x1 { :m.0142jk } \n?x0 :astronomy.asterism.constellations ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03nlltw",
                "entity_name": "Orion's Belt"
            }
        ]
    },
    {
        "qid": 412000401,
        "question": "which specialities in the uab hospital are associated with hiv?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.medical_specialty",
                    "class": "medicine.medical_specialty",
                    "friendly_name": "Medical specialty",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0d19y2",
                    "class": "base.bioventurist.bv_medical_condition",
                    "friendly_name": "hiv",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0bt60t",
                    "class": "medicine.hospital",
                    "friendly_name": "UAB Hospital",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.disease.medical_specialties",
                    "friendly_name": "Associated medical specialties"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "medicine.hospital.medical_specialties",
                    "friendly_name": "Medical Specialties"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_specialty . \nVALUES ?x1 { :m.0d19y2 } \nVALUES ?x2 { :m.0bt60t } \n?x1 :medicine.disease.medical_specialties ?x0 . \n?x2 :medicine.hospital.medical_specialties ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(AND medicine.medical_specialty (AND (JOIN (R medicine.disease.medical_specialties) m.0d19y2) (JOIN (R medicine.hospital.medical_specialties) m.0bt60t)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dxdt",
                "entity_name": "Obstetrics and gynaecology"
            }
        ]
    },
    {
        "qid": 410000101,
        "question": "redford owns what ski sites?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "skiing.ski_area",
                    "class": "skiing.ski_area",
                    "friendly_name": "Ski Area",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "skiing.ski_area_ownership",
                    "class": "skiing.ski_area_ownership",
                    "friendly_name": "Ski Area Ownership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0gs1_",
                    "class": "skiing.ski_area_owner",
                    "friendly_name": "redford",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "skiing.ski_area_ownership.ski_area",
                    "friendly_name": "Ski Area"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "skiing.ski_area_owner.ski_areas_owned",
                    "friendly_name": "Ski Areas Owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :skiing.ski_area . \n?x1 :type.object.type :skiing.ski_area_ownership . \nVALUES ?x2 { :m.0gs1_ } \n?x1 :skiing.ski_area_ownership.ski_area ?x0 . \n?x2 :skiing.ski_area_owner.ski_areas_owned ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "skiing"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fd3v",
                "entity_name": "Sundance Resort"
            }
        ]
    },
    {
        "qid": 447000300,
        "question": "find the weakest bourbon whiskey.",
        "answer": [],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "distilled_spirits.distilled_spirit",
                    "class": "distilled_spirits.distilled_spirit",
                    "friendly_name": "Distilled spirit",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0c59y",
                    "class": "distilled_spirits.distilled_spirit_type",
                    "friendly_name": "Bourbon whiskey",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "distilled_spirits.distilled_spirit.abv",
                    "friendly_name": "Alcohol content"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "distilled_spirits.distilled_spirit.spirit_type",
                    "friendly_name": "Spirit type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :distilled_spirits.distilled_spirit . \n{\nSELECT (MIN(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :distilled_spirits.distilled_spirit . \nVALUES ?y2 { :m.0c59y } \n?y0 :distilled_spirits.distilled_spirit.abv ?y1 . \n?y0 :distilled_spirits.distilled_spirit.spirit_type ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\nVALUES ?x2 { :m.0c59y } \n?x0 :distilled_spirits.distilled_spirit.abv ?x1 . \n?x0 :distilled_spirits.distilled_spirit.spirit_type ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "distilled_spirits"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.095b59",
                "entity_name": "Cougar Bourbon"
            }
        ]
    },
    {
        "qid": 277000001,
        "question": "what asterisms are there in orion the hunter?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.asterism",
                    "class": "astronomy.asterism",
                    "friendly_name": "Asterism",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0142jk",
                    "class": "astronomy.constellation",
                    "friendly_name": "orion the hunter",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.asterism.constellations",
                    "friendly_name": "Constellations"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.asterism . \nVALUES ?x1 { :m.0142jk } \n?x0 :astronomy.asterism.constellations ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03nlltw",
                "entity_name": "Orion's Belt"
            }
        ]
    },
    {
        "qid": 269000100,
        "question": "the anglican diocese of new westminster is comprised of what churches?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.anglican.church",
                    "class": "base.anglican.church",
                    "friendly_name": "Church",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03qsr8",
                    "class": "base.anglican.diocese",
                    "friendly_name": "Anglican Diocese of New Westminster",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.anglican.diocese.church",
                    "friendly_name": "Church"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.anglican.church . \nVALUES ?x1 { :m.03qsr8 } \n?x1 :base.anglican.diocese.church ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.anglican.church (JOIN (R base.anglican.diocese.church) m.03qsr8))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04drnj",
                "entity_name": "Anglican Church of Canada"
            }
        ]
    },
    {
        "qid": 380000200,
        "question": "which district is the school head start program in?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "education.school_district",
                    "class": "education.school_district",
                    "friendly_name": "School district",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01njrf",
                    "class": "education.school",
                    "friendly_name": "Head Start Program",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "education.school_district.schools",
                    "friendly_name": "Schools"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :education.school_district . \nVALUES ?x1 { :m.01njrf } \n?x0 :education.school_district.schools ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "education"
        ],
        "s_expression": "(AND education.school_district (JOIN education.school_district.schools m.01njrf))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0480vd9",
                "entity_name": "Enfield School District"
            }
        ]
    },
    {
        "qid": 412000001,
        "question": "what are all the specialties in the uab hospital that are associated with hiv?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.medical_specialty",
                    "class": "medicine.medical_specialty",
                    "friendly_name": "Medical specialty",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0d19y2",
                    "class": "base.bioventurist.bv_medical_condition",
                    "friendly_name": "hiv",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0bt60t",
                    "class": "medicine.hospital",
                    "friendly_name": "UAB Hospital",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.disease.medical_specialties",
                    "friendly_name": "Associated medical specialties"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "medicine.hospital.medical_specialties",
                    "friendly_name": "Medical Specialties"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_specialty . \nVALUES ?x1 { :m.0d19y2 } \nVALUES ?x2 { :m.0bt60t } \n?x1 :medicine.disease.medical_specialties ?x0 . \n?x2 :medicine.hospital.medical_specialties ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(AND medicine.medical_specialty (AND (JOIN (R medicine.disease.medical_specialties) m.0d19y2) (JOIN (R medicine.hospital.medical_specialties) m.0bt60t)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dxdt",
                "entity_name": "Obstetrics and gynaecology"
            }
        ]
    },
    {
        "qid": 278000101,
        "question": "which coat of arms used wapiti as a supporter?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms",
                    "class": "symbols.coat_of_arms",
                    "friendly_name": "Coat of Arms",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.026545k",
                    "class": "symbols.heraldic_supporter",
                    "friendly_name": "wapiti",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.heraldic_supporter.coat_of_arms",
                    "friendly_name": "Coat of Arms"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms . \nVALUES ?x1 { :m.026545k } \n?x1 :symbols.heraldic_supporter.coat_of_arms ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01vy7d",
                "entity_name": "Coat of arms of British Columbia"
            }
        ]
    },
    {
        "qid": 378000101,
        "question": "in which campaigns did palin seek election for the vice president of the united states?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "government.us_vice_presidential_campaign",
                    "class": "government.us_vice_presidential_campaign",
                    "friendly_name": "US Vice Presidential campaign",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08f3b1",
                    "class": "government.politician",
                    "friendly_name": "palin",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.politician.election_campaigns",
                    "friendly_name": "Election campaigns"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :government.us_vice_presidential_campaign . \nVALUES ?x1 { :m.08f3b1 } \n?x1 :government.politician.election_campaigns ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "government"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04j5_jr",
                "entity_name": "Sarah Palin vice-presidential campaign, 2008"
            }
        ]
    },
    {
        "qid": 281000001,
        "question": "what heraldic supporters can be found in the royal arms of the united kingdom?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.heraldic_supporter",
                    "class": "symbols.heraldic_supporter",
                    "friendly_name": "Heraldic Supporter",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01g6hm",
                    "class": "symbols.coat_of_arms",
                    "friendly_name": "royal arms of the united kingdom",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "symbols.heraldic_crest.coat_of_arms",
                    "friendly_name": "Coat of Arms"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.heraldic_supporter . \nVALUES ?x1 { :m.01g6hm } \n?x0 :symbols.heraldic_crest.coat_of_arms ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d2811",
                "entity_name": "Lion"
            }
        ]
    },
    {
        "qid": 462000100,
        "question": "who has a coat of arms from elizabeth ii?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms_bearer",
                    "class": "symbols.coat_of_arms_bearer",
                    "friendly_name": "Coat of Arms Bearer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "symbols.armorial_grant",
                    "class": "symbols.armorial_grant",
                    "friendly_name": "Armorial Grant",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d1_f",
                    "class": "symbols.heraldry_granting_body",
                    "friendly_name": "Elizabeth II",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.armorial_grant.armiger",
                    "friendly_name": "Used by (Armiger)"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "symbols.armorial_grant.granted_by",
                    "friendly_name": "Granted By (if an authority granted the use to the bearer)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms_bearer . \n?x1 :type.object.type :symbols.armorial_grant . \nVALUES ?x2 { :m.0d1_f } \n?x1 :symbols.armorial_grant.armiger ?x0 . \n?x1 :symbols.armorial_grant.granted_by ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "(AND symbols.coat_of_arms_bearer (JOIN (R symbols.armorial_grant.armiger) (JOIN symbols.armorial_grant.granted_by m.0d1_f)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0847q",
                "entity_name": "Western Australia"
            }
        ]
    },
    {
        "qid": 420000300,
        "question": "who endorses coca-cola?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.product_endorser",
                    "class": "business.product_endorser",
                    "friendly_name": "Product Endorser",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "business.product_endorsement",
                    "class": "business.product_endorsement",
                    "friendly_name": "Product Endorsement",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01yvs",
                    "class": "business.endorsed_product",
                    "friendly_name": "Coca-Cola",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "business.product_endorser.products_endorsed",
                    "friendly_name": "Products Endorsed"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "business.endorsed_product.endorsements",
                    "friendly_name": "Endorsements"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.product_endorser . \n?x1 :type.object.type :business.product_endorsement . \nVALUES ?x2 { :m.01yvs } \n?x0 :business.product_endorser.products_endorsed ?x1 . \n?x2 :business.endorsed_product.endorsements ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "business"
        ],
        "s_expression": "(AND business.product_endorser (JOIN business.product_endorser.products_endorsed (JOIN (R business.endorsed_product.endorsements) m.01yvs)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04q0rh",
                "entity_name": "Gretchen Bleiler"
            }
        ]
    },
    {
        "qid": 462000002,
        "question": "queen elizabeth has granted a coat of arms to whom?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms_bearer",
                    "class": "symbols.coat_of_arms_bearer",
                    "friendly_name": "Coat of Arms Bearer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "symbols.armorial_grant",
                    "class": "symbols.armorial_grant",
                    "friendly_name": "Armorial Grant",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d1_f",
                    "class": "symbols.heraldry_granting_body",
                    "friendly_name": "queen elizabeth",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.armorial_grant.armiger",
                    "friendly_name": "Used by (Armiger)"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "symbols.armorial_grant.granted_by",
                    "friendly_name": "Granted By (if an authority granted the use to the bearer)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms_bearer . \n?x1 :type.object.type :symbols.armorial_grant . \nVALUES ?x2 { :m.0d1_f } \n?x1 :symbols.armorial_grant.armiger ?x0 . \n?x1 :symbols.armorial_grant.granted_by ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "(AND symbols.coat_of_arms_bearer (JOIN (R symbols.armorial_grant.armiger) (JOIN symbols.armorial_grant.granted_by m.0d1_f)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0847q",
                "entity_name": "Western Australia"
            }
        ]
    },
    {
        "qid": 453000300,
        "question": "the rocket engine known to have the largest sea level thrust is currently in what status?",
        "answer": [],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine_status",
                    "class": "spaceflight.rocket_engine_status",
                    "friendly_name": "Rocket engine development status",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine",
                    "class": "spaceflight.rocket_engine",
                    "friendly_name": "Rocket engine",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "spaceflight.rocket_engine.status",
                    "friendly_name": "Status"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "spaceflight.rocket_engine.thrust_sea_level",
                    "friendly_name": "Thrust (sea level)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.rocket_engine_status . \n?x1 :type.object.type :spaceflight.rocket_engine . \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :spaceflight.rocket_engine_status . \n?y1 :type.object.type :spaceflight.rocket_engine . \n?y1 :spaceflight.rocket_engine.status ?y0 . \n?y1 :spaceflight.rocket_engine.thrust_sea_level ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :spaceflight.rocket_engine.status ?x0 . \n?x1 :spaceflight.rocket_engine.thrust_sea_level ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "spaceflight"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03p41dy",
                "entity_name": "study"
            }
        ]
    },
    {
        "qid": 403000202,
        "question": "what reflecting telescopes does mount palomar observatory have?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.telescope",
                    "class": "astronomy.telescope",
                    "friendly_name": "Telescope",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.022tzk",
                    "class": "astronomy.astronomical_observatory",
                    "friendly_name": "mount palomar observatory",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01nhc9",
                    "class": "astronomy.telescope_type",
                    "friendly_name": "Reflecting telescope",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "astronomy.astronomical_observatory.telescope_s",
                    "friendly_name": "Telescope(s)"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "astronomy.telescope_type.telescopes_of_this_type",
                    "friendly_name": "Telescopes of this type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.telescope . \nVALUES ?x1 { :m.022tzk } \nVALUES ?x2 { :m.01nhc9 } \n?x1 :astronomy.astronomical_observatory.telescope_s ?x0 . \n?x2 :astronomy.telescope_type.telescopes_of_this_type ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03kj67",
                "entity_name": "Hale telescope"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09tzp39",
                "entity_name": "60 inch telescope"
            }
        ]
    },
    {
        "qid": 278000100,
        "question": "which coat of arms used elk as a supporter?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms",
                    "class": "symbols.coat_of_arms",
                    "friendly_name": "Coat of Arms",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.026545k",
                    "class": "symbols.heraldic_supporter",
                    "friendly_name": "Elk",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.heraldic_supporter.coat_of_arms",
                    "friendly_name": "Coat of Arms"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms . \nVALUES ?x1 { :m.026545k } \n?x1 :symbols.heraldic_supporter.coat_of_arms ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01vy7d",
                "entity_name": "Coat of arms of British Columbia"
            }
        ]
    },
    {
        "qid": 295000300,
        "question": "what subjects does time primarily deal with?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "book.periodical_subject",
                    "class": "book.periodical_subject",
                    "friendly_name": "Periodical Subject",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07s52",
                    "class": "book.periodical",
                    "friendly_name": "Time",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "book.periodical.subjects",
                    "friendly_name": "Subjects"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :book.periodical_subject . \nVALUES ?x1 { :m.07s52 } \n?x1 :book.periodical.subjects ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "book"
        ],
        "s_expression": "(AND book.periodical_subject (JOIN (R book.periodical.subjects) m.07s52))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05jhg",
                "entity_name": "News"
            }
        ]
    },
    {
        "qid": 380000202,
        "question": "which district is the school early head start program in?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "education.school_district",
                    "class": "education.school_district",
                    "friendly_name": "School district",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01njrf",
                    "class": "education.school",
                    "friendly_name": "early head start program",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "education.school_district.schools",
                    "friendly_name": "Schools"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :education.school_district . \nVALUES ?x1 { :m.01njrf } \n?x0 :education.school_district.schools ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "education"
        ],
        "s_expression": "(AND education.school_district (JOIN education.school_district.schools m.01njrf))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0480vd9",
                "entity_name": "Enfield School District"
            }
        ]
    },
    {
        "qid": 269000001,
        "question": "the diocese of new westminster contains which churches?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.anglican.church",
                    "class": "base.anglican.church",
                    "friendly_name": "Church",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03qsr8",
                    "class": "base.anglican.diocese",
                    "friendly_name": "diocese of new westminster",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.anglican.diocese.church",
                    "friendly_name": "Church"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.anglican.church . \nVALUES ?x1 { :m.03qsr8 } \n?x1 :base.anglican.diocese.church ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.anglican.church (JOIN (R base.anglican.diocese.church) m.03qsr8))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04drnj",
                "entity_name": "Anglican Church of Canada"
            }
        ]
    },
    {
        "qid": 269000401,
        "question": "the diocese of new westminster is made up of which churches?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.anglican.church",
                    "class": "base.anglican.church",
                    "friendly_name": "Church",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03qsr8",
                    "class": "base.anglican.diocese",
                    "friendly_name": "diocese of new westminster",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.anglican.diocese.church",
                    "friendly_name": "Church"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.anglican.church . \nVALUES ?x1 { :m.03qsr8 } \n?x1 :base.anglican.diocese.church ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.anglican.church (JOIN (R base.anglican.diocese.church) m.03qsr8))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04drnj",
                "entity_name": "Anglican Church of Canada"
            }
        ]
    },
    {
        "qid": 269000400,
        "question": "the anglican diocese of new westminster is made up of which churches?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.anglican.church",
                    "class": "base.anglican.church",
                    "friendly_name": "Church",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03qsr8",
                    "class": "base.anglican.diocese",
                    "friendly_name": "Anglican Diocese of New Westminster",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.anglican.diocese.church",
                    "friendly_name": "Church"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.anglican.church . \nVALUES ?x1 { :m.03qsr8 } \n?x1 :base.anglican.diocese.church ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.anglican.church (JOIN (R base.anglican.diocese.church) m.03qsr8))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04drnj",
                "entity_name": "Anglican Church of Canada"
            }
        ]
    },
    {
        "qid": 338000400,
        "question": "what's the bottling company for old crow?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "distilled_spirits.spirit_bottler",
                    "class": "distilled_spirits.spirit_bottler",
                    "friendly_name": "Spirit bottler",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03ntz9",
                    "class": "distilled_spirits.distilled_spirit",
                    "friendly_name": "Old Crow",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "distilled_spirits.distilled_spirit.bottler",
                    "friendly_name": "Bottler"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :distilled_spirits.spirit_bottler . \nVALUES ?x1 { :m.03ntz9 } \n?x1 :distilled_spirits.distilled_spirit.bottler ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "distilled_spirits"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06wps6",
                "entity_name": "Fortune Brands"
            }
        ]
    },
    {
        "qid": 462000502,
        "question": "who bears a coat of arms granted by queen elizabeth?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms_bearer",
                    "class": "symbols.coat_of_arms_bearer",
                    "friendly_name": "Coat of Arms Bearer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "symbols.armorial_grant",
                    "class": "symbols.armorial_grant",
                    "friendly_name": "Armorial Grant",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d1_f",
                    "class": "symbols.heraldry_granting_body",
                    "friendly_name": "queen elizabeth",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.armorial_grant.armiger",
                    "friendly_name": "Used by (Armiger)"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "symbols.armorial_grant.granted_by",
                    "friendly_name": "Granted By (if an authority granted the use to the bearer)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms_bearer . \n?x1 :type.object.type :symbols.armorial_grant . \nVALUES ?x2 { :m.0d1_f } \n?x1 :symbols.armorial_grant.armiger ?x0 . \n?x1 :symbols.armorial_grant.granted_by ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "(AND symbols.coat_of_arms_bearer (JOIN (R symbols.armorial_grant.armiger) (JOIN symbols.armorial_grant.granted_by m.0d1_f)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0847q",
                "entity_name": "Western Australia"
            }
        ]
    },
    {
        "qid": 378000200,
        "question": "find the election campaigns that sarah palin has run for vice president.",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "government.us_vice_presidential_campaign",
                    "class": "government.us_vice_presidential_campaign",
                    "friendly_name": "US Vice Presidential campaign",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08f3b1",
                    "class": "government.politician",
                    "friendly_name": "Sarah Palin",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.politician.election_campaigns",
                    "friendly_name": "Election campaigns"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :government.us_vice_presidential_campaign . \nVALUES ?x1 { :m.08f3b1 } \n?x1 :government.politician.election_campaigns ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "government"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04j5_jr",
                "entity_name": "Sarah Palin vice-presidential campaign, 2008"
            }
        ]
    },
    {
        "qid": 429000000,
        "question": "what's the current status of pratt & whitney's rocket engine?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine_status",
                    "class": "spaceflight.rocket_engine_status",
                    "friendly_name": "Rocket engine development status",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0dl93",
                    "class": "spaceflight.rocket_engine_designer",
                    "friendly_name": "Pratt & Whitney",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine",
                    "class": "spaceflight.rocket_engine",
                    "friendly_name": "Rocket engine",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 0,
                    "relation": "spaceflight.rocket_engine.status",
                    "friendly_name": "Status"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "spaceflight.rocket_engine.designed_by",
                    "friendly_name": "Designed by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.rocket_engine_status . \nVALUES ?x1 { :m.0dl93 } \n?x2 :type.object.type :spaceflight.rocket_engine . \n?x2 :spaceflight.rocket_engine.status ?x0 . \n?x2 :spaceflight.rocket_engine.designed_by ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "spaceflight"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03p41f7",
                "entity_name": "flown"
            }
        ]
    },
    {
        "qid": 481000201,
        "question": "which sex-transmitted diseases mirror the infectious agent carrying tb?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.infectious_disease",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "Infectious Disease",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06ng1",
                    "class": "medicine.transmission_route",
                    "friendly_name": "Sex",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "medicine.type_of_infectious_agent",
                    "class": "medicine.type_of_infectious_agent",
                    "friendly_name": "Type of infectious agent",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.07jwr",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "tb",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.transmission_route.infections_that_travel_this_way",
                    "friendly_name": "Infections that travel this way"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "medicine.infectious_disease.infectious_agent_type",
                    "friendly_name": "Type of infectious agent"
                },
                {
                    "start": 2,
                    "end": 3,
                    "relation": "medicine.type_of_infectious_agent.diseases",
                    "friendly_name": "Diseases with this type of agent"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.infectious_disease . \nVALUES ?x1 { :m.06ng1 } \n?x2 :type.object.type :medicine.type_of_infectious_agent . \nVALUES ?x3 { :m.07jwr } \n?x1 :medicine.transmission_route.infections_that_travel_this_way ?x0 . \n?x0 :medicine.infectious_disease.infectious_agent_type ?x2 . \n?x2 :medicine.type_of_infectious_agent.diseases ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            }
        ]
    },
    {
        "qid": 407000200,
        "question": "what ticket type is required to board the haunted mansion ride?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket",
                    "class": "amusement_parks.disney_ride_ticket",
                    "friendly_name": "Disney Ride Ticket",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket_membership",
                    "class": "amusement_parks.disney_ride_ticket_membership",
                    "friendly_name": "Disney Ride Ticket Membership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01p79p",
                    "class": "amusement_parks.disney_ride",
                    "friendly_name": "Haunted Mansion",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.disney_ride_ticket.rides",
                    "friendly_name": "Rides"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "amusement_parks.disney_ride_ticket_membership.ride",
                    "friendly_name": "Ride"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.disney_ride_ticket . \n?x1 :type.object.type :amusement_parks.disney_ride_ticket_membership . \nVALUES ?x2 { :m.01p79p } \n?x0 :amusement_parks.disney_ride_ticket.rides ?x1 . \n?x1 :amusement_parks.disney_ride_ticket_membership.ride ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "amusement_parks"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_2rl",
                "entity_name": "E ticket"
            }
        ]
    },
    {
        "qid": 429000102,
        "question": "rocket engine designed by p&w has got into which stage?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine_status",
                    "class": "spaceflight.rocket_engine_status",
                    "friendly_name": "Rocket engine development status",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0dl93",
                    "class": "spaceflight.rocket_engine_designer",
                    "friendly_name": "p&w",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine",
                    "class": "spaceflight.rocket_engine",
                    "friendly_name": "Rocket engine",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 0,
                    "relation": "spaceflight.rocket_engine.status",
                    "friendly_name": "Status"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "spaceflight.rocket_engine.designed_by",
                    "friendly_name": "Designed by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.rocket_engine_status . \nVALUES ?x1 { :m.0dl93 } \n?x2 :type.object.type :spaceflight.rocket_engine . \n?x2 :spaceflight.rocket_engine.status ?x0 . \n?x2 :spaceflight.rocket_engine.designed_by ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "spaceflight"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03p41f7",
                "entity_name": "flown"
            }
        ]
    },
    {
        "qid": 468000300,
        "question": "who were the grand masters of the chivalric order?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "royalty.chivalric_order_officer",
                    "class": "royalty.chivalric_order_officer",
                    "friendly_name": "Chivalric Order Officer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "royalty.chivalric_order_position_tenure",
                    "class": "royalty.chivalric_order_position_tenure",
                    "friendly_name": "Chivalric Order Officer Tenure",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.092pxy",
                    "class": "royalty.chivalric_office",
                    "friendly_name": "Grand Master",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "royalty.chivalric_order_position_tenure.officer",
                    "friendly_name": "Officer"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "royalty.chivalric_office.position_holders",
                    "friendly_name": "Position Holders"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :royalty.chivalric_order_officer . \n?x1 :type.object.type :royalty.chivalric_order_position_tenure . \nVALUES ?x2 { :m.092pxy } \n?x1 :royalty.chivalric_order_position_tenure.officer ?x0 . \n?x2 :royalty.chivalric_office.position_holders ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "royalty"
        ],
        "s_expression": "(AND royalty.chivalric_order_officer (JOIN (R royalty.chivalric_order_position_tenure.officer) (JOIN (R royalty.chivalric_office.position_holders) m.092pxy)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ds",
                "entity_name": "Charles III, Duke of Savoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0482zf",
                "entity_name": "Emmanuel Philibert, Duke of Savoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j56x",
                "entity_name": "Vittorio Emanuele, Prince of Naples"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j1xk",
                "entity_name": "Antipope Felix V"
            }
        ]
    },
    {
        "qid": 463000101,
        "question": "putin practices what martial art of grappling?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "martial_arts.martial_art",
                    "class": "martial_arts.martial_art",
                    "friendly_name": "Martial Art",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08193",
                    "class": "martial_arts.martial_artist",
                    "friendly_name": "putin",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.039cp",
                    "class": "martial_arts.martial_art_category",
                    "friendly_name": "Grappling",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "martial_arts.martial_artist.martial_art",
                    "friendly_name": "Martial Art(s)"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "martial_arts.martial_art.category",
                    "friendly_name": "Category"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :martial_arts.martial_art . \nVALUES ?x1 { :m.08193 } \nVALUES ?x2 { :m.039cp } \n?x1 :martial_arts.martial_artist.martial_art ?x0 . \n?x0 :martial_arts.martial_art.category ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "martial_arts"
        ],
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN (R martial_arts.martial_artist.martial_art) m.08193) (JOIN martial_arts.martial_art.category m.039cp)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_8r",
                "entity_name": "Judo"
            }
        ]
    },
    {
        "qid": 479000201,
        "question": "which tablet computers does apple make?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.consumer_product",
                    "class": "business.consumer_product",
                    "friendly_name": "Consumer product",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "business.company_product_relationship",
                    "class": "business.company_product_relationship",
                    "friendly_name": "Company-product relationship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0bh9flk",
                    "class": "business.product_category",
                    "friendly_name": "Tablet computer",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0k8z",
                    "class": "business.consumer_company",
                    "friendly_name": "apple",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "business.company_product_relationship.consumer_product",
                    "friendly_name": "Consumer product"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "business.consumer_product.category",
                    "friendly_name": "Category"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "business.company_product_relationship.company",
                    "friendly_name": "Company"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.consumer_product . \n?x1 :type.object.type :business.company_product_relationship . \nVALUES ?x2 { :m.0bh9flk } \nVALUES ?x3 { :m.0k8z } \n?x1 :business.company_product_relationship.consumer_product ?x0 . \n?x0 :business.consumer_product.category ?x2 . \n?x1 :business.company_product_relationship.company ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "business"
        ],
        "s_expression": "(AND business.consumer_product (AND (JOIN (R business.company_product_relationship.consumer_product) (JOIN business.company_product_relationship.company m.0k8z)) (JOIN business.consumer_product.category m.0bh9flk)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j30q9x",
                "entity_name": "iPad 3"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ggbcny",
                "entity_name": "iPad 2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n3s_98",
                "entity_name": "iPad Mini"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nb7vg2",
                "entity_name": "iPad 4"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nb7m7f",
                "entity_name": "iPad 1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ynv62p",
                "entity_name": "iPad Air"
            }
        ]
    },
    {
        "qid": 462000101,
        "question": "who has a coat of arms from queen?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms_bearer",
                    "class": "symbols.coat_of_arms_bearer",
                    "friendly_name": "Coat of Arms Bearer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "symbols.armorial_grant",
                    "class": "symbols.armorial_grant",
                    "friendly_name": "Armorial Grant",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d1_f",
                    "class": "symbols.heraldry_granting_body",
                    "friendly_name": "queen",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.armorial_grant.armiger",
                    "friendly_name": "Used by (Armiger)"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "symbols.armorial_grant.granted_by",
                    "friendly_name": "Granted By (if an authority granted the use to the bearer)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms_bearer . \n?x1 :type.object.type :symbols.armorial_grant . \nVALUES ?x2 { :m.0d1_f } \n?x1 :symbols.armorial_grant.armiger ?x0 . \n?x1 :symbols.armorial_grant.granted_by ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "(AND symbols.coat_of_arms_bearer (JOIN (R symbols.armorial_grant.armiger) (JOIN symbols.armorial_grant.granted_by m.0d1_f)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0847q",
                "entity_name": "Western Australia"
            }
        ]
    },
    {
        "qid": 493000200,
        "question": "what sailing ships have a displacement of at least 213.0 tons, 3 masts, and are made of wood?",
        "answer": [],
        "function": ">=",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.sails.sailing_ship",
                    "class": "base.sails.sailing_ship",
                    "friendly_name": "Sailing Ship",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "3^^http://www.w3.org/2001/XMLSchema#integer",
                    "class": "type.int",
                    "friendly_name": "3",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "213.0^^http://www.w3.org/2001/XMLSchema#double",
                    "class": "type.float",
                    "friendly_name": "213.0",
                    "question_node": 0,
                    "function": ">="
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.083vt",
                    "class": "boats.hull_material",
                    "friendly_name": "Wood",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.sails.sailing_ship.number_of_masts",
                    "friendly_name": "Number of Masts"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "boats.ship.displacement",
                    "friendly_name": "Displacement"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "boats.ship.hull_material",
                    "friendly_name": "Hull material"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.sails.sailing_ship . \nVALUES ?x1 { \"3\"^^<http://www.w3.org/2001/XMLSchema#integer> } \nFILTER (?x2 >= \"213.0\"^^<http://www.w3.org/2001/XMLSchema#double>)\nVALUES ?x3 { :m.083vt } \n?x0 :base.sails.sailing_ship.number_of_masts ?x1 . \n?x0 :boats.ship.displacement ?x2 . \n?x0 :boats.ship.hull_material ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "boats"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0270tpt",
                "entity_name": "Columbia Rediviva"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017__v",
                "entity_name": "Cutty Sark"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.080ql3",
                "entity_name": "USS Bear"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jf4sf",
                "entity_name": "French frigate Hermione"
            }
        ]
    },
    {
        "qid": 463000300,
        "question": "what type of grappling is vladimir putin skilled at performing?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "martial_arts.martial_art",
                    "class": "martial_arts.martial_art",
                    "friendly_name": "Martial Art",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08193",
                    "class": "martial_arts.martial_artist",
                    "friendly_name": "Vladimir Putin",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.039cp",
                    "class": "martial_arts.martial_art_category",
                    "friendly_name": "Grappling",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "martial_arts.martial_artist.martial_art",
                    "friendly_name": "Martial Art(s)"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "martial_arts.martial_art.category",
                    "friendly_name": "Category"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :martial_arts.martial_art . \nVALUES ?x1 { :m.08193 } \nVALUES ?x2 { :m.039cp } \n?x1 :martial_arts.martial_artist.martial_art ?x0 . \n?x0 :martial_arts.martial_art.category ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "martial_arts"
        ],
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN (R martial_arts.martial_artist.martial_art) m.08193) (JOIN martial_arts.martial_art.category m.039cp)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_8r",
                "entity_name": "Judo"
            }
        ]
    },
    {
        "qid": 453000200,
        "question": "what is the current status of the rocket engine having the largest thrust at sea level?",
        "answer": [],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine_status",
                    "class": "spaceflight.rocket_engine_status",
                    "friendly_name": "Rocket engine development status",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine",
                    "class": "spaceflight.rocket_engine",
                    "friendly_name": "Rocket engine",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "spaceflight.rocket_engine.status",
                    "friendly_name": "Status"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "spaceflight.rocket_engine.thrust_sea_level",
                    "friendly_name": "Thrust (sea level)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.rocket_engine_status . \n?x1 :type.object.type :spaceflight.rocket_engine . \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :spaceflight.rocket_engine_status . \n?y1 :type.object.type :spaceflight.rocket_engine . \n?y1 :spaceflight.rocket_engine.status ?y0 . \n?y1 :spaceflight.rocket_engine.thrust_sea_level ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :spaceflight.rocket_engine.status ?x0 . \n?x1 :spaceflight.rocket_engine.thrust_sea_level ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "spaceflight"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03p41dy",
                "entity_name": "study"
            }
        ]
    },
    {
        "qid": 412000101,
        "question": "which uab hospital specialties are hiv related?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.medical_specialty",
                    "class": "medicine.medical_specialty",
                    "friendly_name": "Medical specialty",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0d19y2",
                    "class": "base.bioventurist.bv_medical_condition",
                    "friendly_name": "hiv",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0bt60t",
                    "class": "medicine.hospital",
                    "friendly_name": "UAB Hospital",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.disease.medical_specialties",
                    "friendly_name": "Associated medical specialties"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "medicine.hospital.medical_specialties",
                    "friendly_name": "Medical Specialties"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_specialty . \nVALUES ?x1 { :m.0d19y2 } \nVALUES ?x2 { :m.0bt60t } \n?x1 :medicine.disease.medical_specialties ?x0 . \n?x2 :medicine.hospital.medical_specialties ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(AND medicine.medical_specialty (AND (JOIN (R medicine.disease.medical_specialties) m.0d19y2) (JOIN (R medicine.hospital.medical_specialties) m.0bt60t)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dxdt",
                "entity_name": "Obstetrics and gynaecology"
            }
        ]
    },
    {
        "qid": 453000000,
        "question": "how is the rocket engine with the strongest sea level thrust now?",
        "answer": [],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine_status",
                    "class": "spaceflight.rocket_engine_status",
                    "friendly_name": "Rocket engine development status",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine",
                    "class": "spaceflight.rocket_engine",
                    "friendly_name": "Rocket engine",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "spaceflight.rocket_engine.status",
                    "friendly_name": "Status"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "spaceflight.rocket_engine.thrust_sea_level",
                    "friendly_name": "Thrust (sea level)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.rocket_engine_status . \n?x1 :type.object.type :spaceflight.rocket_engine . \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :spaceflight.rocket_engine_status . \n?y1 :type.object.type :spaceflight.rocket_engine . \n?y1 :spaceflight.rocket_engine.status ?y0 . \n?y1 :spaceflight.rocket_engine.thrust_sea_level ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :spaceflight.rocket_engine.status ?x0 . \n?x1 :spaceflight.rocket_engine.thrust_sea_level ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "spaceflight"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03p41dy",
                "entity_name": "study"
            }
        ]
    },
    {
        "qid": 411000400,
        "question": "the maximum amount of fatalities was caused by which tropical cyclone in the 2008 atlantic hurricane season?",
        "answer": [],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "meteorology.tropical_cyclone",
                    "class": "meteorology.tropical_cyclone",
                    "friendly_name": "Tropical Cyclone",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02vkb3f",
                    "class": "meteorology.tropical_cyclone_season",
                    "friendly_name": "2008 Atlantic hurricane season",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "meteorology.tropical_cyclone_season.tropical_cyclones",
                    "friendly_name": "Tropical cyclones"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "meteorology.tropical_cyclone.total_fatalities",
                    "friendly_name": "Total fatalities"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :meteorology.tropical_cyclone . \nVALUES ?x1 { :m.02vkb3f } \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :meteorology.tropical_cyclone . \nVALUES ?y1 { :m.02vkb3f } \n?y1 :meteorology.tropical_cyclone_season.tropical_cyclones ?y0 . \n?y0 :meteorology.tropical_cyclone.total_fatalities ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :meteorology.tropical_cyclone_season.tropical_cyclones ?x0 . \n?x0 :meteorology.tropical_cyclone.total_fatalities ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "meteorology"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jhm3w",
                "entity_name": "Hurricane Hanna"
            }
        ]
    },
    {
        "qid": 407000300,
        "question": "what kind of ticket is needed to ride haunted mansion?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket",
                    "class": "amusement_parks.disney_ride_ticket",
                    "friendly_name": "Disney Ride Ticket",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket_membership",
                    "class": "amusement_parks.disney_ride_ticket_membership",
                    "friendly_name": "Disney Ride Ticket Membership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01p79p",
                    "class": "amusement_parks.disney_ride",
                    "friendly_name": "Haunted Mansion",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.disney_ride_ticket.rides",
                    "friendly_name": "Rides"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "amusement_parks.disney_ride_ticket_membership.ride",
                    "friendly_name": "Ride"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.disney_ride_ticket . \n?x1 :type.object.type :amusement_parks.disney_ride_ticket_membership . \nVALUES ?x2 { :m.01p79p } \n?x0 :amusement_parks.disney_ride_ticket.rides ?x1 . \n?x1 :amusement_parks.disney_ride_ticket_membership.ride ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "amusement_parks"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_2rl",
                "entity_name": "E ticket"
            }
        ]
    },
    {
        "qid": 422000300,
        "question": "who is the original singer of my heart will go on?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "film.film_song_performer",
                    "class": "film.film_song_performer",
                    "friendly_name": "Film song performer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "film.film_song_relationship",
                    "class": "film.film_song_relationship",
                    "friendly_name": "Film song relationship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03q8sx",
                    "class": "film.film_song",
                    "friendly_name": "My Heart Will Go On",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.film_song_relationship.performers",
                    "friendly_name": "Performers"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.film_song.films",
                    "friendly_name": "Films"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :film.film_song_performer . \n?x1 :type.object.type :film.film_song_relationship . \nVALUES ?x2 { :m.03q8sx } \n?x1 :film.film_song_relationship.performers ?x0 . \n?x2 :film.film_song.films ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "film"
        ],
        "s_expression": "(AND film.film_song_performer (JOIN (R film.film_song_relationship.performers) (JOIN (R film.film_song.films) m.03q8sx)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01cwhp",
                "entity_name": "Celine Dion"
            }
        ]
    },
    {
        "qid": 307000000,
        "question": "find tropical cyclones with total fatalities less than 74.",
        "answer": [],
        "function": "<",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "meteorology.tropical_cyclone",
                    "class": "meteorology.tropical_cyclone",
                    "friendly_name": "Tropical Cyclone",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "74^^http://www.w3.org/2001/XMLSchema#integer",
                    "class": "type.int",
                    "friendly_name": "74",
                    "question_node": 0,
                    "function": "<"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "meteorology.tropical_cyclone.total_fatalities",
                    "friendly_name": "Total fatalities"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :meteorology.tropical_cyclone . \nFILTER (?x1 < \"74\"^^<http://www.w3.org/2001/XMLSchema#integer>)\n?x0 :meteorology.tropical_cyclone.total_fatalities ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "meteorology"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p6ph1",
                "entity_name": "Tropical Storm Lee"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01x7s0",
                "entity_name": "Tropical Storm Allison"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.021159",
                "entity_name": "Cyclone Tracy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09_bwn",
                "entity_name": "1991 Perfect Storm"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01pm2v",
                "entity_name": "Hurricane Hugo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p70bg",
                "entity_name": "Hurricane Irene"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063xjl5",
                "entity_name": "Cyclone Winifred"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011dw9h1",
                "entity_name": "Typhoon Halong"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0k0x457",
                "entity_name": "Tropical Storm Debby"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02q1bcz",
                "entity_name": "Cyclone George"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c2kdf",
                "entity_name": "Cyclone Larry"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0vsgmpg",
                "entity_name": "Hurricane Barbara"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pjl1",
                "entity_name": "Hurricane Juan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0zbwrpx",
                "entity_name": "Typhoon Wutip"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_yhf4f",
                "entity_name": "Cyclone Lusi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.088nnl",
                "entity_name": "Hurricane Wilma"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03mtf0",
                "entity_name": "Hurricane Charley"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03wcnw",
                "entity_name": "Hurricane Gloria"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09lv_w",
                "entity_name": "Tropical Storm Arlene"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011vldfq",
                "entity_name": "Tropical Storm Fung-wong"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0w7kbx8",
                "entity_name": "Typhoon Soulik"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011v6mk8",
                "entity_name": "Typhoon Kalmaegi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01f01h",
                "entity_name": "Hurricane Andrew"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.049ds6",
                "entity_name": "Hurricane John"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0vw_h6l",
                "entity_name": "Tropical Storm Andrea"
            }
        ]
    },
    {
        "qid": 338000500,
        "question": "what is the name of the manufacturer of old crow bottles?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "distilled_spirits.spirit_bottler",
                    "class": "distilled_spirits.spirit_bottler",
                    "friendly_name": "Spirit bottler",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03ntz9",
                    "class": "distilled_spirits.distilled_spirit",
                    "friendly_name": "Old Crow",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "distilled_spirits.distilled_spirit.bottler",
                    "friendly_name": "Bottler"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :distilled_spirits.spirit_bottler . \nVALUES ?x1 { :m.03ntz9 } \n?x1 :distilled_spirits.distilled_spirit.bottler ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "distilled_spirits"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06wps6",
                "entity_name": "Fortune Brands"
            }
        ]
    },
    {
        "qid": 407000302,
        "question": "what kind of ticket is needed to ride haunted manison?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket",
                    "class": "amusement_parks.disney_ride_ticket",
                    "friendly_name": "Disney Ride Ticket",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket_membership",
                    "class": "amusement_parks.disney_ride_ticket_membership",
                    "friendly_name": "Disney Ride Ticket Membership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01p79p",
                    "class": "amusement_parks.disney_ride",
                    "friendly_name": "haunted manison",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.disney_ride_ticket.rides",
                    "friendly_name": "Rides"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "amusement_parks.disney_ride_ticket_membership.ride",
                    "friendly_name": "Ride"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.disney_ride_ticket . \n?x1 :type.object.type :amusement_parks.disney_ride_ticket_membership . \nVALUES ?x2 { :m.01p79p } \n?x0 :amusement_parks.disney_ride_ticket.rides ?x1 . \n?x1 :amusement_parks.disney_ride_ticket_membership.ride ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "amusement_parks"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_2rl",
                "entity_name": "E ticket"
            }
        ]
    },
    {
        "qid": 429000500,
        "question": "in what stage is the rocket engine designed by pratt & whitney?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine_status",
                    "class": "spaceflight.rocket_engine_status",
                    "friendly_name": "Rocket engine development status",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0dl93",
                    "class": "spaceflight.rocket_engine_designer",
                    "friendly_name": "Pratt & Whitney",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine",
                    "class": "spaceflight.rocket_engine",
                    "friendly_name": "Rocket engine",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 0,
                    "relation": "spaceflight.rocket_engine.status",
                    "friendly_name": "Status"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "spaceflight.rocket_engine.designed_by",
                    "friendly_name": "Designed by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.rocket_engine_status . \nVALUES ?x1 { :m.0dl93 } \n?x2 :type.object.type :spaceflight.rocket_engine . \n?x2 :spaceflight.rocket_engine.status ?x0 . \n?x2 :spaceflight.rocket_engine.designed_by ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "spaceflight"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03p41f7",
                "entity_name": "flown"
            }
        ]
    },
    {
        "qid": 388000200,
        "question": "which company that manufactures scuba equipment is founded by jacques-yves cousteau?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.scubadiving.scuba_manufacturer",
                    "class": "base.scubadiving.scuba_manufacturer",
                    "friendly_name": "Scuba Manufacturer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.044lg",
                    "class": "organization.organization_founder",
                    "friendly_name": "Jacques-Yves Cousteau",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "organization.organization.founders",
                    "friendly_name": "Founders"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.scubadiving.scuba_manufacturer . \nVALUES ?x1 { :m.044lg } \n?x0 :organization.organization.founders ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "organization"
        ],
        "s_expression": "(AND base.scubadiving.scuba_manufacturer (JOIN organization.organization.founders m.044lg))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.040bcf5",
                "entity_name": "Aqua Lung/La Spirotechnique"
            }
        ]
    },
    {
        "qid": 261000100,
        "question": "cuba libre requires which ingredients?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.cocktails.cocktail_ingredient",
                    "class": "base.cocktails.cocktail_ingredient",
                    "friendly_name": "Cocktail Ingredient",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.024jj",
                    "class": "base.cocktails.cocktail",
                    "friendly_name": "Cuba Libre",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.cocktails.cocktail_ingredient.cocktails_with_this_ingredient",
                    "friendly_name": "Cocktails with this ingredient"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.cocktails.cocktail_ingredient . \nVALUES ?x1 { :m.024jj } \n?x0 :base.cocktails.cocktail_ingredient.cocktails_with_this_ingredient ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.cocktails.cocktail_ingredient (JOIN base.cocktails.cocktail_ingredient.cocktails_with_this_ingredient m.024jj))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yvs",
                "entity_name": "Coca-Cola"
            }
        ]
    },
    {
        "qid": 281000100,
        "question": "what heraldic supporters are used in the royal coat of arms of the united kingdom?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.heraldic_supporter",
                    "class": "symbols.heraldic_supporter",
                    "friendly_name": "Heraldic Supporter",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01g6hm",
                    "class": "symbols.coat_of_arms",
                    "friendly_name": "Royal coat of arms of the United Kingdom",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "symbols.heraldic_crest.coat_of_arms",
                    "friendly_name": "Coat of Arms"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.heraldic_supporter . \nVALUES ?x1 { :m.01g6hm } \n?x0 :symbols.heraldic_crest.coat_of_arms ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d2811",
                "entity_name": "Lion"
            }
        ]
    },
    {
        "qid": 295000100,
        "question": "what types of subjects does time cover?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "book.periodical_subject",
                    "class": "book.periodical_subject",
                    "friendly_name": "Periodical Subject",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07s52",
                    "class": "book.periodical",
                    "friendly_name": "Time",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "book.periodical.subjects",
                    "friendly_name": "Subjects"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :book.periodical_subject . \nVALUES ?x1 { :m.07s52 } \n?x1 :book.periodical.subjects ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "book"
        ],
        "s_expression": "(AND book.periodical_subject (JOIN (R book.periodical.subjects) m.07s52))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05jhg",
                "entity_name": "News"
            }
        ]
    },
    {
        "qid": 380000101,
        "question": "in which school district is the head start located?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "education.school_district",
                    "class": "education.school_district",
                    "friendly_name": "School district",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01njrf",
                    "class": "education.school",
                    "friendly_name": "head start",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "education.school_district.schools",
                    "friendly_name": "Schools"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :education.school_district . \nVALUES ?x1 { :m.01njrf } \n?x0 :education.school_district.schools ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "education"
        ],
        "s_expression": "(AND education.school_district (JOIN education.school_district.schools m.01njrf))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0480vd9",
                "entity_name": "Enfield School District"
            }
        ]
    },
    {
        "qid": 403000001,
        "question": "what reflecting telescopes are deployed in palomar?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.telescope",
                    "class": "astronomy.telescope",
                    "friendly_name": "Telescope",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.022tzk",
                    "class": "astronomy.astronomical_observatory",
                    "friendly_name": "palomar",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01nhc9",
                    "class": "astronomy.telescope_type",
                    "friendly_name": "Reflecting telescope",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "astronomy.astronomical_observatory.telescope_s",
                    "friendly_name": "Telescope(s)"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "astronomy.telescope_type.telescopes_of_this_type",
                    "friendly_name": "Telescopes of this type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.telescope . \nVALUES ?x1 { :m.022tzk } \nVALUES ?x2 { :m.01nhc9 } \n?x1 :astronomy.astronomical_observatory.telescope_s ?x0 . \n?x2 :astronomy.telescope_type.telescopes_of_this_type ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03kj67",
                "entity_name": "Hale telescope"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09tzp39",
                "entity_name": "60 inch telescope"
            }
        ]
    },
    {
        "qid": 403000100,
        "question": "the palomar observatory uses which types of reflecting telescopes?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.telescope",
                    "class": "astronomy.telescope",
                    "friendly_name": "Telescope",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.022tzk",
                    "class": "astronomy.astronomical_observatory",
                    "friendly_name": "Palomar Observatory",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01nhc9",
                    "class": "astronomy.telescope_type",
                    "friendly_name": "Reflecting telescope",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "astronomy.astronomical_observatory.telescope_s",
                    "friendly_name": "Telescope(s)"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "astronomy.telescope_type.telescopes_of_this_type",
                    "friendly_name": "Telescopes of this type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.telescope . \nVALUES ?x1 { :m.022tzk } \nVALUES ?x2 { :m.01nhc9 } \n?x1 :astronomy.astronomical_observatory.telescope_s ?x0 . \n?x2 :astronomy.telescope_type.telescopes_of_this_type ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03kj67",
                "entity_name": "Hale telescope"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09tzp39",
                "entity_name": "60 inch telescope"
            }
        ]
    },
    {
        "qid": 407000201,
        "question": "what ticket type is required to board the mansion ride?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket",
                    "class": "amusement_parks.disney_ride_ticket",
                    "friendly_name": "Disney Ride Ticket",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket_membership",
                    "class": "amusement_parks.disney_ride_ticket_membership",
                    "friendly_name": "Disney Ride Ticket Membership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01p79p",
                    "class": "amusement_parks.disney_ride",
                    "friendly_name": "mansion",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.disney_ride_ticket.rides",
                    "friendly_name": "Rides"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "amusement_parks.disney_ride_ticket_membership.ride",
                    "friendly_name": "Ride"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.disney_ride_ticket . \n?x1 :type.object.type :amusement_parks.disney_ride_ticket_membership . \nVALUES ?x2 { :m.01p79p } \n?x0 :amusement_parks.disney_ride_ticket.rides ?x1 . \n?x1 :amusement_parks.disney_ride_ticket_membership.ride ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "amusement_parks"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_2rl",
                "entity_name": "E ticket"
            }
        ]
    },
    {
        "qid": 277000201,
        "question": "what asterisms make up orion the hunter?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.asterism",
                    "class": "astronomy.asterism",
                    "friendly_name": "Asterism",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0142jk",
                    "class": "astronomy.constellation",
                    "friendly_name": "orion the hunter",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.asterism.constellations",
                    "friendly_name": "Constellations"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.asterism . \nVALUES ?x1 { :m.0142jk } \n?x0 :astronomy.asterism.constellations ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03nlltw",
                "entity_name": "Orion's Belt"
            }
        ]
    },
    {
        "qid": 403000101,
        "question": "the palomar uses which types of reflecting telescopes?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.telescope",
                    "class": "astronomy.telescope",
                    "friendly_name": "Telescope",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.022tzk",
                    "class": "astronomy.astronomical_observatory",
                    "friendly_name": "palomar",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01nhc9",
                    "class": "astronomy.telescope_type",
                    "friendly_name": "Reflecting telescope",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "astronomy.astronomical_observatory.telescope_s",
                    "friendly_name": "Telescope(s)"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "astronomy.telescope_type.telescopes_of_this_type",
                    "friendly_name": "Telescopes of this type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.telescope . \nVALUES ?x1 { :m.022tzk } \nVALUES ?x2 { :m.01nhc9 } \n?x1 :astronomy.astronomical_observatory.telescope_s ?x0 . \n?x2 :astronomy.telescope_type.telescopes_of_this_type ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03kj67",
                "entity_name": "Hale telescope"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09tzp39",
                "entity_name": "60 inch telescope"
            }
        ]
    },
    {
        "qid": 447000102,
        "question": "which bourbon whisky contains the least amount of alcohol?",
        "answer": [],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "distilled_spirits.distilled_spirit",
                    "class": "distilled_spirits.distilled_spirit",
                    "friendly_name": "Distilled spirit",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0c59y",
                    "class": "distilled_spirits.distilled_spirit_type",
                    "friendly_name": "bourbon whisky",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "distilled_spirits.distilled_spirit.abv",
                    "friendly_name": "Alcohol content"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "distilled_spirits.distilled_spirit.spirit_type",
                    "friendly_name": "Spirit type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :distilled_spirits.distilled_spirit . \n{\nSELECT (MIN(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :distilled_spirits.distilled_spirit . \nVALUES ?y2 { :m.0c59y } \n?y0 :distilled_spirits.distilled_spirit.abv ?y1 . \n?y0 :distilled_spirits.distilled_spirit.spirit_type ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\nVALUES ?x2 { :m.0c59y } \n?x0 :distilled_spirits.distilled_spirit.abv ?x1 . \n?x0 :distilled_spirits.distilled_spirit.spirit_type ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "distilled_spirits"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.095b59",
                "entity_name": "Cougar Bourbon"
            }
        ]
    },
    {
        "qid": 269000301,
        "question": "what churches are in the diocese of new westminster?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.anglican.church",
                    "class": "base.anglican.church",
                    "friendly_name": "Church",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03qsr8",
                    "class": "base.anglican.diocese",
                    "friendly_name": "diocese of new westminster",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.anglican.diocese.church",
                    "friendly_name": "Church"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.anglican.church . \nVALUES ?x1 { :m.03qsr8 } \n?x1 :base.anglican.diocese.church ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.anglican.church (JOIN (R base.anglican.diocese.church) m.03qsr8))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04drnj",
                "entity_name": "Anglican Church of Canada"
            }
        ]
    },
    {
        "qid": 463000700,
        "question": "vladimir putin is apt at which kind of grappling?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "martial_arts.martial_art",
                    "class": "martial_arts.martial_art",
                    "friendly_name": "Martial Art",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08193",
                    "class": "martial_arts.martial_artist",
                    "friendly_name": "Vladimir Putin",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.039cp",
                    "class": "martial_arts.martial_art_category",
                    "friendly_name": "Grappling",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "martial_arts.martial_artist.martial_art",
                    "friendly_name": "Martial Art(s)"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "martial_arts.martial_art.category",
                    "friendly_name": "Category"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :martial_arts.martial_art . \nVALUES ?x1 { :m.08193 } \nVALUES ?x2 { :m.039cp } \n?x1 :martial_arts.martial_artist.martial_art ?x0 . \n?x0 :martial_arts.martial_art.category ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "martial_arts"
        ],
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN (R martial_arts.martial_artist.martial_art) m.08193) (JOIN martial_arts.martial_art.category m.039cp)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_8r",
                "entity_name": "Judo"
            }
        ]
    },
    {
        "qid": 463000001,
        "question": "what martial art of grappling is putin practicing?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "martial_arts.martial_art",
                    "class": "martial_arts.martial_art",
                    "friendly_name": "Martial Art",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08193",
                    "class": "martial_arts.martial_artist",
                    "friendly_name": "putin",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.039cp",
                    "class": "martial_arts.martial_art_category",
                    "friendly_name": "Grappling",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "martial_arts.martial_artist.martial_art",
                    "friendly_name": "Martial Art(s)"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "martial_arts.martial_art.category",
                    "friendly_name": "Category"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :martial_arts.martial_art . \nVALUES ?x1 { :m.08193 } \nVALUES ?x2 { :m.039cp } \n?x1 :martial_arts.martial_artist.martial_art ?x0 . \n?x0 :martial_arts.martial_art.category ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "martial_arts"
        ],
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN (R martial_arts.martial_artist.martial_art) m.08193) (JOIN martial_arts.martial_art.category m.039cp)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_8r",
                "entity_name": "Judo"
            }
        ]
    },
    {
        "qid": 300000100,
        "question": "how many computer architectures are based on reduced instruction set computing?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "0",
                "entity_name": "0"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.computerscience.computer_architecture",
                    "class": "base.computerscience.computer_architecture",
                    "friendly_name": "Computer Architecture",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06jk4",
                    "class": "base.computerscience.cpu_design",
                    "friendly_name": "Reduced instruction set computing",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.computerscience.computer_architecture.cpu_design",
                    "friendly_name": "CPU Design"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.computerscience.computer_architecture . \nVALUES ?x1 { :m.06jk4 } \n?x0 :base.computerscience.computer_architecture.cpu_design ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(COUNT (AND base.computerscience.computer_architecture (JOIN base.computerscience.computer_architecture.cpu_design m.06jk4)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "4"
            }
        ]
    },
    {
        "qid": 295000000,
        "question": "what subjects are covered by time?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "book.periodical_subject",
                    "class": "book.periodical_subject",
                    "friendly_name": "Periodical Subject",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07s52",
                    "class": "book.periodical",
                    "friendly_name": "Time",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "book.periodical.subjects",
                    "friendly_name": "Subjects"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :book.periodical_subject . \nVALUES ?x1 { :m.07s52 } \n?x1 :book.periodical.subjects ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "book"
        ],
        "s_expression": "(AND book.periodical_subject (JOIN (R book.periodical.subjects) m.07s52))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05jhg",
                "entity_name": "News"
            }
        ]
    },
    {
        "qid": 429000401,
        "question": "what is the current status of the rocket engine that pw designed?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine_status",
                    "class": "spaceflight.rocket_engine_status",
                    "friendly_name": "Rocket engine development status",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0dl93",
                    "class": "spaceflight.rocket_engine_designer",
                    "friendly_name": "pw",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine",
                    "class": "spaceflight.rocket_engine",
                    "friendly_name": "Rocket engine",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 0,
                    "relation": "spaceflight.rocket_engine.status",
                    "friendly_name": "Status"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "spaceflight.rocket_engine.designed_by",
                    "friendly_name": "Designed by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.rocket_engine_status . \nVALUES ?x1 { :m.0dl93 } \n?x2 :type.object.type :spaceflight.rocket_engine . \n?x2 :spaceflight.rocket_engine.status ?x0 . \n?x2 :spaceflight.rocket_engine.designed_by ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "spaceflight"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03p41f7",
                "entity_name": "flown"
            }
        ]
    },
    {
        "qid": 388000102,
        "question": "which scuba company is founded by cousteau?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.scubadiving.scuba_manufacturer",
                    "class": "base.scubadiving.scuba_manufacturer",
                    "friendly_name": "Scuba Manufacturer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.044lg",
                    "class": "organization.organization_founder",
                    "friendly_name": "cousteau",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "organization.organization.founders",
                    "friendly_name": "Founders"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.scubadiving.scuba_manufacturer . \nVALUES ?x1 { :m.044lg } \n?x0 :organization.organization.founders ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "organization"
        ],
        "s_expression": "(AND base.scubadiving.scuba_manufacturer (JOIN organization.organization.founders m.044lg))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.040bcf5",
                "entity_name": "Aqua Lung/La Spirotechnique"
            }
        ]
    },
    {
        "qid": 407000100,
        "question": "which ticket is used for haunted mansion?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket",
                    "class": "amusement_parks.disney_ride_ticket",
                    "friendly_name": "Disney Ride Ticket",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket_membership",
                    "class": "amusement_parks.disney_ride_ticket_membership",
                    "friendly_name": "Disney Ride Ticket Membership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01p79p",
                    "class": "amusement_parks.disney_ride",
                    "friendly_name": "Haunted Mansion",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.disney_ride_ticket.rides",
                    "friendly_name": "Rides"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "amusement_parks.disney_ride_ticket_membership.ride",
                    "friendly_name": "Ride"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.disney_ride_ticket . \n?x1 :type.object.type :amusement_parks.disney_ride_ticket_membership . \nVALUES ?x2 { :m.01p79p } \n?x0 :amusement_parks.disney_ride_ticket.rides ?x1 . \n?x1 :amusement_parks.disney_ride_ticket_membership.ride ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "amusement_parks"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_2rl",
                "entity_name": "E ticket"
            }
        ]
    },
    {
        "qid": 410000100,
        "question": "robert redford owns what ski sites?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "skiing.ski_area",
                    "class": "skiing.ski_area",
                    "friendly_name": "Ski Area",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "skiing.ski_area_ownership",
                    "class": "skiing.ski_area_ownership",
                    "friendly_name": "Ski Area Ownership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0gs1_",
                    "class": "skiing.ski_area_owner",
                    "friendly_name": "Robert Redford",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "skiing.ski_area_ownership.ski_area",
                    "friendly_name": "Ski Area"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "skiing.ski_area_owner.ski_areas_owned",
                    "friendly_name": "Ski Areas Owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :skiing.ski_area . \n?x1 :type.object.type :skiing.ski_area_ownership . \nVALUES ?x2 { :m.0gs1_ } \n?x1 :skiing.ski_area_ownership.ski_area ?x0 . \n?x2 :skiing.ski_area_owner.ski_areas_owned ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "skiing"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fd3v",
                "entity_name": "Sundance Resort"
            }
        ]
    },
    {
        "qid": 482000100,
        "question": "among the amusement rides designed by the designer of haunted mansion, which one is the fastest?",
        "answer": [],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.ride",
                    "class": "amusement_parks.ride",
                    "friendly_name": "Amusement Ride",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.ride_designer",
                    "class": "amusement_parks.ride_designer",
                    "friendly_name": "Amusement Ride Designer",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01p79p",
                    "class": "amusement_parks.ride",
                    "friendly_name": "Haunted Mansion",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.ride.designer",
                    "friendly_name": "Designer"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "amusement_parks.ride_designer.rides",
                    "friendly_name": "Rides Designed"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "amusement_parks.ride.max_speed",
                    "friendly_name": "Max Speed"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.ride . \n?x1 :type.object.type :amusement_parks.ride_designer . \nVALUES ?x2 { :m.01p79p } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :amusement_parks.ride . \n?y1 :type.object.type :amusement_parks.ride_designer . \nVALUES ?y2 { :m.01p79p } \n?y0 :amusement_parks.ride.designer ?y1 . \n?y1 :amusement_parks.ride_designer.rides ?y2 . \n?y0 :amusement_parks.ride.max_speed ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x0 :amusement_parks.ride.designer ?x1 . \n?x1 :amusement_parks.ride_designer.rides ?x2 . \n?x0 :amusement_parks.ride.max_speed ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "amusement_parks"
        ],
        "s_expression": "(ARGMAX (AND amusement_parks.ride (JOIN amusement_parks.ride.designer (JOIN amusement_parks.ride_designer.rides m.01p79p))) amusement_parks.ride.max_speed)",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.040fq5",
                "entity_name": "California Screamin'"
            }
        ]
    },
    {
        "qid": 481000500,
        "question": "the infectious agents of tuberculosis are also present in what diseases transmitted by sex?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.infectious_disease",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "Infectious Disease",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06ng1",
                    "class": "medicine.transmission_route",
                    "friendly_name": "Sex",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "medicine.type_of_infectious_agent",
                    "class": "medicine.type_of_infectious_agent",
                    "friendly_name": "Type of infectious agent",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.07jwr",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "Tuberculosis",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.transmission_route.infections_that_travel_this_way",
                    "friendly_name": "Infections that travel this way"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "medicine.infectious_disease.infectious_agent_type",
                    "friendly_name": "Type of infectious agent"
                },
                {
                    "start": 2,
                    "end": 3,
                    "relation": "medicine.type_of_infectious_agent.diseases",
                    "friendly_name": "Diseases with this type of agent"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.infectious_disease . \nVALUES ?x1 { :m.06ng1 } \n?x2 :type.object.type :medicine.type_of_infectious_agent . \nVALUES ?x3 { :m.07jwr } \n?x1 :medicine.transmission_route.infections_that_travel_this_way ?x0 . \n?x0 :medicine.infectious_disease.infectious_agent_type ?x2 . \n?x2 :medicine.type_of_infectious_agent.diseases ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            }
        ]
    },
    {
        "qid": 388000201,
        "question": "which company that manufactures scuba equipment is founded by jacques cousteau?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.scubadiving.scuba_manufacturer",
                    "class": "base.scubadiving.scuba_manufacturer",
                    "friendly_name": "Scuba Manufacturer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.044lg",
                    "class": "organization.organization_founder",
                    "friendly_name": "jacques cousteau",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "organization.organization.founders",
                    "friendly_name": "Founders"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.scubadiving.scuba_manufacturer . \nVALUES ?x1 { :m.044lg } \n?x0 :organization.organization.founders ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "organization"
        ],
        "s_expression": "(AND base.scubadiving.scuba_manufacturer (JOIN organization.organization.founders m.044lg))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.040bcf5",
                "entity_name": "Aqua Lung/La Spirotechnique"
            }
        ]
    },
    {
        "qid": 468000500,
        "question": "who ever held the chivalric order title grand master?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "royalty.chivalric_order_officer",
                    "class": "royalty.chivalric_order_officer",
                    "friendly_name": "Chivalric Order Officer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "royalty.chivalric_order_position_tenure",
                    "class": "royalty.chivalric_order_position_tenure",
                    "friendly_name": "Chivalric Order Officer Tenure",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.092pxy",
                    "class": "royalty.chivalric_office",
                    "friendly_name": "Grand Master",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "royalty.chivalric_order_position_tenure.officer",
                    "friendly_name": "Officer"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "royalty.chivalric_office.position_holders",
                    "friendly_name": "Position Holders"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :royalty.chivalric_order_officer . \n?x1 :type.object.type :royalty.chivalric_order_position_tenure . \nVALUES ?x2 { :m.092pxy } \n?x1 :royalty.chivalric_order_position_tenure.officer ?x0 . \n?x2 :royalty.chivalric_office.position_holders ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "royalty"
        ],
        "s_expression": "(AND royalty.chivalric_order_officer (JOIN (R royalty.chivalric_order_position_tenure.officer) (JOIN (R royalty.chivalric_office.position_holders) m.092pxy)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ds",
                "entity_name": "Charles III, Duke of Savoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0482zf",
                "entity_name": "Emmanuel Philibert, Duke of Savoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j56x",
                "entity_name": "Vittorio Emanuele, Prince of Naples"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j1xk",
                "entity_name": "Antipope Felix V"
            }
        ]
    },
    {
        "qid": 412000402,
        "question": "which specialities in the uab hospital are associated with hiv infection?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.medical_specialty",
                    "class": "medicine.medical_specialty",
                    "friendly_name": "Medical specialty",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0d19y2",
                    "class": "base.bioventurist.bv_medical_condition",
                    "friendly_name": "hiv infection",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0bt60t",
                    "class": "medicine.hospital",
                    "friendly_name": "UAB Hospital",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.disease.medical_specialties",
                    "friendly_name": "Associated medical specialties"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "medicine.hospital.medical_specialties",
                    "friendly_name": "Medical Specialties"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_specialty . \nVALUES ?x1 { :m.0d19y2 } \nVALUES ?x2 { :m.0bt60t } \n?x1 :medicine.disease.medical_specialties ?x0 . \n?x2 :medicine.hospital.medical_specialties ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(AND medicine.medical_specialty (AND (JOIN (R medicine.disease.medical_specialties) m.0d19y2) (JOIN (R medicine.hospital.medical_specialties) m.0bt60t)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dxdt",
                "entity_name": "Obstetrics and gynaecology"
            }
        ]
    },
    {
        "qid": 370000300,
        "question": "which nfl coaches believe in christianity?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "american_football.football_coach",
                    "class": "american_football.football_coach",
                    "friendly_name": "American football head coach",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01lp8",
                    "class": "religion.religion",
                    "friendly_name": "Christianity",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.person.religion",
                    "friendly_name": "Religion"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :american_football.football_coach . \nVALUES ?x1 { :m.01lp8 } \n?x0 :people.person.religion ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "people"
        ],
        "s_expression": "(AND american_football.football_coach (JOIN people.person.religion m.01lp8))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03h4sk_",
                "entity_name": "Bill Stewart"
            }
        ]
    },
    {
        "qid": 269000501,
        "question": "what church can be found in the diocese of new westminster?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.anglican.church",
                    "class": "base.anglican.church",
                    "friendly_name": "Church",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03qsr8",
                    "class": "base.anglican.diocese",
                    "friendly_name": "diocese of new westminster",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.anglican.diocese.church",
                    "friendly_name": "Church"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.anglican.church . \nVALUES ?x1 { :m.03qsr8 } \n?x1 :base.anglican.diocese.church ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.anglican.church (JOIN (R base.anglican.diocese.church) m.03qsr8))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04drnj",
                "entity_name": "Anglican Church of Canada"
            }
        ]
    },
    {
        "qid": 398000000,
        "question": "who produces crown royal?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "distilled_spirits.spirit_blender",
                    "class": "distilled_spirits.spirit_blender",
                    "friendly_name": "Spirit product manufacturer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05j9r4",
                    "class": "distilled_spirits.blended_spirit",
                    "friendly_name": "Crown Royal",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "distilled_spirits.blended_spirit.blender",
                    "friendly_name": "Blender"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :distilled_spirits.spirit_blender . \nVALUES ?x1 { :m.05j9r4 } \n?x1 :distilled_spirits.blended_spirit.blender ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "distilled_spirits"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.022cdf",
                "entity_name": "Diageo"
            }
        ]
    },
    {
        "qid": 481000501,
        "question": "the infectious agents of tb are also present in what diseases transmitted by sex?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.infectious_disease",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "Infectious Disease",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06ng1",
                    "class": "medicine.transmission_route",
                    "friendly_name": "Sex",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "medicine.type_of_infectious_agent",
                    "class": "medicine.type_of_infectious_agent",
                    "friendly_name": "Type of infectious agent",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.07jwr",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "tb",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.transmission_route.infections_that_travel_this_way",
                    "friendly_name": "Infections that travel this way"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "medicine.infectious_disease.infectious_agent_type",
                    "friendly_name": "Type of infectious agent"
                },
                {
                    "start": 2,
                    "end": 3,
                    "relation": "medicine.type_of_infectious_agent.diseases",
                    "friendly_name": "Diseases with this type of agent"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.infectious_disease . \nVALUES ?x1 { :m.06ng1 } \n?x2 :type.object.type :medicine.type_of_infectious_agent . \nVALUES ?x3 { :m.07jwr } \n?x1 :medicine.transmission_route.infections_that_travel_this_way ?x0 . \n?x0 :medicine.infectious_disease.infectious_agent_type ?x2 . \n?x2 :medicine.type_of_infectious_agent.diseases ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            }
        ]
    },
    {
        "qid": 420000301,
        "question": "who endorses coke?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.product_endorser",
                    "class": "business.product_endorser",
                    "friendly_name": "Product Endorser",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "business.product_endorsement",
                    "class": "business.product_endorsement",
                    "friendly_name": "Product Endorsement",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01yvs",
                    "class": "business.endorsed_product",
                    "friendly_name": "coke",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "business.product_endorser.products_endorsed",
                    "friendly_name": "Products Endorsed"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "business.endorsed_product.endorsements",
                    "friendly_name": "Endorsements"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.product_endorser . \n?x1 :type.object.type :business.product_endorsement . \nVALUES ?x2 { :m.01yvs } \n?x0 :business.product_endorser.products_endorsed ?x1 . \n?x2 :business.endorsed_product.endorsements ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "business"
        ],
        "s_expression": "(AND business.product_endorser (JOIN business.product_endorser.products_endorsed (JOIN (R business.endorsed_product.endorsements) m.01yvs)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04q0rh",
                "entity_name": "Gretchen Bleiler"
            }
        ]
    },
    {
        "qid": 270000500,
        "question": "who is the proposer of the first amendment?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "law.constitutional_amendment_proposer",
                    "class": "law.constitutional_amendment_proposer",
                    "friendly_name": "Constitutional Amendment Proposer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07sgz",
                    "class": "law.constitutional_amendment",
                    "friendly_name": "First Amendment",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "law.constitutional_amendment.proposed_by",
                    "friendly_name": "Proposed by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :law.constitutional_amendment_proposer . \nVALUES ?x1 { :m.07sgz } \n?x1 :law.constitutional_amendment.proposed_by ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "law"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0424m",
                "entity_name": "James Madison"
            }
        ]
    },
    {
        "qid": 479000101,
        "question": "what tablet computer products does apple provide?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.consumer_product",
                    "class": "business.consumer_product",
                    "friendly_name": "Consumer product",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "business.company_product_relationship",
                    "class": "business.company_product_relationship",
                    "friendly_name": "Company-product relationship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0bh9flk",
                    "class": "business.product_category",
                    "friendly_name": "Tablet computer",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0k8z",
                    "class": "business.consumer_company",
                    "friendly_name": "apple",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "business.company_product_relationship.consumer_product",
                    "friendly_name": "Consumer product"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "business.consumer_product.category",
                    "friendly_name": "Category"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "business.company_product_relationship.company",
                    "friendly_name": "Company"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.consumer_product . \n?x1 :type.object.type :business.company_product_relationship . \nVALUES ?x2 { :m.0bh9flk } \nVALUES ?x3 { :m.0k8z } \n?x1 :business.company_product_relationship.consumer_product ?x0 . \n?x0 :business.consumer_product.category ?x2 . \n?x1 :business.company_product_relationship.company ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "business"
        ],
        "s_expression": "(AND business.consumer_product (AND (JOIN (R business.company_product_relationship.consumer_product) (JOIN business.company_product_relationship.company m.0k8z)) (JOIN business.consumer_product.category m.0bh9flk)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j30q9x",
                "entity_name": "iPad 3"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ggbcny",
                "entity_name": "iPad 2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n3s_98",
                "entity_name": "iPad Mini"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nb7vg2",
                "entity_name": "iPad 4"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nb7m7f",
                "entity_name": "iPad 1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ynv62p",
                "entity_name": "iPad Air"
            }
        ]
    },
    {
        "qid": 410000201,
        "question": "which ski sights does redford own?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "skiing.ski_area",
                    "class": "skiing.ski_area",
                    "friendly_name": "Ski Area",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "skiing.ski_area_ownership",
                    "class": "skiing.ski_area_ownership",
                    "friendly_name": "Ski Area Ownership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0gs1_",
                    "class": "skiing.ski_area_owner",
                    "friendly_name": "redford",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "skiing.ski_area_ownership.ski_area",
                    "friendly_name": "Ski Area"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "skiing.ski_area_owner.ski_areas_owned",
                    "friendly_name": "Ski Areas Owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :skiing.ski_area . \n?x1 :type.object.type :skiing.ski_area_ownership . \nVALUES ?x2 { :m.0gs1_ } \n?x1 :skiing.ski_area_ownership.ski_area ?x0 . \n?x2 :skiing.ski_area_owner.ski_areas_owned ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "skiing"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fd3v",
                "entity_name": "Sundance Resort"
            }
        ]
    },
    {
        "qid": 400000600,
        "question": "what are the surf films of which the casting director is sarah finn?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.surfing.surf_film",
                    "class": "base.surfing.surf_film",
                    "friendly_name": "Surf Film",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08mt595",
                    "class": "film.film_casting_director",
                    "friendly_name": "Sarah Finn",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.film_casting_director.films_casting_directed",
                    "friendly_name": "Films casting directed"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.surfing.surf_film . \nVALUES ?x1 { :m.08mt595 } \n?x1 :film.film_casting_director.films_casting_directed ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "film"
        ],
        "s_expression": "(AND base.surfing.surf_film (JOIN (R film.film_casting_director.films_casting_directed) m.08mt595))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01snqb",
                "entity_name": "Blue Crush"
            }
        ]
    },
    {
        "qid": 397000100,
        "question": "what are the species that speak the language of galactic?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "fictional_universe.character_species",
                    "class": "fictional_universe.character_species",
                    "friendly_name": "Character Species",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04krrq2",
                    "class": "fictional_universe.fictional_language",
                    "friendly_name": "Galactic",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "fictional_universe.fictional_language.spoken_by",
                    "friendly_name": "Spoken by character species"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fictional_universe.character_species . \nVALUES ?x1 { :m.04krrq2 } \n?x1 :fictional_universe.fictional_language.spoken_by ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "fictional_universe"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dgw9r",
                "entity_name": "Homo sapiens"
            }
        ]
    },
    {
        "qid": 482000102,
        "question": "among the amusement rides designed by the designer of haunted manison, which one is the fastest?",
        "answer": [],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.ride",
                    "class": "amusement_parks.ride",
                    "friendly_name": "Amusement Ride",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.ride_designer",
                    "class": "amusement_parks.ride_designer",
                    "friendly_name": "Amusement Ride Designer",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01p79p",
                    "class": "amusement_parks.ride",
                    "friendly_name": "haunted manison",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.ride.designer",
                    "friendly_name": "Designer"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "amusement_parks.ride_designer.rides",
                    "friendly_name": "Rides Designed"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "amusement_parks.ride.max_speed",
                    "friendly_name": "Max Speed"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.ride . \n?x1 :type.object.type :amusement_parks.ride_designer . \nVALUES ?x2 { :m.01p79p } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :amusement_parks.ride . \n?y1 :type.object.type :amusement_parks.ride_designer . \nVALUES ?y2 { :m.01p79p } \n?y0 :amusement_parks.ride.designer ?y1 . \n?y1 :amusement_parks.ride_designer.rides ?y2 . \n?y0 :amusement_parks.ride.max_speed ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x0 :amusement_parks.ride.designer ?x1 . \n?x1 :amusement_parks.ride_designer.rides ?x2 . \n?x0 :amusement_parks.ride.max_speed ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "amusement_parks"
        ],
        "s_expression": "(ARGMAX (AND amusement_parks.ride (JOIN amusement_parks.ride.designer (JOIN amusement_parks.ride_designer.rides m.01p79p))) amusement_parks.ride.max_speed)",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.040fq5",
                "entity_name": "California Screamin'"
            }
        ]
    },
    {
        "qid": 278000000,
        "question": "elk can be found as supporter in which coat of arms?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms",
                    "class": "symbols.coat_of_arms",
                    "friendly_name": "Coat of Arms",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.026545k",
                    "class": "symbols.heraldic_supporter",
                    "friendly_name": "Elk",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.heraldic_supporter.coat_of_arms",
                    "friendly_name": "Coat of Arms"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms . \nVALUES ?x1 { :m.026545k } \n?x1 :symbols.heraldic_supporter.coat_of_arms ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01vy7d",
                "entity_name": "Coat of arms of British Columbia"
            }
        ]
    },
    {
        "qid": 482000200,
        "question": "which amusement ride is the fastest of all the ones designed by the person who designed the haunted mansion ride?",
        "answer": [],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.ride",
                    "class": "amusement_parks.ride",
                    "friendly_name": "Amusement Ride",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.ride_designer",
                    "class": "amusement_parks.ride_designer",
                    "friendly_name": "Amusement Ride Designer",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01p79p",
                    "class": "amusement_parks.ride",
                    "friendly_name": "Haunted Mansion",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.ride.designer",
                    "friendly_name": "Designer"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "amusement_parks.ride_designer.rides",
                    "friendly_name": "Rides Designed"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "amusement_parks.ride.max_speed",
                    "friendly_name": "Max Speed"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.ride . \n?x1 :type.object.type :amusement_parks.ride_designer . \nVALUES ?x2 { :m.01p79p } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :amusement_parks.ride . \n?y1 :type.object.type :amusement_parks.ride_designer . \nVALUES ?y2 { :m.01p79p } \n?y0 :amusement_parks.ride.designer ?y1 . \n?y1 :amusement_parks.ride_designer.rides ?y2 . \n?y0 :amusement_parks.ride.max_speed ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x0 :amusement_parks.ride.designer ?x1 . \n?x1 :amusement_parks.ride_designer.rides ?x2 . \n?x0 :amusement_parks.ride.max_speed ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "amusement_parks"
        ],
        "s_expression": "(ARGMAX (AND amusement_parks.ride (JOIN amusement_parks.ride.designer (JOIN amusement_parks.ride_designer.rides m.01p79p))) amusement_parks.ride.max_speed)",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.040fq5",
                "entity_name": "California Screamin'"
            }
        ]
    },
    {
        "qid": 429000002,
        "question": "what's the current status of p&w's rocket engine?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine_status",
                    "class": "spaceflight.rocket_engine_status",
                    "friendly_name": "Rocket engine development status",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0dl93",
                    "class": "spaceflight.rocket_engine_designer",
                    "friendly_name": "p&w",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine",
                    "class": "spaceflight.rocket_engine",
                    "friendly_name": "Rocket engine",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 0,
                    "relation": "spaceflight.rocket_engine.status",
                    "friendly_name": "Status"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "spaceflight.rocket_engine.designed_by",
                    "friendly_name": "Designed by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.rocket_engine_status . \nVALUES ?x1 { :m.0dl93 } \n?x2 :type.object.type :spaceflight.rocket_engine . \n?x2 :spaceflight.rocket_engine.status ?x0 . \n?x2 :spaceflight.rocket_engine.designed_by ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "spaceflight"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03p41f7",
                "entity_name": "flown"
            }
        ]
    },
    {
        "qid": 419000001,
        "question": "what meteor showers have been recorded in the constellation that alpha lyrae is in?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.meteor_shower",
                    "class": "astronomy.meteor_shower",
                    "friendly_name": "Meteor Shower",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "astronomy.constellation",
                    "class": "astronomy.constellation",
                    "friendly_name": "Constellation",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.080jt",
                    "class": "astronomy.star",
                    "friendly_name": "alpha lyrae",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.meteor_shower.radiant",
                    "friendly_name": "Radiant"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "astronomy.star.constellation",
                    "friendly_name": "Constellation"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.meteor_shower . \n?x1 :type.object.type :astronomy.constellation . \nVALUES ?x2 { :m.080jt } \n?x0 :astronomy.meteor_shower.radiant ?x1 . \n?x2 :astronomy.star.constellation ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "(AND astronomy.meteor_shower (JOIN astronomy.meteor_shower.radiant (JOIN (R astronomy.star.constellation) m.080jt)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0267sh0",
                "entity_name": "Lyrids"
            }
        ]
    },
    {
        "qid": 412000400,
        "question": "which specialities in the uab hospital are associated with aids?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.medical_specialty",
                    "class": "medicine.medical_specialty",
                    "friendly_name": "Medical specialty",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0d19y2",
                    "class": "base.bioventurist.bv_medical_condition",
                    "friendly_name": "AIDS",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0bt60t",
                    "class": "medicine.hospital",
                    "friendly_name": "UAB Hospital",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.disease.medical_specialties",
                    "friendly_name": "Associated medical specialties"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "medicine.hospital.medical_specialties",
                    "friendly_name": "Medical Specialties"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_specialty . \nVALUES ?x1 { :m.0d19y2 } \nVALUES ?x2 { :m.0bt60t } \n?x1 :medicine.disease.medical_specialties ?x0 . \n?x2 :medicine.hospital.medical_specialties ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(AND medicine.medical_specialty (AND (JOIN (R medicine.disease.medical_specialties) m.0d19y2) (JOIN (R medicine.hospital.medical_specialties) m.0bt60t)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dxdt",
                "entity_name": "Obstetrics and gynaecology"
            }
        ]
    },
    {
        "qid": 462000702,
        "question": "granted by queen elizabeth who bears the coat of arms?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms_bearer",
                    "class": "symbols.coat_of_arms_bearer",
                    "friendly_name": "Coat of Arms Bearer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "symbols.armorial_grant",
                    "class": "symbols.armorial_grant",
                    "friendly_name": "Armorial Grant",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d1_f",
                    "class": "symbols.heraldry_granting_body",
                    "friendly_name": "queen elizabeth",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.armorial_grant.armiger",
                    "friendly_name": "Used by (Armiger)"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "symbols.armorial_grant.granted_by",
                    "friendly_name": "Granted By (if an authority granted the use to the bearer)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms_bearer . \n?x1 :type.object.type :symbols.armorial_grant . \nVALUES ?x2 { :m.0d1_f } \n?x1 :symbols.armorial_grant.armiger ?x0 . \n?x1 :symbols.armorial_grant.granted_by ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "(AND symbols.coat_of_arms_bearer (JOIN (R symbols.armorial_grant.armiger) (JOIN symbols.armorial_grant.granted_by m.0d1_f)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0847q",
                "entity_name": "Western Australia"
            }
        ]
    },
    {
        "qid": 403000200,
        "question": "what reflecting telescopes does palomar observatory have?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.telescope",
                    "class": "astronomy.telescope",
                    "friendly_name": "Telescope",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.022tzk",
                    "class": "astronomy.astronomical_observatory",
                    "friendly_name": "Palomar Observatory",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01nhc9",
                    "class": "astronomy.telescope_type",
                    "friendly_name": "Reflecting telescope",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "astronomy.astronomical_observatory.telescope_s",
                    "friendly_name": "Telescope(s)"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "astronomy.telescope_type.telescopes_of_this_type",
                    "friendly_name": "Telescopes of this type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.telescope . \nVALUES ?x1 { :m.022tzk } \nVALUES ?x2 { :m.01nhc9 } \n?x1 :astronomy.astronomical_observatory.telescope_s ?x0 . \n?x2 :astronomy.telescope_type.telescopes_of_this_type ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03kj67",
                "entity_name": "Hale telescope"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09tzp39",
                "entity_name": "60 inch telescope"
            }
        ]
    },
    {
        "qid": 278000202,
        "question": "in which coat of arms is cervus canadensis used as a supporter?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms",
                    "class": "symbols.coat_of_arms",
                    "friendly_name": "Coat of Arms",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.026545k",
                    "class": "symbols.heraldic_supporter",
                    "friendly_name": "cervus canadensis",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.heraldic_supporter.coat_of_arms",
                    "friendly_name": "Coat of Arms"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms . \nVALUES ?x1 { :m.026545k } \n?x1 :symbols.heraldic_supporter.coat_of_arms ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01vy7d",
                "entity_name": "Coat of arms of British Columbia"
            }
        ]
    },
    {
        "qid": 419000000,
        "question": "what meteor showers have been recorded in the constellation that vega is in?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.meteor_shower",
                    "class": "astronomy.meteor_shower",
                    "friendly_name": "Meteor Shower",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "astronomy.constellation",
                    "class": "astronomy.constellation",
                    "friendly_name": "Constellation",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.080jt",
                    "class": "astronomy.star",
                    "friendly_name": "Vega",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.meteor_shower.radiant",
                    "friendly_name": "Radiant"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "astronomy.star.constellation",
                    "friendly_name": "Constellation"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.meteor_shower . \n?x1 :type.object.type :astronomy.constellation . \nVALUES ?x2 { :m.080jt } \n?x0 :astronomy.meteor_shower.radiant ?x1 . \n?x2 :astronomy.star.constellation ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "(AND astronomy.meteor_shower (JOIN astronomy.meteor_shower.radiant (JOIN (R astronomy.star.constellation) m.080jt)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0267sh0",
                "entity_name": "Lyrids"
            }
        ]
    },
    {
        "qid": 475000100,
        "question": "what institution has sponsored the medical trials for rheumatoid arthritis?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.medical_trial_sponsor",
                    "class": "medicine.medical_trial_sponsor",
                    "friendly_name": "Medical trial sponsor",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "medicine.medical_trial",
                    "class": "medicine.medical_trial",
                    "friendly_name": "Medical trial",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.06g7c",
                    "class": "base.bioventurist.bv_medical_condition",
                    "friendly_name": "Rheumatoid arthritis",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.medical_trial.sponsor",
                    "friendly_name": "Sponsor"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "medicine.medical_trial.diseases",
                    "friendly_name": "Diseases"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_trial_sponsor . \n?x1 :type.object.type :medicine.medical_trial . \nVALUES ?x2 { :m.06g7c } \n?x1 :medicine.medical_trial.sponsor ?x0 . \n?x1 :medicine.medical_trial.diseases ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02n1sd",
                "entity_name": "National Institute of Arthritis and Musculoskeletal and Skin Diseases"
            }
        ]
    },
    {
        "qid": 419000401,
        "question": "what meteor showers took place in the constellation with alpha lyrae?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.meteor_shower",
                    "class": "astronomy.meteor_shower",
                    "friendly_name": "Meteor Shower",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "astronomy.constellation",
                    "class": "astronomy.constellation",
                    "friendly_name": "Constellation",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.080jt",
                    "class": "astronomy.star",
                    "friendly_name": "alpha lyrae",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.meteor_shower.radiant",
                    "friendly_name": "Radiant"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "astronomy.star.constellation",
                    "friendly_name": "Constellation"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.meteor_shower . \n?x1 :type.object.type :astronomy.constellation . \nVALUES ?x2 { :m.080jt } \n?x0 :astronomy.meteor_shower.radiant ?x1 . \n?x2 :astronomy.star.constellation ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "(AND astronomy.meteor_shower (JOIN astronomy.meteor_shower.radiant (JOIN (R astronomy.star.constellation) m.080jt)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0267sh0",
                "entity_name": "Lyrids"
            }
        ]
    },
    {
        "qid": 411000200,
        "question": "in the 2008 atlantic hurricane season, the most fatalities were caused by which tropical cyclone?",
        "answer": [],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "meteorology.tropical_cyclone",
                    "class": "meteorology.tropical_cyclone",
                    "friendly_name": "Tropical Cyclone",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02vkb3f",
                    "class": "meteorology.tropical_cyclone_season",
                    "friendly_name": "2008 Atlantic hurricane season",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "meteorology.tropical_cyclone_season.tropical_cyclones",
                    "friendly_name": "Tropical cyclones"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "meteorology.tropical_cyclone.total_fatalities",
                    "friendly_name": "Total fatalities"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :meteorology.tropical_cyclone . \nVALUES ?x1 { :m.02vkb3f } \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :meteorology.tropical_cyclone . \nVALUES ?y1 { :m.02vkb3f } \n?y1 :meteorology.tropical_cyclone_season.tropical_cyclones ?y0 . \n?y0 :meteorology.tropical_cyclone.total_fatalities ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :meteorology.tropical_cyclone_season.tropical_cyclones ?x0 . \n?x0 :meteorology.tropical_cyclone.total_fatalities ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "meteorology"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jhm3w",
                "entity_name": "Hurricane Hanna"
            }
        ]
    },
    {
        "qid": 493000300,
        "question": "what sailing ships have 3 masts, have displacement of 213.0 t or more, and are constructed from wood?",
        "answer": [],
        "function": ">=",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.sails.sailing_ship",
                    "class": "base.sails.sailing_ship",
                    "friendly_name": "Sailing Ship",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "3^^http://www.w3.org/2001/XMLSchema#integer",
                    "class": "type.int",
                    "friendly_name": "3",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "213.0^^http://www.w3.org/2001/XMLSchema#double",
                    "class": "type.float",
                    "friendly_name": "213.0",
                    "question_node": 0,
                    "function": ">="
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.083vt",
                    "class": "boats.hull_material",
                    "friendly_name": "Wood",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.sails.sailing_ship.number_of_masts",
                    "friendly_name": "Number of Masts"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "boats.ship.displacement",
                    "friendly_name": "Displacement"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "boats.ship.hull_material",
                    "friendly_name": "Hull material"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.sails.sailing_ship . \nVALUES ?x1 { \"3\"^^<http://www.w3.org/2001/XMLSchema#integer> } \nFILTER (?x2 >= \"213.0\"^^<http://www.w3.org/2001/XMLSchema#double>)\nVALUES ?x3 { :m.083vt } \n?x0 :base.sails.sailing_ship.number_of_masts ?x1 . \n?x0 :boats.ship.displacement ?x2 . \n?x0 :boats.ship.hull_material ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "boats"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0270tpt",
                "entity_name": "Columbia Rediviva"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017__v",
                "entity_name": "Cutty Sark"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.080ql3",
                "entity_name": "USS Bear"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jf4sf",
                "entity_name": "French frigate Hermione"
            }
        ]
    },
    {
        "qid": 463000500,
        "question": "what kind of grappling is vladimir putin good at?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "martial_arts.martial_art",
                    "class": "martial_arts.martial_art",
                    "friendly_name": "Martial Art",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08193",
                    "class": "martial_arts.martial_artist",
                    "friendly_name": "Vladimir Putin",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.039cp",
                    "class": "martial_arts.martial_art_category",
                    "friendly_name": "Grappling",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "martial_arts.martial_artist.martial_art",
                    "friendly_name": "Martial Art(s)"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "martial_arts.martial_art.category",
                    "friendly_name": "Category"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :martial_arts.martial_art . \nVALUES ?x1 { :m.08193 } \nVALUES ?x2 { :m.039cp } \n?x1 :martial_arts.martial_artist.martial_art ?x0 . \n?x0 :martial_arts.martial_art.category ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "martial_arts"
        ],
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN (R martial_arts.martial_artist.martial_art) m.08193) (JOIN martial_arts.martial_art.category m.039cp)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_8r",
                "entity_name": "Judo"
            }
        ]
    },
    {
        "qid": 403000002,
        "question": "what reflecting telescopes are deployed in mount palomar observatory?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.telescope",
                    "class": "astronomy.telescope",
                    "friendly_name": "Telescope",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.022tzk",
                    "class": "astronomy.astronomical_observatory",
                    "friendly_name": "mount palomar observatory",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01nhc9",
                    "class": "astronomy.telescope_type",
                    "friendly_name": "Reflecting telescope",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "astronomy.astronomical_observatory.telescope_s",
                    "friendly_name": "Telescope(s)"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "astronomy.telescope_type.telescopes_of_this_type",
                    "friendly_name": "Telescopes of this type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.telescope . \nVALUES ?x1 { :m.022tzk } \nVALUES ?x2 { :m.01nhc9 } \n?x1 :astronomy.astronomical_observatory.telescope_s ?x0 . \n?x2 :astronomy.telescope_type.telescopes_of_this_type ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03kj67",
                "entity_name": "Hale telescope"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09tzp39",
                "entity_name": "60 inch telescope"
            }
        ]
    },
    {
        "qid": 468000401,
        "question": "by whom was the chivalric order title grandmaster held?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "royalty.chivalric_order_officer",
                    "class": "royalty.chivalric_order_officer",
                    "friendly_name": "Chivalric Order Officer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "royalty.chivalric_order_position_tenure",
                    "class": "royalty.chivalric_order_position_tenure",
                    "friendly_name": "Chivalric Order Officer Tenure",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.092pxy",
                    "class": "royalty.chivalric_office",
                    "friendly_name": "grandmaster",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "royalty.chivalric_order_position_tenure.officer",
                    "friendly_name": "Officer"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "royalty.chivalric_office.position_holders",
                    "friendly_name": "Position Holders"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :royalty.chivalric_order_officer . \n?x1 :type.object.type :royalty.chivalric_order_position_tenure . \nVALUES ?x2 { :m.092pxy } \n?x1 :royalty.chivalric_order_position_tenure.officer ?x0 . \n?x2 :royalty.chivalric_office.position_holders ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "royalty"
        ],
        "s_expression": "(AND royalty.chivalric_order_officer (JOIN (R royalty.chivalric_order_position_tenure.officer) (JOIN (R royalty.chivalric_office.position_holders) m.092pxy)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ds",
                "entity_name": "Charles III, Duke of Savoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0482zf",
                "entity_name": "Emmanuel Philibert, Duke of Savoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j56x",
                "entity_name": "Vittorio Emanuele, Prince of Naples"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j1xk",
                "entity_name": "Antipope Felix V"
            }
        ]
    },
    {
        "qid": 300000200,
        "question": "how many computing archtectures use reduced instruction set computing as their basis?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "0",
                "entity_name": "0"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.computerscience.computer_architecture",
                    "class": "base.computerscience.computer_architecture",
                    "friendly_name": "Computer Architecture",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06jk4",
                    "class": "base.computerscience.cpu_design",
                    "friendly_name": "Reduced instruction set computing",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.computerscience.computer_architecture.cpu_design",
                    "friendly_name": "CPU Design"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.computerscience.computer_architecture . \nVALUES ?x1 { :m.06jk4 } \n?x0 :base.computerscience.computer_architecture.cpu_design ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(COUNT (AND base.computerscience.computer_architecture (JOIN base.computerscience.computer_architecture.cpu_design m.06jk4)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "4"
            }
        ]
    },
    {
        "qid": 429000101,
        "question": "rocket engine designed by pw has got into which stage?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine_status",
                    "class": "spaceflight.rocket_engine_status",
                    "friendly_name": "Rocket engine development status",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0dl93",
                    "class": "spaceflight.rocket_engine_designer",
                    "friendly_name": "pw",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine",
                    "class": "spaceflight.rocket_engine",
                    "friendly_name": "Rocket engine",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 0,
                    "relation": "spaceflight.rocket_engine.status",
                    "friendly_name": "Status"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "spaceflight.rocket_engine.designed_by",
                    "friendly_name": "Designed by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.rocket_engine_status . \nVALUES ?x1 { :m.0dl93 } \n?x2 :type.object.type :spaceflight.rocket_engine . \n?x2 :spaceflight.rocket_engine.status ?x0 . \n?x2 :spaceflight.rocket_engine.designed_by ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "spaceflight"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03p41f7",
                "entity_name": "flown"
            }
        ]
    },
    {
        "qid": 463000201,
        "question": "putin has mastered what type of martial arts grappling discipline?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "martial_arts.martial_art",
                    "class": "martial_arts.martial_art",
                    "friendly_name": "Martial Art",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08193",
                    "class": "martial_arts.martial_artist",
                    "friendly_name": "putin",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.039cp",
                    "class": "martial_arts.martial_art_category",
                    "friendly_name": "Grappling",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "martial_arts.martial_artist.martial_art",
                    "friendly_name": "Martial Art(s)"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "martial_arts.martial_art.category",
                    "friendly_name": "Category"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :martial_arts.martial_art . \nVALUES ?x1 { :m.08193 } \nVALUES ?x2 { :m.039cp } \n?x1 :martial_arts.martial_artist.martial_art ?x0 . \n?x0 :martial_arts.martial_art.category ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "martial_arts"
        ],
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN (R martial_arts.martial_artist.martial_art) m.08193) (JOIN martial_arts.martial_art.category m.039cp)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_8r",
                "entity_name": "Judo"
            }
        ]
    },
    {
        "qid": 277000101,
        "question": "what asterisms are in orion the hunter?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.asterism",
                    "class": "astronomy.asterism",
                    "friendly_name": "Asterism",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0142jk",
                    "class": "astronomy.constellation",
                    "friendly_name": "orion the hunter",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.asterism.constellations",
                    "friendly_name": "Constellations"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.asterism . \nVALUES ?x1 { :m.0142jk } \n?x0 :astronomy.asterism.constellations ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03nlltw",
                "entity_name": "Orion's Belt"
            }
        ]
    },
    {
        "qid": 270000301,
        "question": "the proposal of the first amendment to the us constitution can be credited to whom?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "law.constitutional_amendment_proposer",
                    "class": "law.constitutional_amendment_proposer",
                    "friendly_name": "Constitutional Amendment Proposer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07sgz",
                    "class": "law.constitutional_amendment",
                    "friendly_name": "first amendment to the us constitution",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "law.constitutional_amendment.proposed_by",
                    "friendly_name": "Proposed by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :law.constitutional_amendment_proposer . \nVALUES ?x1 { :m.07sgz } \n?x1 :law.constitutional_amendment.proposed_by ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "law"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0424m",
                "entity_name": "James Madison"
            }
        ]
    },
    {
        "qid": 277000100,
        "question": "what asterisms are in orion?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.asterism",
                    "class": "astronomy.asterism",
                    "friendly_name": "Asterism",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0142jk",
                    "class": "astronomy.constellation",
                    "friendly_name": "Orion",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.asterism.constellations",
                    "friendly_name": "Constellations"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.asterism . \nVALUES ?x1 { :m.0142jk } \n?x0 :astronomy.asterism.constellations ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03nlltw",
                "entity_name": "Orion's Belt"
            }
        ]
    },
    {
        "qid": 479000102,
        "question": "what tablet pc products does apple inc. provide?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.consumer_product",
                    "class": "business.consumer_product",
                    "friendly_name": "Consumer product",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "business.company_product_relationship",
                    "class": "business.company_product_relationship",
                    "friendly_name": "Company-product relationship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0bh9flk",
                    "class": "business.product_category",
                    "friendly_name": "tablet pc",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0k8z",
                    "class": "business.consumer_company",
                    "friendly_name": "Apple Inc.",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "business.company_product_relationship.consumer_product",
                    "friendly_name": "Consumer product"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "business.consumer_product.category",
                    "friendly_name": "Category"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "business.company_product_relationship.company",
                    "friendly_name": "Company"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.consumer_product . \n?x1 :type.object.type :business.company_product_relationship . \nVALUES ?x2 { :m.0bh9flk } \nVALUES ?x3 { :m.0k8z } \n?x1 :business.company_product_relationship.consumer_product ?x0 . \n?x0 :business.consumer_product.category ?x2 . \n?x1 :business.company_product_relationship.company ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "business"
        ],
        "s_expression": "(AND business.consumer_product (AND (JOIN (R business.company_product_relationship.consumer_product) (JOIN business.company_product_relationship.company m.0k8z)) (JOIN business.consumer_product.category m.0bh9flk)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j30q9x",
                "entity_name": "iPad 3"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ggbcny",
                "entity_name": "iPad 2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n3s_98",
                "entity_name": "iPad Mini"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nb7vg2",
                "entity_name": "iPad 4"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nb7m7f",
                "entity_name": "iPad 1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ynv62p",
                "entity_name": "iPad Air"
            }
        ]
    },
    {
        "qid": 370000000,
        "question": "which head football coaches practice christianity as their primary religion?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "american_football.football_coach",
                    "class": "american_football.football_coach",
                    "friendly_name": "American football head coach",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01lp8",
                    "class": "religion.religion",
                    "friendly_name": "Christianity",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.person.religion",
                    "friendly_name": "Religion"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :american_football.football_coach . \nVALUES ?x1 { :m.01lp8 } \n?x0 :people.person.religion ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "people"
        ],
        "s_expression": "(AND american_football.football_coach (JOIN people.person.religion m.01lp8))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03h4sk_",
                "entity_name": "Bill Stewart"
            }
        ]
    },
    {
        "qid": 270000201,
        "question": "who was the person who proposed the first amendment to the us constitution?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "law.constitutional_amendment_proposer",
                    "class": "law.constitutional_amendment_proposer",
                    "friendly_name": "Constitutional Amendment Proposer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07sgz",
                    "class": "law.constitutional_amendment",
                    "friendly_name": "first amendment to the us constitution",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "law.constitutional_amendment.proposed_by",
                    "friendly_name": "Proposed by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :law.constitutional_amendment_proposer . \nVALUES ?x1 { :m.07sgz } \n?x1 :law.constitutional_amendment.proposed_by ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "law"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0424m",
                "entity_name": "James Madison"
            }
        ]
    },
    {
        "qid": 407000501,
        "question": "what's the admission ticket of mansion?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket",
                    "class": "amusement_parks.disney_ride_ticket",
                    "friendly_name": "Disney Ride Ticket",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket_membership",
                    "class": "amusement_parks.disney_ride_ticket_membership",
                    "friendly_name": "Disney Ride Ticket Membership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01p79p",
                    "class": "amusement_parks.disney_ride",
                    "friendly_name": "mansion",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.disney_ride_ticket.rides",
                    "friendly_name": "Rides"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "amusement_parks.disney_ride_ticket_membership.ride",
                    "friendly_name": "Ride"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.disney_ride_ticket . \n?x1 :type.object.type :amusement_parks.disney_ride_ticket_membership . \nVALUES ?x2 { :m.01p79p } \n?x0 :amusement_parks.disney_ride_ticket.rides ?x1 . \n?x1 :amusement_parks.disney_ride_ticket_membership.ride ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "amusement_parks"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_2rl",
                "entity_name": "E ticket"
            }
        ]
    },
    {
        "qid": 463000602,
        "question": "vladimir v. putin is known for being good at which type of grappling?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "martial_arts.martial_art",
                    "class": "martial_arts.martial_art",
                    "friendly_name": "Martial Art",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08193",
                    "class": "martial_arts.martial_artist",
                    "friendly_name": "vladimir v. putin",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.039cp",
                    "class": "martial_arts.martial_art_category",
                    "friendly_name": "Grappling",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "martial_arts.martial_artist.martial_art",
                    "friendly_name": "Martial Art(s)"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "martial_arts.martial_art.category",
                    "friendly_name": "Category"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :martial_arts.martial_art . \nVALUES ?x1 { :m.08193 } \nVALUES ?x2 { :m.039cp } \n?x1 :martial_arts.martial_artist.martial_art ?x0 . \n?x0 :martial_arts.martial_art.category ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "martial_arts"
        ],
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN (R martial_arts.martial_artist.martial_art) m.08193) (JOIN martial_arts.martial_art.category m.039cp)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_8r",
                "entity_name": "Judo"
            }
        ]
    },
    {
        "qid": 447000302,
        "question": "find the weakest bourbon whisky.",
        "answer": [],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "distilled_spirits.distilled_spirit",
                    "class": "distilled_spirits.distilled_spirit",
                    "friendly_name": "Distilled spirit",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0c59y",
                    "class": "distilled_spirits.distilled_spirit_type",
                    "friendly_name": "bourbon whisky",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "distilled_spirits.distilled_spirit.abv",
                    "friendly_name": "Alcohol content"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "distilled_spirits.distilled_spirit.spirit_type",
                    "friendly_name": "Spirit type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :distilled_spirits.distilled_spirit . \n{\nSELECT (MIN(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :distilled_spirits.distilled_spirit . \nVALUES ?y2 { :m.0c59y } \n?y0 :distilled_spirits.distilled_spirit.abv ?y1 . \n?y0 :distilled_spirits.distilled_spirit.spirit_type ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\nVALUES ?x2 { :m.0c59y } \n?x0 :distilled_spirits.distilled_spirit.abv ?x1 . \n?x0 :distilled_spirits.distilled_spirit.spirit_type ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "distilled_spirits"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.095b59",
                "entity_name": "Cougar Bourbon"
            }
        ]
    },
    {
        "qid": 410000002,
        "question": "bob redford owns which recreational skiing locations?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "skiing.ski_area",
                    "class": "skiing.ski_area",
                    "friendly_name": "Ski Area",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "skiing.ski_area_ownership",
                    "class": "skiing.ski_area_ownership",
                    "friendly_name": "Ski Area Ownership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0gs1_",
                    "class": "skiing.ski_area_owner",
                    "friendly_name": "bob redford",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "skiing.ski_area_ownership.ski_area",
                    "friendly_name": "Ski Area"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "skiing.ski_area_owner.ski_areas_owned",
                    "friendly_name": "Ski Areas Owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :skiing.ski_area . \n?x1 :type.object.type :skiing.ski_area_ownership . \nVALUES ?x2 { :m.0gs1_ } \n?x1 :skiing.ski_area_ownership.ski_area ?x0 . \n?x2 :skiing.ski_area_owner.ski_areas_owned ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "skiing"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fd3v",
                "entity_name": "Sundance Resort"
            }
        ]
    },
    {
        "qid": 427000301,
        "question": "what barcoding system is employed by cheerio?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.barcode.barcode_system",
                    "class": "base.barcode.barcode_system",
                    "friendly_name": "Barcode system",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.barcode.barcode",
                    "class": "base.barcode.barcode",
                    "friendly_name": "Barcode",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03m1ls",
                    "class": "base.barcode.barcoded_item",
                    "friendly_name": "cheerio",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.barcode.barcode.barcode_system",
                    "friendly_name": "Barcode system"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.barcode.barcoded_item.barcode",
                    "friendly_name": "Barcode"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.barcode.barcode_system . \n?x1 :type.object.type :base.barcode.barcode . \nVALUES ?x2 { :m.03m1ls } \n?x1 :base.barcode.barcode.barcode_system ?x0 . \n?x2 :base.barcode.barcoded_item.barcode ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.barcode.barcode_system (JOIN (R base.barcode.barcode.barcode_system) (JOIN (R base.barcode.barcoded_item.barcode) m.03m1ls)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f1yc",
                "entity_name": "Universal Product Code"
            }
        ]
    },
    {
        "qid": 420000202,
        "question": "who are the spokesmen for coca cola.",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.product_endorser",
                    "class": "business.product_endorser",
                    "friendly_name": "Product Endorser",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "business.product_endorsement",
                    "class": "business.product_endorsement",
                    "friendly_name": "Product Endorsement",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01yvs",
                    "class": "business.endorsed_product",
                    "friendly_name": "coca cola",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "business.product_endorser.products_endorsed",
                    "friendly_name": "Products Endorsed"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "business.endorsed_product.endorsements",
                    "friendly_name": "Endorsements"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.product_endorser . \n?x1 :type.object.type :business.product_endorsement . \nVALUES ?x2 { :m.01yvs } \n?x0 :business.product_endorser.products_endorsed ?x1 . \n?x2 :business.endorsed_product.endorsements ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "business"
        ],
        "s_expression": "(AND business.product_endorser (JOIN business.product_endorser.products_endorsed (JOIN (R business.endorsed_product.endorsements) m.01yvs)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04q0rh",
                "entity_name": "Gretchen Bleiler"
            }
        ]
    },
    {
        "qid": 462000400,
        "question": "elizabeth ii granted who a coat of arms to bear?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms_bearer",
                    "class": "symbols.coat_of_arms_bearer",
                    "friendly_name": "Coat of Arms Bearer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "symbols.armorial_grant",
                    "class": "symbols.armorial_grant",
                    "friendly_name": "Armorial Grant",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d1_f",
                    "class": "symbols.heraldry_granting_body",
                    "friendly_name": "Elizabeth II",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.armorial_grant.armiger",
                    "friendly_name": "Used by (Armiger)"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "symbols.armorial_grant.granted_by",
                    "friendly_name": "Granted By (if an authority granted the use to the bearer)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms_bearer . \n?x1 :type.object.type :symbols.armorial_grant . \nVALUES ?x2 { :m.0d1_f } \n?x1 :symbols.armorial_grant.armiger ?x0 . \n?x1 :symbols.armorial_grant.granted_by ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "(AND symbols.coat_of_arms_bearer (JOIN (R symbols.armorial_grant.armiger) (JOIN symbols.armorial_grant.granted_by m.0d1_f)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0847q",
                "entity_name": "Western Australia"
            }
        ]
    },
    {
        "qid": 411000701,
        "question": "which tropical cyclone during the atlantic hurricane season 2008 resulted in the most fatalities?",
        "answer": [],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "meteorology.tropical_cyclone",
                    "class": "meteorology.tropical_cyclone",
                    "friendly_name": "Tropical Cyclone",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02vkb3f",
                    "class": "meteorology.tropical_cyclone_season",
                    "friendly_name": "atlantic hurricane season 2008",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "meteorology.tropical_cyclone_season.tropical_cyclones",
                    "friendly_name": "Tropical cyclones"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "meteorology.tropical_cyclone.total_fatalities",
                    "friendly_name": "Total fatalities"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :meteorology.tropical_cyclone . \nVALUES ?x1 { :m.02vkb3f } \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :meteorology.tropical_cyclone . \nVALUES ?y1 { :m.02vkb3f } \n?y1 :meteorology.tropical_cyclone_season.tropical_cyclones ?y0 . \n?y0 :meteorology.tropical_cyclone.total_fatalities ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :meteorology.tropical_cyclone_season.tropical_cyclones ?x0 . \n?x0 :meteorology.tropical_cyclone.total_fatalities ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "meteorology"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jhm3w",
                "entity_name": "Hurricane Hanna"
            }
        ]
    },
    {
        "qid": 419000201,
        "question": "what are the known meteor showers within the constellation of alpha lyrae.",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.meteor_shower",
                    "class": "astronomy.meteor_shower",
                    "friendly_name": "Meteor Shower",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "astronomy.constellation",
                    "class": "astronomy.constellation",
                    "friendly_name": "Constellation",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.080jt",
                    "class": "astronomy.star",
                    "friendly_name": "alpha lyrae",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.meteor_shower.radiant",
                    "friendly_name": "Radiant"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "astronomy.star.constellation",
                    "friendly_name": "Constellation"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.meteor_shower . \n?x1 :type.object.type :astronomy.constellation . \nVALUES ?x2 { :m.080jt } \n?x0 :astronomy.meteor_shower.radiant ?x1 . \n?x2 :astronomy.star.constellation ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "(AND astronomy.meteor_shower (JOIN astronomy.meteor_shower.radiant (JOIN (R astronomy.star.constellation) m.080jt)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0267sh0",
                "entity_name": "Lyrids"
            }
        ]
    },
    {
        "qid": 362000300,
        "question": "which tennis player is also a model?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.schemastaging.tennis_player_extra",
                    "class": "base.schemastaging.tennis_player_extra",
                    "friendly_name": "Tennis player extra",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0d1pc",
                    "class": "people.profession",
                    "friendly_name": "Model",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.person.profession",
                    "friendly_name": "Profession"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.schemastaging.tennis_player_extra . \nVALUES ?x1 { :m.0d1pc } \n?x0 :people.person.profession ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "people"
        ],
        "s_expression": "(AND base.schemastaging.tennis_player_extra (JOIN people.person.profession m.0d1pc))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03b7gw",
                "entity_name": "Maria Sharapova"
            }
        ]
    },
    {
        "qid": 411000100,
        "question": "which tropical cyclone in the 2008 atlantic hurricane season killed the most people?",
        "answer": [],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "meteorology.tropical_cyclone",
                    "class": "meteorology.tropical_cyclone",
                    "friendly_name": "Tropical Cyclone",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02vkb3f",
                    "class": "meteorology.tropical_cyclone_season",
                    "friendly_name": "2008 Atlantic hurricane season",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "meteorology.tropical_cyclone_season.tropical_cyclones",
                    "friendly_name": "Tropical cyclones"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "meteorology.tropical_cyclone.total_fatalities",
                    "friendly_name": "Total fatalities"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :meteorology.tropical_cyclone . \nVALUES ?x1 { :m.02vkb3f } \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :meteorology.tropical_cyclone . \nVALUES ?y1 { :m.02vkb3f } \n?y1 :meteorology.tropical_cyclone_season.tropical_cyclones ?y0 . \n?y0 :meteorology.tropical_cyclone.total_fatalities ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :meteorology.tropical_cyclone_season.tropical_cyclones ?x0 . \n?x0 :meteorology.tropical_cyclone.total_fatalities ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "meteorology"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jhm3w",
                "entity_name": "Hurricane Hanna"
            }
        ]
    },
    {
        "qid": 482000001,
        "question": "what's the quickest amusement ride created by the mansion designer?",
        "answer": [],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.ride",
                    "class": "amusement_parks.ride",
                    "friendly_name": "Amusement Ride",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.ride_designer",
                    "class": "amusement_parks.ride_designer",
                    "friendly_name": "Amusement Ride Designer",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01p79p",
                    "class": "amusement_parks.ride",
                    "friendly_name": "mansion",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.ride.designer",
                    "friendly_name": "Designer"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "amusement_parks.ride_designer.rides",
                    "friendly_name": "Rides Designed"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "amusement_parks.ride.max_speed",
                    "friendly_name": "Max Speed"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.ride . \n?x1 :type.object.type :amusement_parks.ride_designer . \nVALUES ?x2 { :m.01p79p } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :amusement_parks.ride . \n?y1 :type.object.type :amusement_parks.ride_designer . \nVALUES ?y2 { :m.01p79p } \n?y0 :amusement_parks.ride.designer ?y1 . \n?y1 :amusement_parks.ride_designer.rides ?y2 . \n?y0 :amusement_parks.ride.max_speed ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x0 :amusement_parks.ride.designer ?x1 . \n?x1 :amusement_parks.ride_designer.rides ?x2 . \n?x0 :amusement_parks.ride.max_speed ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "amusement_parks"
        ],
        "s_expression": "(ARGMAX (AND amusement_parks.ride (JOIN amusement_parks.ride.designer (JOIN amusement_parks.ride_designer.rides m.01p79p))) amusement_parks.ride.max_speed)",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.040fq5",
                "entity_name": "California Screamin'"
            }
        ]
    },
    {
        "qid": 462000701,
        "question": "granted by queen who bears the coat of arms?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms_bearer",
                    "class": "symbols.coat_of_arms_bearer",
                    "friendly_name": "Coat of Arms Bearer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "symbols.armorial_grant",
                    "class": "symbols.armorial_grant",
                    "friendly_name": "Armorial Grant",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d1_f",
                    "class": "symbols.heraldry_granting_body",
                    "friendly_name": "queen",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.armorial_grant.armiger",
                    "friendly_name": "Used by (Armiger)"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "symbols.armorial_grant.granted_by",
                    "friendly_name": "Granted By (if an authority granted the use to the bearer)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms_bearer . \n?x1 :type.object.type :symbols.armorial_grant . \nVALUES ?x2 { :m.0d1_f } \n?x1 :symbols.armorial_grant.armiger ?x0 . \n?x1 :symbols.armorial_grant.granted_by ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "(AND symbols.coat_of_arms_bearer (JOIN (R symbols.armorial_grant.armiger) (JOIN symbols.armorial_grant.granted_by m.0d1_f)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0847q",
                "entity_name": "Western Australia"
            }
        ]
    },
    {
        "qid": 362000400,
        "question": "which tennis player has a second job as a model?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.schemastaging.tennis_player_extra",
                    "class": "base.schemastaging.tennis_player_extra",
                    "friendly_name": "Tennis player extra",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0d1pc",
                    "class": "people.profession",
                    "friendly_name": "Model",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.person.profession",
                    "friendly_name": "Profession"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.schemastaging.tennis_player_extra . \nVALUES ?x1 { :m.0d1pc } \n?x0 :people.person.profession ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "people"
        ],
        "s_expression": "(AND base.schemastaging.tennis_player_extra (JOIN people.person.profession m.0d1pc))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03b7gw",
                "entity_name": "Maria Sharapova"
            }
        ]
    },
    {
        "qid": 378000201,
        "question": "find the election campaigns that palin has run for vice president.",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "government.us_vice_presidential_campaign",
                    "class": "government.us_vice_presidential_campaign",
                    "friendly_name": "US Vice Presidential campaign",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08f3b1",
                    "class": "government.politician",
                    "friendly_name": "palin",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.politician.election_campaigns",
                    "friendly_name": "Election campaigns"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :government.us_vice_presidential_campaign . \nVALUES ?x1 { :m.08f3b1 } \n?x1 :government.politician.election_campaigns ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "government"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04j5_jr",
                "entity_name": "Sarah Palin vice-presidential campaign, 2008"
            }
        ]
    },
    {
        "qid": 430000200,
        "question": "find the works lost due to the same reason as le moulin de blute-fin.",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "media_common.lost_work",
                    "class": "media_common.lost_work",
                    "friendly_name": "Lost work",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "media_common.cause_of_loss",
                    "class": "media_common.cause_of_loss",
                    "friendly_name": "Cause of loss",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0hgz3zy",
                    "class": "media_common.lost_work",
                    "friendly_name": "Le Moulin de Blute-Fin",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "media_common.lost_work.reason_for_loss",
                    "friendly_name": "Reason for loss"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "media_common.lost_work.reason_for_loss",
                    "friendly_name": "Reason for loss"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :media_common.lost_work . \n?x1 :type.object.type :media_common.cause_of_loss . \nVALUES ?x2 { :m.0hgz3zy } \n?x0 :media_common.lost_work.reason_for_loss ?x1 . \n?x2 :media_common.lost_work.reason_for_loss ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "media_common"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.044dnb2",
                "entity_name": "Vase with Five Sunflowers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059pt2q",
                "entity_name": "The Seven Sacraments: Penance"
            }
        ]
    },
    {
        "qid": 411000300,
        "question": "which 2008 atlantic hurricane season's tropical cyclone was the most deadly?",
        "answer": [],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "meteorology.tropical_cyclone",
                    "class": "meteorology.tropical_cyclone",
                    "friendly_name": "Tropical Cyclone",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02vkb3f",
                    "class": "meteorology.tropical_cyclone_season",
                    "friendly_name": "2008 Atlantic hurricane season",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "meteorology.tropical_cyclone_season.tropical_cyclones",
                    "friendly_name": "Tropical cyclones"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "meteorology.tropical_cyclone.total_fatalities",
                    "friendly_name": "Total fatalities"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :meteorology.tropical_cyclone . \nVALUES ?x1 { :m.02vkb3f } \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :meteorology.tropical_cyclone . \nVALUES ?y1 { :m.02vkb3f } \n?y1 :meteorology.tropical_cyclone_season.tropical_cyclones ?y0 . \n?y0 :meteorology.tropical_cyclone.total_fatalities ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :meteorology.tropical_cyclone_season.tropical_cyclones ?x0 . \n?x0 :meteorology.tropical_cyclone.total_fatalities ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "meteorology"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jhm3w",
                "entity_name": "Hurricane Hanna"
            }
        ]
    },
    {
        "qid": 325000200,
        "question": "which type of powerplant in a nuclear ship is the weakest in power?",
        "answer": [],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "boats.nuclear_powerplant",
                    "class": "boats.nuclear_powerplant",
                    "friendly_name": "Nuclear Ship Powerplant",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "boats.nuclear_powerplant.power_kw",
                    "friendly_name": "Power (kw)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :boats.nuclear_powerplant . \n{\nSELECT (MIN(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :boats.nuclear_powerplant . \n?y0 :boats.nuclear_powerplant.power_kw ?y1 . \nFILTER ( ?y0 != ?y1  )\n}\n}\n?x0 :boats.nuclear_powerplant.power_kw ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "boats"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ck0rk",
                "entity_name": "VM-A reactor"
            }
        ]
    },
    {
        "qid": 407000002,
        "question": "what type of ticket is required for admission to the haunted manison ride?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket",
                    "class": "amusement_parks.disney_ride_ticket",
                    "friendly_name": "Disney Ride Ticket",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket_membership",
                    "class": "amusement_parks.disney_ride_ticket_membership",
                    "friendly_name": "Disney Ride Ticket Membership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01p79p",
                    "class": "amusement_parks.disney_ride",
                    "friendly_name": "haunted manison",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.disney_ride_ticket.rides",
                    "friendly_name": "Rides"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "amusement_parks.disney_ride_ticket_membership.ride",
                    "friendly_name": "Ride"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.disney_ride_ticket . \n?x1 :type.object.type :amusement_parks.disney_ride_ticket_membership . \nVALUES ?x2 { :m.01p79p } \n?x0 :amusement_parks.disney_ride_ticket.rides ?x1 . \n?x1 :amusement_parks.disney_ride_ticket_membership.ride ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "amusement_parks"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_2rl",
                "entity_name": "E ticket"
            }
        ]
    },
    {
        "qid": 462000200,
        "question": "find the bearers of the coat of arms granted by elizabeth ii.",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms_bearer",
                    "class": "symbols.coat_of_arms_bearer",
                    "friendly_name": "Coat of Arms Bearer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "symbols.armorial_grant",
                    "class": "symbols.armorial_grant",
                    "friendly_name": "Armorial Grant",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d1_f",
                    "class": "symbols.heraldry_granting_body",
                    "friendly_name": "Elizabeth II",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.armorial_grant.armiger",
                    "friendly_name": "Used by (Armiger)"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "symbols.armorial_grant.granted_by",
                    "friendly_name": "Granted By (if an authority granted the use to the bearer)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms_bearer . \n?x1 :type.object.type :symbols.armorial_grant . \nVALUES ?x2 { :m.0d1_f } \n?x1 :symbols.armorial_grant.armiger ?x0 . \n?x1 :symbols.armorial_grant.granted_by ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "(AND symbols.coat_of_arms_bearer (JOIN (R symbols.armorial_grant.armiger) (JOIN symbols.armorial_grant.granted_by m.0d1_f)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0847q",
                "entity_name": "Western Australia"
            }
        ]
    },
    {
        "qid": 270000300,
        "question": "the proposal of the first amendment can be credited to whom?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "law.constitutional_amendment_proposer",
                    "class": "law.constitutional_amendment_proposer",
                    "friendly_name": "Constitutional Amendment Proposer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07sgz",
                    "class": "law.constitutional_amendment",
                    "friendly_name": "First Amendment",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "law.constitutional_amendment.proposed_by",
                    "friendly_name": "Proposed by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :law.constitutional_amendment_proposer . \nVALUES ?x1 { :m.07sgz } \n?x1 :law.constitutional_amendment.proposed_by ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "law"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0424m",
                "entity_name": "James Madison"
            }
        ]
    },
    {
        "qid": 269000200,
        "question": "the anglican diocese of new westminster consists of which churches?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.anglican.church",
                    "class": "base.anglican.church",
                    "friendly_name": "Church",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03qsr8",
                    "class": "base.anglican.diocese",
                    "friendly_name": "Anglican Diocese of New Westminster",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.anglican.diocese.church",
                    "friendly_name": "Church"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.anglican.church . \nVALUES ?x1 { :m.03qsr8 } \n?x1 :base.anglican.diocese.church ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.anglican.church (JOIN (R base.anglican.diocese.church) m.03qsr8))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04drnj",
                "entity_name": "Anglican Church of Canada"
            }
        ]
    },
    {
        "qid": 420000400,
        "question": "who are the endorsers of coca-cola?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.product_endorser",
                    "class": "business.product_endorser",
                    "friendly_name": "Product Endorser",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "business.product_endorsement",
                    "class": "business.product_endorsement",
                    "friendly_name": "Product Endorsement",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01yvs",
                    "class": "business.endorsed_product",
                    "friendly_name": "Coca-Cola",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "business.product_endorser.products_endorsed",
                    "friendly_name": "Products Endorsed"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "business.endorsed_product.endorsements",
                    "friendly_name": "Endorsements"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.product_endorser . \n?x1 :type.object.type :business.product_endorsement . \nVALUES ?x2 { :m.01yvs } \n?x0 :business.product_endorser.products_endorsed ?x1 . \n?x2 :business.endorsed_product.endorsements ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "business"
        ],
        "s_expression": "(AND business.product_endorser (JOIN business.product_endorser.products_endorsed (JOIN (R business.endorsed_product.endorsements) m.01yvs)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04q0rh",
                "entity_name": "Gretchen Bleiler"
            }
        ]
    },
    {
        "qid": 475000101,
        "question": "what institution has sponsored the medical trials for ra?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.medical_trial_sponsor",
                    "class": "medicine.medical_trial_sponsor",
                    "friendly_name": "Medical trial sponsor",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "medicine.medical_trial",
                    "class": "medicine.medical_trial",
                    "friendly_name": "Medical trial",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.06g7c",
                    "class": "base.bioventurist.bv_medical_condition",
                    "friendly_name": "ra",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.medical_trial.sponsor",
                    "friendly_name": "Sponsor"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "medicine.medical_trial.diseases",
                    "friendly_name": "Diseases"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_trial_sponsor . \n?x1 :type.object.type :medicine.medical_trial . \nVALUES ?x2 { :m.06g7c } \n?x1 :medicine.medical_trial.sponsor ?x0 . \n?x1 :medicine.medical_trial.diseases ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02n1sd",
                "entity_name": "National Institute of Arthritis and Musculoskeletal and Skin Diseases"
            }
        ]
    },
    {
        "qid": 338000200,
        "question": "who makes bottles for old crow?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "distilled_spirits.spirit_bottler",
                    "class": "distilled_spirits.spirit_bottler",
                    "friendly_name": "Spirit bottler",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03ntz9",
                    "class": "distilled_spirits.distilled_spirit",
                    "friendly_name": "Old Crow",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "distilled_spirits.distilled_spirit.bottler",
                    "friendly_name": "Bottler"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :distilled_spirits.spirit_bottler . \nVALUES ?x1 { :m.03ntz9 } \n?x1 :distilled_spirits.distilled_spirit.bottler ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "distilled_spirits"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06wps6",
                "entity_name": "Fortune Brands"
            }
        ]
    },
    {
        "qid": 479000202,
        "question": "which tablet pcs does apple inc. make?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.consumer_product",
                    "class": "business.consumer_product",
                    "friendly_name": "Consumer product",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "business.company_product_relationship",
                    "class": "business.company_product_relationship",
                    "friendly_name": "Company-product relationship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0bh9flk",
                    "class": "business.product_category",
                    "friendly_name": "tablet pc",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0k8z",
                    "class": "business.consumer_company",
                    "friendly_name": "Apple Inc.",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "business.company_product_relationship.consumer_product",
                    "friendly_name": "Consumer product"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "business.consumer_product.category",
                    "friendly_name": "Category"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "business.company_product_relationship.company",
                    "friendly_name": "Company"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.consumer_product . \n?x1 :type.object.type :business.company_product_relationship . \nVALUES ?x2 { :m.0bh9flk } \nVALUES ?x3 { :m.0k8z } \n?x1 :business.company_product_relationship.consumer_product ?x0 . \n?x0 :business.consumer_product.category ?x2 . \n?x1 :business.company_product_relationship.company ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "business"
        ],
        "s_expression": "(AND business.consumer_product (AND (JOIN (R business.company_product_relationship.consumer_product) (JOIN business.company_product_relationship.company m.0k8z)) (JOIN business.consumer_product.category m.0bh9flk)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j30q9x",
                "entity_name": "iPad 3"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ggbcny",
                "entity_name": "iPad 2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n3s_98",
                "entity_name": "iPad Mini"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nb7vg2",
                "entity_name": "iPad 4"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nb7m7f",
                "entity_name": "iPad 1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ynv62p",
                "entity_name": "iPad Air"
            }
        ]
    },
    {
        "qid": 447000002,
        "question": "which bourbon whisky has the lowest alcohol content?",
        "answer": [],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "distilled_spirits.distilled_spirit",
                    "class": "distilled_spirits.distilled_spirit",
                    "friendly_name": "Distilled spirit",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0c59y",
                    "class": "distilled_spirits.distilled_spirit_type",
                    "friendly_name": "bourbon whisky",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "distilled_spirits.distilled_spirit.abv",
                    "friendly_name": "Alcohol content"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "distilled_spirits.distilled_spirit.spirit_type",
                    "friendly_name": "Spirit type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :distilled_spirits.distilled_spirit . \n{\nSELECT (MIN(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :distilled_spirits.distilled_spirit . \nVALUES ?y2 { :m.0c59y } \n?y0 :distilled_spirits.distilled_spirit.abv ?y1 . \n?y0 :distilled_spirits.distilled_spirit.spirit_type ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\nVALUES ?x2 { :m.0c59y } \n?x0 :distilled_spirits.distilled_spirit.abv ?x1 . \n?x0 :distilled_spirits.distilled_spirit.spirit_type ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "distilled_spirits"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.095b59",
                "entity_name": "Cougar Bourbon"
            }
        ]
    },
    {
        "qid": 475000400,
        "question": "find rheumatoid arthritis trial sponsors.",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.medical_trial_sponsor",
                    "class": "medicine.medical_trial_sponsor",
                    "friendly_name": "Medical trial sponsor",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "medicine.medical_trial",
                    "class": "medicine.medical_trial",
                    "friendly_name": "Medical trial",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.06g7c",
                    "class": "base.bioventurist.bv_medical_condition",
                    "friendly_name": "Rheumatoid arthritis",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.medical_trial.sponsor",
                    "friendly_name": "Sponsor"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "medicine.medical_trial.diseases",
                    "friendly_name": "Diseases"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_trial_sponsor . \n?x1 :type.object.type :medicine.medical_trial . \nVALUES ?x2 { :m.06g7c } \n?x1 :medicine.medical_trial.sponsor ?x0 . \n?x1 :medicine.medical_trial.diseases ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02n1sd",
                "entity_name": "National Institute of Arthritis and Musculoskeletal and Skin Diseases"
            }
        ]
    },
    {
        "qid": 475000001,
        "question": "which companies served as medical trial sponsors for the condition of ra?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.medical_trial_sponsor",
                    "class": "medicine.medical_trial_sponsor",
                    "friendly_name": "Medical trial sponsor",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "medicine.medical_trial",
                    "class": "medicine.medical_trial",
                    "friendly_name": "Medical trial",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.06g7c",
                    "class": "base.bioventurist.bv_medical_condition",
                    "friendly_name": "ra",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.medical_trial.sponsor",
                    "friendly_name": "Sponsor"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "medicine.medical_trial.diseases",
                    "friendly_name": "Diseases"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_trial_sponsor . \n?x1 :type.object.type :medicine.medical_trial . \nVALUES ?x2 { :m.06g7c } \n?x1 :medicine.medical_trial.sponsor ?x0 . \n?x1 :medicine.medical_trial.diseases ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02n1sd",
                "entity_name": "National Institute of Arthritis and Musculoskeletal and Skin Diseases"
            }
        ]
    },
    {
        "qid": 463000202,
        "question": "vladimir v. putin has mastered what type of martial arts grappling discipline?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "martial_arts.martial_art",
                    "class": "martial_arts.martial_art",
                    "friendly_name": "Martial Art",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08193",
                    "class": "martial_arts.martial_artist",
                    "friendly_name": "vladimir v. putin",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.039cp",
                    "class": "martial_arts.martial_art_category",
                    "friendly_name": "Grappling",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "martial_arts.martial_artist.martial_art",
                    "friendly_name": "Martial Art(s)"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "martial_arts.martial_art.category",
                    "friendly_name": "Category"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :martial_arts.martial_art . \nVALUES ?x1 { :m.08193 } \nVALUES ?x2 { :m.039cp } \n?x1 :martial_arts.martial_artist.martial_art ?x0 . \n?x0 :martial_arts.martial_art.category ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "martial_arts"
        ],
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN (R martial_arts.martial_artist.martial_art) m.08193) (JOIN martial_arts.martial_art.category m.039cp)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_8r",
                "entity_name": "Judo"
            }
        ]
    },
    {
        "qid": 468000101,
        "question": "who in the chivalric order held the title grandmaster?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "royalty.chivalric_order_officer",
                    "class": "royalty.chivalric_order_officer",
                    "friendly_name": "Chivalric Order Officer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "royalty.chivalric_order_position_tenure",
                    "class": "royalty.chivalric_order_position_tenure",
                    "friendly_name": "Chivalric Order Officer Tenure",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.092pxy",
                    "class": "royalty.chivalric_office",
                    "friendly_name": "grandmaster",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "royalty.chivalric_order_position_tenure.officer",
                    "friendly_name": "Officer"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "royalty.chivalric_office.position_holders",
                    "friendly_name": "Position Holders"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :royalty.chivalric_order_officer . \n?x1 :type.object.type :royalty.chivalric_order_position_tenure . \nVALUES ?x2 { :m.092pxy } \n?x1 :royalty.chivalric_order_position_tenure.officer ?x0 . \n?x2 :royalty.chivalric_office.position_holders ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "royalty"
        ],
        "s_expression": "(AND royalty.chivalric_order_officer (JOIN (R royalty.chivalric_order_position_tenure.officer) (JOIN (R royalty.chivalric_office.position_holders) m.092pxy)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ds",
                "entity_name": "Charles III, Duke of Savoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0482zf",
                "entity_name": "Emmanuel Philibert, Duke of Savoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j56x",
                "entity_name": "Vittorio Emanuele, Prince of Naples"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j1xk",
                "entity_name": "Antipope Felix V"
            }
        ]
    },
    {
        "qid": 362000200,
        "question": "which tennis players also model?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.schemastaging.tennis_player_extra",
                    "class": "base.schemastaging.tennis_player_extra",
                    "friendly_name": "Tennis player extra",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0d1pc",
                    "class": "people.profession",
                    "friendly_name": "Model",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.person.profession",
                    "friendly_name": "Profession"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.schemastaging.tennis_player_extra . \nVALUES ?x1 { :m.0d1pc } \n?x0 :people.person.profession ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "people"
        ],
        "s_expression": "(AND base.schemastaging.tennis_player_extra (JOIN people.person.profession m.0d1pc))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03b7gw",
                "entity_name": "Maria Sharapova"
            }
        ]
    },
    {
        "qid": 281000201,
        "question": "the royal arms of the united kingdom has which heraldic supporters included?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.heraldic_supporter",
                    "class": "symbols.heraldic_supporter",
                    "friendly_name": "Heraldic Supporter",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01g6hm",
                    "class": "symbols.coat_of_arms",
                    "friendly_name": "royal arms of the united kingdom",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "symbols.heraldic_crest.coat_of_arms",
                    "friendly_name": "Coat of Arms"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.heraldic_supporter . \nVALUES ?x1 { :m.01g6hm } \n?x0 :symbols.heraldic_crest.coat_of_arms ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d2811",
                "entity_name": "Lion"
            }
        ]
    },
    {
        "qid": 277000401,
        "question": "which asterisms are located in the orion the hunter constellation?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.asterism",
                    "class": "astronomy.asterism",
                    "friendly_name": "Asterism",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0142jk",
                    "class": "astronomy.constellation",
                    "friendly_name": "orion the hunter",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.asterism.constellations",
                    "friendly_name": "Constellations"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.asterism . \nVALUES ?x1 { :m.0142jk } \n?x0 :astronomy.asterism.constellations ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03nlltw",
                "entity_name": "Orion's Belt"
            }
        ]
    },
    {
        "qid": 429000502,
        "question": "in what stage is the rocket engine designed by p&w?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine_status",
                    "class": "spaceflight.rocket_engine_status",
                    "friendly_name": "Rocket engine development status",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0dl93",
                    "class": "spaceflight.rocket_engine_designer",
                    "friendly_name": "p&w",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine",
                    "class": "spaceflight.rocket_engine",
                    "friendly_name": "Rocket engine",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 0,
                    "relation": "spaceflight.rocket_engine.status",
                    "friendly_name": "Status"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "spaceflight.rocket_engine.designed_by",
                    "friendly_name": "Designed by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.rocket_engine_status . \nVALUES ?x1 { :m.0dl93 } \n?x2 :type.object.type :spaceflight.rocket_engine . \n?x2 :spaceflight.rocket_engine.status ?x0 . \n?x2 :spaceflight.rocket_engine.designed_by ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "spaceflight"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03p41f7",
                "entity_name": "flown"
            }
        ]
    },
    {
        "qid": 463000402,
        "question": "which type of grappling does vladimir v. putin excel at?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "martial_arts.martial_art",
                    "class": "martial_arts.martial_art",
                    "friendly_name": "Martial Art",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08193",
                    "class": "martial_arts.martial_artist",
                    "friendly_name": "vladimir v. putin",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.039cp",
                    "class": "martial_arts.martial_art_category",
                    "friendly_name": "Grappling",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "martial_arts.martial_artist.martial_art",
                    "friendly_name": "Martial Art(s)"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "martial_arts.martial_art.category",
                    "friendly_name": "Category"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :martial_arts.martial_art . \nVALUES ?x1 { :m.08193 } \nVALUES ?x2 { :m.039cp } \n?x1 :martial_arts.martial_artist.martial_art ?x0 . \n?x0 :martial_arts.martial_art.category ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "martial_arts"
        ],
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN (R martial_arts.martial_artist.martial_art) m.08193) (JOIN martial_arts.martial_art.category m.039cp)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_8r",
                "entity_name": "Judo"
            }
        ]
    },
    {
        "qid": 407000400,
        "question": "what ticket do you need to go on the haunted mansion?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket",
                    "class": "amusement_parks.disney_ride_ticket",
                    "friendly_name": "Disney Ride Ticket",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket_membership",
                    "class": "amusement_parks.disney_ride_ticket_membership",
                    "friendly_name": "Disney Ride Ticket Membership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01p79p",
                    "class": "amusement_parks.disney_ride",
                    "friendly_name": "Haunted Mansion",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.disney_ride_ticket.rides",
                    "friendly_name": "Rides"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "amusement_parks.disney_ride_ticket_membership.ride",
                    "friendly_name": "Ride"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.disney_ride_ticket . \n?x1 :type.object.type :amusement_parks.disney_ride_ticket_membership . \nVALUES ?x2 { :m.01p79p } \n?x0 :amusement_parks.disney_ride_ticket.rides ?x1 . \n?x1 :amusement_parks.disney_ride_ticket_membership.ride ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "amusement_parks"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_2rl",
                "entity_name": "E ticket"
            }
        ]
    },
    {
        "qid": 407000101,
        "question": "which ticket is used for mansion?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket",
                    "class": "amusement_parks.disney_ride_ticket",
                    "friendly_name": "Disney Ride Ticket",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket_membership",
                    "class": "amusement_parks.disney_ride_ticket_membership",
                    "friendly_name": "Disney Ride Ticket Membership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01p79p",
                    "class": "amusement_parks.disney_ride",
                    "friendly_name": "mansion",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.disney_ride_ticket.rides",
                    "friendly_name": "Rides"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "amusement_parks.disney_ride_ticket_membership.ride",
                    "friendly_name": "Ride"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.disney_ride_ticket . \n?x1 :type.object.type :amusement_parks.disney_ride_ticket_membership . \nVALUES ?x2 { :m.01p79p } \n?x0 :amusement_parks.disney_ride_ticket.rides ?x1 . \n?x1 :amusement_parks.disney_ride_ticket_membership.ride ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "amusement_parks"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_2rl",
                "entity_name": "E ticket"
            }
        ]
    },
    {
        "qid": 463000002,
        "question": "what martial art of grappling is vladimir v. putin practicing?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "martial_arts.martial_art",
                    "class": "martial_arts.martial_art",
                    "friendly_name": "Martial Art",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08193",
                    "class": "martial_arts.martial_artist",
                    "friendly_name": "vladimir v. putin",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.039cp",
                    "class": "martial_arts.martial_art_category",
                    "friendly_name": "Grappling",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "martial_arts.martial_artist.martial_art",
                    "friendly_name": "Martial Art(s)"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "martial_arts.martial_art.category",
                    "friendly_name": "Category"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :martial_arts.martial_art . \nVALUES ?x1 { :m.08193 } \nVALUES ?x2 { :m.039cp } \n?x1 :martial_arts.martial_artist.martial_art ?x0 . \n?x0 :martial_arts.martial_art.category ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "martial_arts"
        ],
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN (R martial_arts.martial_artist.martial_art) m.08193) (JOIN martial_arts.martial_art.category m.039cp)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_8r",
                "entity_name": "Judo"
            }
        ]
    },
    {
        "qid": 468000700,
        "question": "who has served as the grand master of an order of chivalry?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "royalty.chivalric_order_officer",
                    "class": "royalty.chivalric_order_officer",
                    "friendly_name": "Chivalric Order Officer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "royalty.chivalric_order_position_tenure",
                    "class": "royalty.chivalric_order_position_tenure",
                    "friendly_name": "Chivalric Order Officer Tenure",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.092pxy",
                    "class": "royalty.chivalric_office",
                    "friendly_name": "Grand Master",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "royalty.chivalric_order_position_tenure.officer",
                    "friendly_name": "Officer"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "royalty.chivalric_office.position_holders",
                    "friendly_name": "Position Holders"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :royalty.chivalric_order_officer . \n?x1 :type.object.type :royalty.chivalric_order_position_tenure . \nVALUES ?x2 { :m.092pxy } \n?x1 :royalty.chivalric_order_position_tenure.officer ?x0 . \n?x2 :royalty.chivalric_office.position_holders ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "royalty"
        ],
        "s_expression": "(AND royalty.chivalric_order_officer (JOIN (R royalty.chivalric_order_position_tenure.officer) (JOIN (R royalty.chivalric_office.position_holders) m.092pxy)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ds",
                "entity_name": "Charles III, Duke of Savoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0482zf",
                "entity_name": "Emmanuel Philibert, Duke of Savoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j56x",
                "entity_name": "Vittorio Emanuele, Prince of Naples"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j1xk",
                "entity_name": "Antipope Felix V"
            }
        ]
    },
    {
        "qid": 419000200,
        "question": "what are the known meteor showers within the constellation of vega.",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.meteor_shower",
                    "class": "astronomy.meteor_shower",
                    "friendly_name": "Meteor Shower",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "astronomy.constellation",
                    "class": "astronomy.constellation",
                    "friendly_name": "Constellation",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.080jt",
                    "class": "astronomy.star",
                    "friendly_name": "Vega",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.meteor_shower.radiant",
                    "friendly_name": "Radiant"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "astronomy.star.constellation",
                    "friendly_name": "Constellation"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.meteor_shower . \n?x1 :type.object.type :astronomy.constellation . \nVALUES ?x2 { :m.080jt } \n?x0 :astronomy.meteor_shower.radiant ?x1 . \n?x2 :astronomy.star.constellation ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "(AND astronomy.meteor_shower (JOIN astronomy.meteor_shower.radiant (JOIN (R astronomy.star.constellation) m.080jt)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0267sh0",
                "entity_name": "Lyrids"
            }
        ]
    },
    {
        "qid": 281000202,
        "question": "the british coat of arms has which heraldic supporters included?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.heraldic_supporter",
                    "class": "symbols.heraldic_supporter",
                    "friendly_name": "Heraldic Supporter",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01g6hm",
                    "class": "symbols.coat_of_arms",
                    "friendly_name": "british coat of arms",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "symbols.heraldic_crest.coat_of_arms",
                    "friendly_name": "Coat of Arms"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.heraldic_supporter . \nVALUES ?x1 { :m.01g6hm } \n?x0 :symbols.heraldic_crest.coat_of_arms ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d2811",
                "entity_name": "Lion"
            }
        ]
    },
    {
        "qid": 410000202,
        "question": "which ski sights does bob redford own?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "skiing.ski_area",
                    "class": "skiing.ski_area",
                    "friendly_name": "Ski Area",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "skiing.ski_area_ownership",
                    "class": "skiing.ski_area_ownership",
                    "friendly_name": "Ski Area Ownership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0gs1_",
                    "class": "skiing.ski_area_owner",
                    "friendly_name": "bob redford",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "skiing.ski_area_ownership.ski_area",
                    "friendly_name": "Ski Area"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "skiing.ski_area_owner.ski_areas_owned",
                    "friendly_name": "Ski Areas Owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :skiing.ski_area . \n?x1 :type.object.type :skiing.ski_area_ownership . \nVALUES ?x2 { :m.0gs1_ } \n?x1 :skiing.ski_area_ownership.ski_area ?x0 . \n?x2 :skiing.ski_area_owner.ski_areas_owned ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "skiing"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fd3v",
                "entity_name": "Sundance Resort"
            }
        ]
    },
    {
        "qid": 430000100,
        "question": "what work were lost in a similar manner as le moulin de blute-fin?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "media_common.lost_work",
                    "class": "media_common.lost_work",
                    "friendly_name": "Lost work",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "media_common.cause_of_loss",
                    "class": "media_common.cause_of_loss",
                    "friendly_name": "Cause of loss",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0hgz3zy",
                    "class": "media_common.lost_work",
                    "friendly_name": "Le Moulin de Blute-Fin",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "media_common.lost_work.reason_for_loss",
                    "friendly_name": "Reason for loss"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "media_common.lost_work.reason_for_loss",
                    "friendly_name": "Reason for loss"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :media_common.lost_work . \n?x1 :type.object.type :media_common.cause_of_loss . \nVALUES ?x2 { :m.0hgz3zy } \n?x0 :media_common.lost_work.reason_for_loss ?x1 . \n?x2 :media_common.lost_work.reason_for_loss ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "media_common"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.044dnb2",
                "entity_name": "Vase with Five Sunflowers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059pt2q",
                "entity_name": "The Seven Sacraments: Penance"
            }
        ]
    },
    {
        "qid": 463000502,
        "question": "what kind of grappling is vladimir v. putin good at?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "martial_arts.martial_art",
                    "class": "martial_arts.martial_art",
                    "friendly_name": "Martial Art",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08193",
                    "class": "martial_arts.martial_artist",
                    "friendly_name": "vladimir v. putin",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.039cp",
                    "class": "martial_arts.martial_art_category",
                    "friendly_name": "Grappling",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "martial_arts.martial_artist.martial_art",
                    "friendly_name": "Martial Art(s)"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "martial_arts.martial_art.category",
                    "friendly_name": "Category"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :martial_arts.martial_art . \nVALUES ?x1 { :m.08193 } \nVALUES ?x2 { :m.039cp } \n?x1 :martial_arts.martial_artist.martial_art ?x0 . \n?x0 :martial_arts.martial_art.category ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "martial_arts"
        ],
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN (R martial_arts.martial_artist.martial_art) m.08193) (JOIN martial_arts.martial_art.category m.039cp)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_8r",
                "entity_name": "Judo"
            }
        ]
    },
    {
        "qid": 462000602,
        "question": "who did queen elizabeth grant a coat of arms to?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms_bearer",
                    "class": "symbols.coat_of_arms_bearer",
                    "friendly_name": "Coat of Arms Bearer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "symbols.armorial_grant",
                    "class": "symbols.armorial_grant",
                    "friendly_name": "Armorial Grant",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d1_f",
                    "class": "symbols.heraldry_granting_body",
                    "friendly_name": "queen elizabeth",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.armorial_grant.armiger",
                    "friendly_name": "Used by (Armiger)"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "symbols.armorial_grant.granted_by",
                    "friendly_name": "Granted By (if an authority granted the use to the bearer)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms_bearer . \n?x1 :type.object.type :symbols.armorial_grant . \nVALUES ?x2 { :m.0d1_f } \n?x1 :symbols.armorial_grant.armiger ?x0 . \n?x1 :symbols.armorial_grant.granted_by ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "(AND symbols.coat_of_arms_bearer (JOIN (R symbols.armorial_grant.armiger) (JOIN symbols.armorial_grant.granted_by m.0d1_f)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0847q",
                "entity_name": "Western Australia"
            }
        ]
    },
    {
        "qid": 420000201,
        "question": "who are the spokesmen for coke.",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.product_endorser",
                    "class": "business.product_endorser",
                    "friendly_name": "Product Endorser",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "business.product_endorsement",
                    "class": "business.product_endorsement",
                    "friendly_name": "Product Endorsement",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01yvs",
                    "class": "business.endorsed_product",
                    "friendly_name": "coke",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "business.product_endorser.products_endorsed",
                    "friendly_name": "Products Endorsed"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "business.endorsed_product.endorsements",
                    "friendly_name": "Endorsements"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.product_endorser . \n?x1 :type.object.type :business.product_endorsement . \nVALUES ?x2 { :m.01yvs } \n?x0 :business.product_endorser.products_endorsed ?x1 . \n?x2 :business.endorsed_product.endorsements ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "business"
        ],
        "s_expression": "(AND business.product_endorser (JOIN business.product_endorser.products_endorsed (JOIN (R business.endorsed_product.endorsements) m.01yvs)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04q0rh",
                "entity_name": "Gretchen Bleiler"
            }
        ]
    },
    {
        "qid": 411000601,
        "question": "the most deaths in the atlantic hurricane season 2008 were caused by which named hurricane?",
        "answer": [],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "meteorology.tropical_cyclone",
                    "class": "meteorology.tropical_cyclone",
                    "friendly_name": "Tropical Cyclone",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02vkb3f",
                    "class": "meteorology.tropical_cyclone_season",
                    "friendly_name": "atlantic hurricane season 2008",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "meteorology.tropical_cyclone_season.tropical_cyclones",
                    "friendly_name": "Tropical cyclones"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "meteorology.tropical_cyclone.total_fatalities",
                    "friendly_name": "Total fatalities"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :meteorology.tropical_cyclone . \nVALUES ?x1 { :m.02vkb3f } \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :meteorology.tropical_cyclone . \nVALUES ?y1 { :m.02vkb3f } \n?y1 :meteorology.tropical_cyclone_season.tropical_cyclones ?y0 . \n?y0 :meteorology.tropical_cyclone.total_fatalities ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :meteorology.tropical_cyclone_season.tropical_cyclones ?x0 . \n?x0 :meteorology.tropical_cyclone.total_fatalities ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "meteorology"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jhm3w",
                "entity_name": "Hurricane Hanna"
            }
        ]
    },
    {
        "qid": 300000001,
        "question": "how many cpus are designed around the risc strategy?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "0",
                "entity_name": "0"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.computerscience.computer_architecture",
                    "class": "base.computerscience.computer_architecture",
                    "friendly_name": "Computer Architecture",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06jk4",
                    "class": "base.computerscience.cpu_design",
                    "friendly_name": "risc",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.computerscience.computer_architecture.cpu_design",
                    "friendly_name": "CPU Design"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.computerscience.computer_architecture . \nVALUES ?x1 { :m.06jk4 } \n?x0 :base.computerscience.computer_architecture.cpu_design ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(COUNT (AND base.computerscience.computer_architecture (JOIN base.computerscience.computer_architecture.cpu_design m.06jk4)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "4"
            }
        ]
    },
    {
        "qid": 481000300,
        "question": "what diseases transmitted via sex have the same type of infectious agent as tuberculosis?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.infectious_disease",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "Infectious Disease",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06ng1",
                    "class": "medicine.transmission_route",
                    "friendly_name": "Sex",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "medicine.type_of_infectious_agent",
                    "class": "medicine.type_of_infectious_agent",
                    "friendly_name": "Type of infectious agent",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.07jwr",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "Tuberculosis",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.transmission_route.infections_that_travel_this_way",
                    "friendly_name": "Infections that travel this way"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "medicine.infectious_disease.infectious_agent_type",
                    "friendly_name": "Type of infectious agent"
                },
                {
                    "start": 2,
                    "end": 3,
                    "relation": "medicine.type_of_infectious_agent.diseases",
                    "friendly_name": "Diseases with this type of agent"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.infectious_disease . \nVALUES ?x1 { :m.06ng1 } \n?x2 :type.object.type :medicine.type_of_infectious_agent . \nVALUES ?x3 { :m.07jwr } \n?x1 :medicine.transmission_route.infections_that_travel_this_way ?x0 . \n?x0 :medicine.infectious_disease.infectious_agent_type ?x2 . \n?x2 :medicine.type_of_infectious_agent.diseases ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            }
        ]
    },
    {
        "qid": 370000402,
        "question": "which head coaches of american football are of the christian religion religion?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "american_football.football_coach",
                    "class": "american_football.football_coach",
                    "friendly_name": "American football head coach",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01lp8",
                    "class": "religion.religion",
                    "friendly_name": "christian religion",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.person.religion",
                    "friendly_name": "Religion"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :american_football.football_coach . \nVALUES ?x1 { :m.01lp8 } \n?x0 :people.person.religion ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "people"
        ],
        "s_expression": "(AND american_football.football_coach (JOIN people.person.religion m.01lp8))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03h4sk_",
                "entity_name": "Bill Stewart"
            }
        ]
    },
    {
        "qid": 420000002,
        "question": "who are coca cola's endorsers?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.product_endorser",
                    "class": "business.product_endorser",
                    "friendly_name": "Product Endorser",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "business.product_endorsement",
                    "class": "business.product_endorsement",
                    "friendly_name": "Product Endorsement",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01yvs",
                    "class": "business.endorsed_product",
                    "friendly_name": "coca cola",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "business.product_endorser.products_endorsed",
                    "friendly_name": "Products Endorsed"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "business.endorsed_product.endorsements",
                    "friendly_name": "Endorsements"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.product_endorser . \n?x1 :type.object.type :business.product_endorsement . \nVALUES ?x2 { :m.01yvs } \n?x0 :business.product_endorser.products_endorsed ?x1 . \n?x2 :business.endorsed_product.endorsements ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "business"
        ],
        "s_expression": "(AND business.product_endorser (JOIN business.product_endorser.products_endorsed (JOIN (R business.endorsed_product.endorsements) m.01yvs)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04q0rh",
                "entity_name": "Gretchen Bleiler"
            }
        ]
    },
    {
        "qid": 400000000,
        "question": "which surf films has sarah finn served as the casting director?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.surfing.surf_film",
                    "class": "base.surfing.surf_film",
                    "friendly_name": "Surf Film",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08mt595",
                    "class": "film.film_casting_director",
                    "friendly_name": "Sarah Finn",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.film_casting_director.films_casting_directed",
                    "friendly_name": "Films casting directed"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.surfing.surf_film . \nVALUES ?x1 { :m.08mt595 } \n?x1 :film.film_casting_director.films_casting_directed ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "film"
        ],
        "s_expression": "(AND base.surfing.surf_film (JOIN (R film.film_casting_director.films_casting_directed) m.08mt595))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01snqb",
                "entity_name": "Blue Crush"
            }
        ]
    },
    {
        "qid": 430000400,
        "question": "le moulin de blute-fin is lost for similar reasons to which other pieces?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "media_common.lost_work",
                    "class": "media_common.lost_work",
                    "friendly_name": "Lost work",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "media_common.cause_of_loss",
                    "class": "media_common.cause_of_loss",
                    "friendly_name": "Cause of loss",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0hgz3zy",
                    "class": "media_common.lost_work",
                    "friendly_name": "Le Moulin de Blute-Fin",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "media_common.lost_work.reason_for_loss",
                    "friendly_name": "Reason for loss"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "media_common.lost_work.reason_for_loss",
                    "friendly_name": "Reason for loss"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :media_common.lost_work . \n?x1 :type.object.type :media_common.cause_of_loss . \nVALUES ?x2 { :m.0hgz3zy } \n?x0 :media_common.lost_work.reason_for_loss ?x1 . \n?x2 :media_common.lost_work.reason_for_loss ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "media_common"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.044dnb2",
                "entity_name": "Vase with Five Sunflowers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059pt2q",
                "entity_name": "The Seven Sacraments: Penance"
            }
        ]
    },
    {
        "qid": 411000401,
        "question": "the maximum amount of fatalities was caused by which tropical cyclone in the atlantic hurricane season 2008?",
        "answer": [],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "meteorology.tropical_cyclone",
                    "class": "meteorology.tropical_cyclone",
                    "friendly_name": "Tropical Cyclone",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02vkb3f",
                    "class": "meteorology.tropical_cyclone_season",
                    "friendly_name": "atlantic hurricane season 2008",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "meteorology.tropical_cyclone_season.tropical_cyclones",
                    "friendly_name": "Tropical cyclones"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "meteorology.tropical_cyclone.total_fatalities",
                    "friendly_name": "Total fatalities"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :meteorology.tropical_cyclone . \nVALUES ?x1 { :m.02vkb3f } \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :meteorology.tropical_cyclone . \nVALUES ?y1 { :m.02vkb3f } \n?y1 :meteorology.tropical_cyclone_season.tropical_cyclones ?y0 . \n?y0 :meteorology.tropical_cyclone.total_fatalities ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :meteorology.tropical_cyclone_season.tropical_cyclones ?x0 . \n?x0 :meteorology.tropical_cyclone.total_fatalities ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "meteorology"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jhm3w",
                "entity_name": "Hurricane Hanna"
            }
        ]
    },
    {
        "qid": 479000000,
        "question": "find me tablet computers from apple inc.",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.consumer_product",
                    "class": "business.consumer_product",
                    "friendly_name": "Consumer product",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "business.company_product_relationship",
                    "class": "business.company_product_relationship",
                    "friendly_name": "Company-product relationship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0bh9flk",
                    "class": "business.product_category",
                    "friendly_name": "Tablet computer",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0k8z",
                    "class": "business.consumer_company",
                    "friendly_name": "Apple Inc.",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "business.company_product_relationship.consumer_product",
                    "friendly_name": "Consumer product"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "business.consumer_product.category",
                    "friendly_name": "Category"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "business.company_product_relationship.company",
                    "friendly_name": "Company"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.consumer_product . \n?x1 :type.object.type :business.company_product_relationship . \nVALUES ?x2 { :m.0bh9flk } \nVALUES ?x3 { :m.0k8z } \n?x1 :business.company_product_relationship.consumer_product ?x0 . \n?x0 :business.consumer_product.category ?x2 . \n?x1 :business.company_product_relationship.company ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "business"
        ],
        "s_expression": "(AND business.consumer_product (AND (JOIN (R business.company_product_relationship.consumer_product) (JOIN business.company_product_relationship.company m.0k8z)) (JOIN business.consumer_product.category m.0bh9flk)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j30q9x",
                "entity_name": "iPad 3"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ggbcny",
                "entity_name": "iPad 2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n3s_98",
                "entity_name": "iPad Mini"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nb7vg2",
                "entity_name": "iPad 4"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nb7m7f",
                "entity_name": "iPad 1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ynv62p",
                "entity_name": "iPad Air"
            }
        ]
    },
    {
        "qid": 481000301,
        "question": "what diseases transmitted via sex have the same type of infectious agent as tb?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.infectious_disease",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "Infectious Disease",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06ng1",
                    "class": "medicine.transmission_route",
                    "friendly_name": "Sex",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "medicine.type_of_infectious_agent",
                    "class": "medicine.type_of_infectious_agent",
                    "friendly_name": "Type of infectious agent",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.07jwr",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "tb",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.transmission_route.infections_that_travel_this_way",
                    "friendly_name": "Infections that travel this way"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "medicine.infectious_disease.infectious_agent_type",
                    "friendly_name": "Type of infectious agent"
                },
                {
                    "start": 2,
                    "end": 3,
                    "relation": "medicine.type_of_infectious_agent.diseases",
                    "friendly_name": "Diseases with this type of agent"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.infectious_disease . \nVALUES ?x1 { :m.06ng1 } \n?x2 :type.object.type :medicine.type_of_infectious_agent . \nVALUES ?x3 { :m.07jwr } \n?x1 :medicine.transmission_route.infections_that_travel_this_way ?x0 . \n?x0 :medicine.infectious_disease.infectious_agent_type ?x2 . \n?x2 :medicine.type_of_infectious_agent.diseases ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            }
        ]
    },
    {
        "qid": 397000400,
        "question": "which types of intelligent life forms speak the language known as galactic in asimov's foundation series?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "fictional_universe.character_species",
                    "class": "fictional_universe.character_species",
                    "friendly_name": "Character Species",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04krrq2",
                    "class": "fictional_universe.fictional_language",
                    "friendly_name": "Galactic",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "fictional_universe.fictional_language.spoken_by",
                    "friendly_name": "Spoken by character species"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :fictional_universe.character_species . \nVALUES ?x1 { :m.04krrq2 } \n?x1 :fictional_universe.fictional_language.spoken_by ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "fictional_universe"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dgw9r",
                "entity_name": "Homo sapiens"
            }
        ]
    },
    {
        "qid": 412000202,
        "question": "what specialities are associated with hiv infection in the uab hospital?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.medical_specialty",
                    "class": "medicine.medical_specialty",
                    "friendly_name": "Medical specialty",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0d19y2",
                    "class": "base.bioventurist.bv_medical_condition",
                    "friendly_name": "hiv infection",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0bt60t",
                    "class": "medicine.hospital",
                    "friendly_name": "UAB Hospital",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.disease.medical_specialties",
                    "friendly_name": "Associated medical specialties"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "medicine.hospital.medical_specialties",
                    "friendly_name": "Medical Specialties"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_specialty . \nVALUES ?x1 { :m.0d19y2 } \nVALUES ?x2 { :m.0bt60t } \n?x1 :medicine.disease.medical_specialties ?x0 . \n?x2 :medicine.hospital.medical_specialties ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(AND medicine.medical_specialty (AND (JOIN (R medicine.disease.medical_specialties) m.0d19y2) (JOIN (R medicine.hospital.medical_specialties) m.0bt60t)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dxdt",
                "entity_name": "Obstetrics and gynaecology"
            }
        ]
    },
    {
        "qid": 278000001,
        "question": "wapiti can be found as supporter in which coat of arms?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms",
                    "class": "symbols.coat_of_arms",
                    "friendly_name": "Coat of Arms",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.026545k",
                    "class": "symbols.heraldic_supporter",
                    "friendly_name": "wapiti",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.heraldic_supporter.coat_of_arms",
                    "friendly_name": "Coat of Arms"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms . \nVALUES ?x1 { :m.026545k } \n?x1 :symbols.heraldic_supporter.coat_of_arms ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01vy7d",
                "entity_name": "Coat of arms of British Columbia"
            }
        ]
    },
    {
        "qid": 251000200,
        "question": "what kind of bicycle is xtracycle?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "bicycles.bicycle_type",
                    "class": "bicycles.bicycle_type",
                    "friendly_name": "Bicycle type",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0gx1q5",
                    "class": "bicycles.bicycle_model",
                    "friendly_name": "Xtracycle",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "bicycles.bicycle_model.bicycle_type",
                    "friendly_name": "Bicycle type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :bicycles.bicycle_type . \nVALUES ?x1 { :m.0gx1q5 } \n?x1 :bicycles.bicycle_model.bicycle_type ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "bicycles"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09rtmfj",
                "entity_name": "Longtail"
            }
        ]
    },
    {
        "qid": 300000300,
        "question": "give me the count of computer architectures whose cpu design is reduced instruction set computing.",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "0",
                "entity_name": "0"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.computerscience.computer_architecture",
                    "class": "base.computerscience.computer_architecture",
                    "friendly_name": "Computer Architecture",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06jk4",
                    "class": "base.computerscience.cpu_design",
                    "friendly_name": "Reduced instruction set computing",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.computerscience.computer_architecture.cpu_design",
                    "friendly_name": "CPU Design"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.computerscience.computer_architecture . \nVALUES ?x1 { :m.06jk4 } \n?x0 :base.computerscience.computer_architecture.cpu_design ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(COUNT (AND base.computerscience.computer_architecture (JOIN base.computerscience.computer_architecture.cpu_design m.06jk4)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "4"
            }
        ]
    },
    {
        "qid": 403000302,
        "question": "the mount palomar observatory has what reflecting telescopes?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.telescope",
                    "class": "astronomy.telescope",
                    "friendly_name": "Telescope",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.022tzk",
                    "class": "astronomy.astronomical_observatory",
                    "friendly_name": "mount palomar observatory",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01nhc9",
                    "class": "astronomy.telescope_type",
                    "friendly_name": "Reflecting telescope",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "astronomy.astronomical_observatory.telescope_s",
                    "friendly_name": "Telescope(s)"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "astronomy.telescope_type.telescopes_of_this_type",
                    "friendly_name": "Telescopes of this type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.telescope . \nVALUES ?x1 { :m.022tzk } \nVALUES ?x2 { :m.01nhc9 } \n?x1 :astronomy.astronomical_observatory.telescope_s ?x0 . \n?x2 :astronomy.telescope_type.telescopes_of_this_type ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03kj67",
                "entity_name": "Hale telescope"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09tzp39",
                "entity_name": "60 inch telescope"
            }
        ]
    },
    {
        "qid": 407000301,
        "question": "what kind of ticket is needed to ride mansion?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket",
                    "class": "amusement_parks.disney_ride_ticket",
                    "friendly_name": "Disney Ride Ticket",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket_membership",
                    "class": "amusement_parks.disney_ride_ticket_membership",
                    "friendly_name": "Disney Ride Ticket Membership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01p79p",
                    "class": "amusement_parks.disney_ride",
                    "friendly_name": "mansion",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.disney_ride_ticket.rides",
                    "friendly_name": "Rides"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "amusement_parks.disney_ride_ticket_membership.ride",
                    "friendly_name": "Ride"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.disney_ride_ticket . \n?x1 :type.object.type :amusement_parks.disney_ride_ticket_membership . \nVALUES ?x2 { :m.01p79p } \n?x0 :amusement_parks.disney_ride_ticket.rides ?x1 . \n?x1 :amusement_parks.disney_ride_ticket_membership.ride ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "amusement_parks"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_2rl",
                "entity_name": "E ticket"
            }
        ]
    },
    {
        "qid": 412000000,
        "question": "what are all the specialties in the uab hospital that are associated with aids?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.medical_specialty",
                    "class": "medicine.medical_specialty",
                    "friendly_name": "Medical specialty",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0d19y2",
                    "class": "base.bioventurist.bv_medical_condition",
                    "friendly_name": "AIDS",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0bt60t",
                    "class": "medicine.hospital",
                    "friendly_name": "UAB Hospital",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.disease.medical_specialties",
                    "friendly_name": "Associated medical specialties"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "medicine.hospital.medical_specialties",
                    "friendly_name": "Medical Specialties"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_specialty . \nVALUES ?x1 { :m.0d19y2 } \nVALUES ?x2 { :m.0bt60t } \n?x1 :medicine.disease.medical_specialties ?x0 . \n?x2 :medicine.hospital.medical_specialties ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(AND medicine.medical_specialty (AND (JOIN (R medicine.disease.medical_specialties) m.0d19y2) (JOIN (R medicine.hospital.medical_specialties) m.0bt60t)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dxdt",
                "entity_name": "Obstetrics and gynaecology"
            }
        ]
    },
    {
        "qid": 300000000,
        "question": "how many cpus are designed around the reduced instruction set computing strategy?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "0",
                "entity_name": "0"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.computerscience.computer_architecture",
                    "class": "base.computerscience.computer_architecture",
                    "friendly_name": "Computer Architecture",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06jk4",
                    "class": "base.computerscience.cpu_design",
                    "friendly_name": "Reduced instruction set computing",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.computerscience.computer_architecture.cpu_design",
                    "friendly_name": "CPU Design"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.computerscience.computer_architecture . \nVALUES ?x1 { :m.06jk4 } \n?x0 :base.computerscience.computer_architecture.cpu_design ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(COUNT (AND base.computerscience.computer_architecture (JOIN base.computerscience.computer_architecture.cpu_design m.06jk4)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "4"
            }
        ]
    },
    {
        "qid": 410000301,
        "question": "redford is the owner of which ski areas?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "skiing.ski_area",
                    "class": "skiing.ski_area",
                    "friendly_name": "Ski Area",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "skiing.ski_area_ownership",
                    "class": "skiing.ski_area_ownership",
                    "friendly_name": "Ski Area Ownership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0gs1_",
                    "class": "skiing.ski_area_owner",
                    "friendly_name": "redford",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "skiing.ski_area_ownership.ski_area",
                    "friendly_name": "Ski Area"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "skiing.ski_area_owner.ski_areas_owned",
                    "friendly_name": "Ski Areas Owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :skiing.ski_area . \n?x1 :type.object.type :skiing.ski_area_ownership . \nVALUES ?x2 { :m.0gs1_ } \n?x1 :skiing.ski_area_ownership.ski_area ?x0 . \n?x2 :skiing.ski_area_owner.ski_areas_owned ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "skiing"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fd3v",
                "entity_name": "Sundance Resort"
            }
        ]
    },
    {
        "qid": 419000300,
        "question": "in the constellation of vega, what meteor showers have been observed?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "astronomy.meteor_shower",
                    "class": "astronomy.meteor_shower",
                    "friendly_name": "Meteor Shower",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "astronomy.constellation",
                    "class": "astronomy.constellation",
                    "friendly_name": "Constellation",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.080jt",
                    "class": "astronomy.star",
                    "friendly_name": "Vega",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "astronomy.meteor_shower.radiant",
                    "friendly_name": "Radiant"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "astronomy.star.constellation",
                    "friendly_name": "Constellation"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :astronomy.meteor_shower . \n?x1 :type.object.type :astronomy.constellation . \nVALUES ?x2 { :m.080jt } \n?x0 :astronomy.meteor_shower.radiant ?x1 . \n?x2 :astronomy.star.constellation ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "astronomy"
        ],
        "s_expression": "(AND astronomy.meteor_shower (JOIN astronomy.meteor_shower.radiant (JOIN (R astronomy.star.constellation) m.080jt)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0267sh0",
                "entity_name": "Lyrids"
            }
        ]
    },
    {
        "qid": 481000000,
        "question": "what sex transmitted diseases are carried by the same type of agent as tuberculosis?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.infectious_disease",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "Infectious Disease",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06ng1",
                    "class": "medicine.transmission_route",
                    "friendly_name": "Sex",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "medicine.type_of_infectious_agent",
                    "class": "medicine.type_of_infectious_agent",
                    "friendly_name": "Type of infectious agent",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.07jwr",
                    "class": "medicine.infectious_disease",
                    "friendly_name": "Tuberculosis",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.transmission_route.infections_that_travel_this_way",
                    "friendly_name": "Infections that travel this way"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "medicine.infectious_disease.infectious_agent_type",
                    "friendly_name": "Type of infectious agent"
                },
                {
                    "start": 2,
                    "end": 3,
                    "relation": "medicine.type_of_infectious_agent.diseases",
                    "friendly_name": "Diseases with this type of agent"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.infectious_disease . \nVALUES ?x1 { :m.06ng1 } \n?x2 :type.object.type :medicine.type_of_infectious_agent . \nVALUES ?x3 { :m.07jwr } \n?x1 :medicine.transmission_route.infections_that_travel_this_way ?x0 . \n?x0 :medicine.infectious_disease.infectious_agent_type ?x2 . \n?x2 :medicine.type_of_infectious_agent.diseases ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            }
        ]
    },
    {
        "qid": 380000000,
        "question": "which school district is the head start program part of?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "education.school_district",
                    "class": "education.school_district",
                    "friendly_name": "School district",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01njrf",
                    "class": "education.school",
                    "friendly_name": "Head Start Program",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "education.school_district.schools",
                    "friendly_name": "Schools"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :education.school_district . \nVALUES ?x1 { :m.01njrf } \n?x0 :education.school_district.schools ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "education"
        ],
        "s_expression": "(AND education.school_district (JOIN education.school_district.schools m.01njrf))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0480vd9",
                "entity_name": "Enfield School District"
            }
        ]
    },
    {
        "qid": 270000501,
        "question": "who is the proposer of the first amendment to the us constitution?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "law.constitutional_amendment_proposer",
                    "class": "law.constitutional_amendment_proposer",
                    "friendly_name": "Constitutional Amendment Proposer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07sgz",
                    "class": "law.constitutional_amendment",
                    "friendly_name": "first amendment to the us constitution",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "law.constitutional_amendment.proposed_by",
                    "friendly_name": "Proposed by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :law.constitutional_amendment_proposer . \nVALUES ?x1 { :m.07sgz } \n?x1 :law.constitutional_amendment.proposed_by ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "law"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0424m",
                "entity_name": "James Madison"
            }
        ]
    },
    {
        "qid": 447000101,
        "question": "which bourbon contains the least amount of alcohol?",
        "answer": [],
        "function": "argmin",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "distilled_spirits.distilled_spirit",
                    "class": "distilled_spirits.distilled_spirit",
                    "friendly_name": "Distilled spirit",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0c59y",
                    "class": "distilled_spirits.distilled_spirit_type",
                    "friendly_name": "bourbon",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "distilled_spirits.distilled_spirit.abv",
                    "friendly_name": "Alcohol content"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "distilled_spirits.distilled_spirit.spirit_type",
                    "friendly_name": "Spirit type"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :distilled_spirits.distilled_spirit . \n{\nSELECT (MIN(?y1) AS ?x1)  WHERE { \n?y0 :type.object.type :distilled_spirits.distilled_spirit . \nVALUES ?y2 { :m.0c59y } \n?y0 :distilled_spirits.distilled_spirit.abv ?y1 . \n?y0 :distilled_spirits.distilled_spirit.spirit_type ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\nVALUES ?x2 { :m.0c59y } \n?x0 :distilled_spirits.distilled_spirit.abv ?x1 . \n?x0 :distilled_spirits.distilled_spirit.spirit_type ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "distilled_spirits"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.095b59",
                "entity_name": "Cougar Bourbon"
            }
        ]
    },
    {
        "qid": 278000301,
        "question": "the wapiti is used as supporter in which coat of arms?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms",
                    "class": "symbols.coat_of_arms",
                    "friendly_name": "Coat of Arms",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.026545k",
                    "class": "symbols.heraldic_supporter",
                    "friendly_name": "wapiti",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.heraldic_supporter.coat_of_arms",
                    "friendly_name": "Coat of Arms"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms . \nVALUES ?x1 { :m.026545k } \n?x1 :symbols.heraldic_supporter.coat_of_arms ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01vy7d",
                "entity_name": "Coat of arms of British Columbia"
            }
        ]
    },
    {
        "qid": 463000601,
        "question": "putin is known for being good at which type of grappling?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "martial_arts.martial_art",
                    "class": "martial_arts.martial_art",
                    "friendly_name": "Martial Art",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08193",
                    "class": "martial_arts.martial_artist",
                    "friendly_name": "putin",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.039cp",
                    "class": "martial_arts.martial_art_category",
                    "friendly_name": "Grappling",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "martial_arts.martial_artist.martial_art",
                    "friendly_name": "Martial Art(s)"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "martial_arts.martial_art.category",
                    "friendly_name": "Category"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :martial_arts.martial_art . \nVALUES ?x1 { :m.08193 } \nVALUES ?x2 { :m.039cp } \n?x1 :martial_arts.martial_artist.martial_art ?x0 . \n?x0 :martial_arts.martial_art.category ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "martial_arts"
        ],
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN (R martial_arts.martial_artist.martial_art) m.08193) (JOIN martial_arts.martial_art.category m.039cp)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_8r",
                "entity_name": "Judo"
            }
        ]
    },
    {
        "qid": 410000001,
        "question": "redford owns which recreational skiing locations?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "skiing.ski_area",
                    "class": "skiing.ski_area",
                    "friendly_name": "Ski Area",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "skiing.ski_area_ownership",
                    "class": "skiing.ski_area_ownership",
                    "friendly_name": "Ski Area Ownership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0gs1_",
                    "class": "skiing.ski_area_owner",
                    "friendly_name": "redford",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "skiing.ski_area_ownership.ski_area",
                    "friendly_name": "Ski Area"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "skiing.ski_area_owner.ski_areas_owned",
                    "friendly_name": "Ski Areas Owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :skiing.ski_area . \n?x1 :type.object.type :skiing.ski_area_ownership . \nVALUES ?x2 { :m.0gs1_ } \n?x1 :skiing.ski_area_ownership.ski_area ?x0 . \n?x2 :skiing.ski_area_owner.ski_areas_owned ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "skiing"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fd3v",
                "entity_name": "Sundance Resort"
            }
        ]
    },
    {
        "qid": 270000601,
        "question": "who proposed the first amendment to the us constitution?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "law.constitutional_amendment_proposer",
                    "class": "law.constitutional_amendment_proposer",
                    "friendly_name": "Constitutional Amendment Proposer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07sgz",
                    "class": "law.constitutional_amendment",
                    "friendly_name": "first amendment to the us constitution",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "law.constitutional_amendment.proposed_by",
                    "friendly_name": "Proposed by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :law.constitutional_amendment_proposer . \nVALUES ?x1 { :m.07sgz } \n?x1 :law.constitutional_amendment.proposed_by ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "law"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0424m",
                "entity_name": "James Madison"
            }
        ]
    },
    {
        "qid": 411000001,
        "question": "which tropical cyclone in the atlantic hurricane season 2008 caused the most fatalities?",
        "answer": [],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "meteorology.tropical_cyclone",
                    "class": "meteorology.tropical_cyclone",
                    "friendly_name": "Tropical Cyclone",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02vkb3f",
                    "class": "meteorology.tropical_cyclone_season",
                    "friendly_name": "atlantic hurricane season 2008",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "meteorology.tropical_cyclone_season.tropical_cyclones",
                    "friendly_name": "Tropical cyclones"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "meteorology.tropical_cyclone.total_fatalities",
                    "friendly_name": "Total fatalities"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :meteorology.tropical_cyclone . \nVALUES ?x1 { :m.02vkb3f } \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :meteorology.tropical_cyclone . \nVALUES ?y1 { :m.02vkb3f } \n?y1 :meteorology.tropical_cyclone_season.tropical_cyclones ?y0 . \n?y0 :meteorology.tropical_cyclone.total_fatalities ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :meteorology.tropical_cyclone_season.tropical_cyclones ?x0 . \n?x0 :meteorology.tropical_cyclone.total_fatalities ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "meteorology"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jhm3w",
                "entity_name": "Hurricane Hanna"
            }
        ]
    },
    {
        "qid": 482000202,
        "question": "which amusement ride is the fastest of all the ones designed by the person who designed the haunted manison ride?",
        "answer": [],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.ride",
                    "class": "amusement_parks.ride",
                    "friendly_name": "Amusement Ride",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.ride_designer",
                    "class": "amusement_parks.ride_designer",
                    "friendly_name": "Amusement Ride Designer",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01p79p",
                    "class": "amusement_parks.ride",
                    "friendly_name": "haunted manison",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.ride.designer",
                    "friendly_name": "Designer"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "amusement_parks.ride_designer.rides",
                    "friendly_name": "Rides Designed"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "amusement_parks.ride.max_speed",
                    "friendly_name": "Max Speed"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.ride . \n?x1 :type.object.type :amusement_parks.ride_designer . \nVALUES ?x2 { :m.01p79p } \n{\nSELECT (MAX(?y3) AS ?x3)  WHERE { \n?y0 :type.object.type :amusement_parks.ride . \n?y1 :type.object.type :amusement_parks.ride_designer . \nVALUES ?y2 { :m.01p79p } \n?y0 :amusement_parks.ride.designer ?y1 . \n?y1 :amusement_parks.ride_designer.rides ?y2 . \n?y0 :amusement_parks.ride.max_speed ?y3 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y0 != ?y3 && ?y1 != ?y2 && ?y1 != ?y3 && ?y2 != ?y3  )\n}\n}\n?x0 :amusement_parks.ride.designer ?x1 . \n?x1 :amusement_parks.ride_designer.rides ?x2 . \n?x0 :amusement_parks.ride.max_speed ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "amusement_parks"
        ],
        "s_expression": "(ARGMAX (AND amusement_parks.ride (JOIN amusement_parks.ride.designer (JOIN amusement_parks.ride_designer.rides m.01p79p))) amusement_parks.ride.max_speed)",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.040fq5",
                "entity_name": "California Screamin'"
            }
        ]
    },
    {
        "qid": 463000102,
        "question": "vladimir v. putin practices what martial art of grappling?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "martial_arts.martial_art",
                    "class": "martial_arts.martial_art",
                    "friendly_name": "Martial Art",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.08193",
                    "class": "martial_arts.martial_artist",
                    "friendly_name": "vladimir v. putin",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.039cp",
                    "class": "martial_arts.martial_art_category",
                    "friendly_name": "Grappling",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "martial_arts.martial_artist.martial_art",
                    "friendly_name": "Martial Art(s)"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "martial_arts.martial_art.category",
                    "friendly_name": "Category"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :martial_arts.martial_art . \nVALUES ?x1 { :m.08193 } \nVALUES ?x2 { :m.039cp } \n?x1 :martial_arts.martial_artist.martial_art ?x0 . \n?x0 :martial_arts.martial_art.category ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "martial_arts"
        ],
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN (R martial_arts.martial_artist.martial_art) m.08193) (JOIN martial_arts.martial_art.category m.039cp)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_8r",
                "entity_name": "Judo"
            }
        ]
    },
    {
        "qid": 420000001,
        "question": "who are coke's endorsers?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.product_endorser",
                    "class": "business.product_endorser",
                    "friendly_name": "Product Endorser",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "business.product_endorsement",
                    "class": "business.product_endorsement",
                    "friendly_name": "Product Endorsement",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01yvs",
                    "class": "business.endorsed_product",
                    "friendly_name": "coke",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "business.product_endorser.products_endorsed",
                    "friendly_name": "Products Endorsed"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "business.endorsed_product.endorsements",
                    "friendly_name": "Endorsements"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.product_endorser . \n?x1 :type.object.type :business.product_endorsement . \nVALUES ?x2 { :m.01yvs } \n?x0 :business.product_endorser.products_endorsed ?x1 . \n?x2 :business.endorsed_product.endorsements ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "business"
        ],
        "s_expression": "(AND business.product_endorser (JOIN business.product_endorser.products_endorsed (JOIN (R business.endorsed_product.endorsements) m.01yvs)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04q0rh",
                "entity_name": "Gretchen Bleiler"
            }
        ]
    },
    {
        "qid": 427000200,
        "question": "what is the standard of the barcode used by cheerios?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.barcode.barcode_system",
                    "class": "base.barcode.barcode_system",
                    "friendly_name": "Barcode system",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.barcode.barcode",
                    "class": "base.barcode.barcode",
                    "friendly_name": "Barcode",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03m1ls",
                    "class": "base.barcode.barcoded_item",
                    "friendly_name": "Cheerios",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.barcode.barcode.barcode_system",
                    "friendly_name": "Barcode system"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.barcode.barcoded_item.barcode",
                    "friendly_name": "Barcode"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.barcode.barcode_system . \n?x1 :type.object.type :base.barcode.barcode . \nVALUES ?x2 { :m.03m1ls } \n?x1 :base.barcode.barcode.barcode_system ?x0 . \n?x2 :base.barcode.barcoded_item.barcode ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.barcode.barcode_system (JOIN (R base.barcode.barcode.barcode_system) (JOIN (R base.barcode.barcoded_item.barcode) m.03m1ls)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f1yc",
                "entity_name": "Universal Product Code"
            }
        ]
    },
    {
        "qid": 412000201,
        "question": "what specialities are associated with hiv in the uab hospital?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.medical_specialty",
                    "class": "medicine.medical_specialty",
                    "friendly_name": "Medical specialty",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0d19y2",
                    "class": "base.bioventurist.bv_medical_condition",
                    "friendly_name": "hiv",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0bt60t",
                    "class": "medicine.hospital",
                    "friendly_name": "UAB Hospital",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.disease.medical_specialties",
                    "friendly_name": "Associated medical specialties"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "medicine.hospital.medical_specialties",
                    "friendly_name": "Medical Specialties"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_specialty . \nVALUES ?x1 { :m.0d19y2 } \nVALUES ?x2 { :m.0bt60t } \n?x1 :medicine.disease.medical_specialties ?x0 . \n?x2 :medicine.hospital.medical_specialties ?x0 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "(AND medicine.medical_specialty (AND (JOIN (R medicine.disease.medical_specialties) m.0d19y2) (JOIN (R medicine.hospital.medical_specialties) m.0bt60t)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dxdt",
                "entity_name": "Obstetrics and gynaecology"
            }
        ]
    },
    {
        "qid": 453000100,
        "question": "at what stage of development is the rocket engine with the biggest thrust (sea level)?",
        "answer": [],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine_status",
                    "class": "spaceflight.rocket_engine_status",
                    "friendly_name": "Rocket engine development status",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine",
                    "class": "spaceflight.rocket_engine",
                    "friendly_name": "Rocket engine",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.float",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "spaceflight.rocket_engine.status",
                    "friendly_name": "Status"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "spaceflight.rocket_engine.thrust_sea_level",
                    "friendly_name": "Thrust (sea level)"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.rocket_engine_status . \n?x1 :type.object.type :spaceflight.rocket_engine . \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :spaceflight.rocket_engine_status . \n?y1 :type.object.type :spaceflight.rocket_engine . \n?y1 :spaceflight.rocket_engine.status ?y0 . \n?y1 :spaceflight.rocket_engine.thrust_sea_level ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :spaceflight.rocket_engine.status ?x0 . \n?x1 :spaceflight.rocket_engine.thrust_sea_level ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "spaceflight"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03p41dy",
                "entity_name": "study"
            }
        ]
    },
    {
        "qid": 370000201,
        "question": "find the football coaches who believe in christian faith.",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "american_football.football_coach",
                    "class": "american_football.football_coach",
                    "friendly_name": "American football head coach",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01lp8",
                    "class": "religion.religion",
                    "friendly_name": "christian faith",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.person.religion",
                    "friendly_name": "Religion"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :american_football.football_coach . \nVALUES ?x1 { :m.01lp8 } \n?x0 :people.person.religion ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "people"
        ],
        "s_expression": "(AND american_football.football_coach (JOIN people.person.religion m.01lp8))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03h4sk_",
                "entity_name": "Bill Stewart"
            }
        ]
    },
    {
        "qid": 269000202,
        "question": "the new westminster diocese consists of which churches?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.anglican.church",
                    "class": "base.anglican.church",
                    "friendly_name": "Church",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03qsr8",
                    "class": "base.anglican.diocese",
                    "friendly_name": "new westminster diocese",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.anglican.diocese.church",
                    "friendly_name": "Church"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.anglican.church . \nVALUES ?x1 { :m.03qsr8 } \n?x1 :base.anglican.diocese.church ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.anglican.church (JOIN (R base.anglican.diocese.church) m.03qsr8))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04drnj",
                "entity_name": "Anglican Church of Canada"
            }
        ]
    },
    {
        "qid": 410000102,
        "question": "bob redford owns what ski sites?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "skiing.ski_area",
                    "class": "skiing.ski_area",
                    "friendly_name": "Ski Area",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "skiing.ski_area_ownership",
                    "class": "skiing.ski_area_ownership",
                    "friendly_name": "Ski Area Ownership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0gs1_",
                    "class": "skiing.ski_area_owner",
                    "friendly_name": "bob redford",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "skiing.ski_area_ownership.ski_area",
                    "friendly_name": "Ski Area"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "skiing.ski_area_owner.ski_areas_owned",
                    "friendly_name": "Ski Areas Owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :skiing.ski_area . \n?x1 :type.object.type :skiing.ski_area_ownership . \nVALUES ?x2 { :m.0gs1_ } \n?x1 :skiing.ski_area_ownership.ski_area ?x0 . \n?x2 :skiing.ski_area_owner.ski_areas_owned ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "skiing"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fd3v",
                "entity_name": "Sundance Resort"
            }
        ]
    },
    {
        "qid": 427000000,
        "question": "cheerios uses what standard of barcode?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.barcode.barcode_system",
                    "class": "base.barcode.barcode_system",
                    "friendly_name": "Barcode system",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "base.barcode.barcode",
                    "class": "base.barcode.barcode",
                    "friendly_name": "Barcode",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03m1ls",
                    "class": "base.barcode.barcoded_item",
                    "friendly_name": "Cheerios",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.barcode.barcode.barcode_system",
                    "friendly_name": "Barcode system"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.barcode.barcoded_item.barcode",
                    "friendly_name": "Barcode"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.barcode.barcode_system . \n?x1 :type.object.type :base.barcode.barcode . \nVALUES ?x2 { :m.03m1ls } \n?x1 :base.barcode.barcode.barcode_system ?x0 . \n?x2 :base.barcode.barcoded_item.barcode ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.barcode.barcode_system (JOIN (R base.barcode.barcode.barcode_system) (JOIN (R base.barcode.barcoded_item.barcode) m.03m1ls)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f1yc",
                "entity_name": "Universal Product Code"
            }
        ]
    },
    {
        "qid": 468000100,
        "question": "who in the chivalric order held the title grand master?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "royalty.chivalric_order_officer",
                    "class": "royalty.chivalric_order_officer",
                    "friendly_name": "Chivalric Order Officer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "royalty.chivalric_order_position_tenure",
                    "class": "royalty.chivalric_order_position_tenure",
                    "friendly_name": "Chivalric Order Officer Tenure",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.092pxy",
                    "class": "royalty.chivalric_office",
                    "friendly_name": "Grand Master",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "royalty.chivalric_order_position_tenure.officer",
                    "friendly_name": "Officer"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "royalty.chivalric_office.position_holders",
                    "friendly_name": "Position Holders"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :royalty.chivalric_order_officer . \n?x1 :type.object.type :royalty.chivalric_order_position_tenure . \nVALUES ?x2 { :m.092pxy } \n?x1 :royalty.chivalric_order_position_tenure.officer ?x0 . \n?x2 :royalty.chivalric_office.position_holders ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "royalty"
        ],
        "s_expression": "(AND royalty.chivalric_order_officer (JOIN (R royalty.chivalric_order_position_tenure.officer) (JOIN (R royalty.chivalric_office.position_holders) m.092pxy)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j3ds",
                "entity_name": "Charles III, Duke of Savoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0482zf",
                "entity_name": "Emmanuel Philibert, Duke of Savoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j56x",
                "entity_name": "Vittorio Emanuele, Prince of Naples"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j1xk",
                "entity_name": "Antipope Felix V"
            }
        ]
    },
    {
        "qid": 269000002,
        "question": "the new westminster diocese contains which churches?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.anglican.church",
                    "class": "base.anglican.church",
                    "friendly_name": "Church",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03qsr8",
                    "class": "base.anglican.diocese",
                    "friendly_name": "new westminster diocese",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.anglican.diocese.church",
                    "friendly_name": "Church"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.anglican.church . \nVALUES ?x1 { :m.03qsr8 } \n?x1 :base.anglican.diocese.church ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.anglican.church (JOIN (R base.anglican.diocese.church) m.03qsr8))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04drnj",
                "entity_name": "Anglican Church of Canada"
            }
        ]
    },
    {
        "qid": 411000700,
        "question": "which tropical cyclone during the 2008 atlantic hurricane season resulted in the most fatalities?",
        "answer": [],
        "function": "argmax",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "meteorology.tropical_cyclone",
                    "class": "meteorology.tropical_cyclone",
                    "friendly_name": "Tropical Cyclone",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02vkb3f",
                    "class": "meteorology.tropical_cyclone_season",
                    "friendly_name": "2008 Atlantic hurricane season",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0",
                    "class": "type.int",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "meteorology.tropical_cyclone_season.tropical_cyclones",
                    "friendly_name": "Tropical cyclones"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "meteorology.tropical_cyclone.total_fatalities",
                    "friendly_name": "Total fatalities"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :meteorology.tropical_cyclone . \nVALUES ?x1 { :m.02vkb3f } \n{\nSELECT (MAX(?y2) AS ?x2)  WHERE { \n?y0 :type.object.type :meteorology.tropical_cyclone . \nVALUES ?y1 { :m.02vkb3f } \n?y1 :meteorology.tropical_cyclone_season.tropical_cyclones ?y0 . \n?y0 :meteorology.tropical_cyclone.total_fatalities ?y2 . \nFILTER ( ?y0 != ?y1 && ?y0 != ?y2 && ?y1 != ?y2  )\n}\n}\n?x1 :meteorology.tropical_cyclone_season.tropical_cyclones ?x0 . \n?x0 :meteorology.tropical_cyclone.total_fatalities ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "meteorology"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jhm3w",
                "entity_name": "Hurricane Hanna"
            }
        ]
    },
    {
        "qid": 278000002,
        "question": "cervus canadensis can be found as supporter in which coat of arms?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "symbols.coat_of_arms",
                    "class": "symbols.coat_of_arms",
                    "friendly_name": "Coat of Arms",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.026545k",
                    "class": "symbols.heraldic_supporter",
                    "friendly_name": "cervus canadensis",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.heraldic_supporter.coat_of_arms",
                    "friendly_name": "Coat of Arms"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :symbols.coat_of_arms . \nVALUES ?x1 { :m.026545k } \n?x1 :symbols.heraldic_supporter.coat_of_arms ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "symbols"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01vy7d",
                "entity_name": "Coat of arms of British Columbia"
            }
        ]
    },
    {
        "qid": 429000601,
        "question": "what is the status of the rocket engine designed by pw?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine_status",
                    "class": "spaceflight.rocket_engine_status",
                    "friendly_name": "Rocket engine development status",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0dl93",
                    "class": "spaceflight.rocket_engine_designer",
                    "friendly_name": "pw",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "spaceflight.rocket_engine",
                    "class": "spaceflight.rocket_engine",
                    "friendly_name": "Rocket engine",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 0,
                    "relation": "spaceflight.rocket_engine.status",
                    "friendly_name": "Status"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "spaceflight.rocket_engine.designed_by",
                    "friendly_name": "Designed by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :spaceflight.rocket_engine_status . \nVALUES ?x1 { :m.0dl93 } \n?x2 :type.object.type :spaceflight.rocket_engine . \n?x2 :spaceflight.rocket_engine.status ?x0 . \n?x2 :spaceflight.rocket_engine.designed_by ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "spaceflight"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03p41f7",
                "entity_name": "flown"
            }
        ]
    },
    {
        "qid": 410000400,
        "question": "what ski sites are owned by robert redford?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "skiing.ski_area",
                    "class": "skiing.ski_area",
                    "friendly_name": "Ski Area",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "skiing.ski_area_ownership",
                    "class": "skiing.ski_area_ownership",
                    "friendly_name": "Ski Area Ownership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0gs1_",
                    "class": "skiing.ski_area_owner",
                    "friendly_name": "Robert Redford",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "skiing.ski_area_ownership.ski_area",
                    "friendly_name": "Ski Area"
                },
                {
                    "start": 2,
                    "end": 1,
                    "relation": "skiing.ski_area_owner.ski_areas_owned",
                    "friendly_name": "Ski Areas Owned"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :skiing.ski_area . \n?x1 :type.object.type :skiing.ski_area_ownership . \nVALUES ?x2 { :m.0gs1_ } \n?x1 :skiing.ski_area_ownership.ski_area ?x0 . \n?x2 :skiing.ski_area_owner.ski_areas_owned ?x1 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "skiing"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fd3v",
                "entity_name": "Sundance Resort"
            }
        ]
    },
    {
        "qid": 479000401,
        "question": "search for apple tablet computers.",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 4,
        "num_edge": 3,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "business.consumer_product",
                    "class": "business.consumer_product",
                    "friendly_name": "Consumer product",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "business.company_product_relationship",
                    "class": "business.company_product_relationship",
                    "friendly_name": "Company-product relationship",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0bh9flk",
                    "class": "business.product_category",
                    "friendly_name": "Tablet computer",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0k8z",
                    "class": "business.consumer_company",
                    "friendly_name": "apple",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "business.company_product_relationship.consumer_product",
                    "friendly_name": "Consumer product"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "business.consumer_product.category",
                    "friendly_name": "Category"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "business.company_product_relationship.company",
                    "friendly_name": "Company"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :business.consumer_product . \n?x1 :type.object.type :business.company_product_relationship . \nVALUES ?x2 { :m.0bh9flk } \nVALUES ?x3 { :m.0k8z } \n?x1 :business.company_product_relationship.consumer_product ?x0 . \n?x0 :business.consumer_product.category ?x2 . \n?x1 :business.company_product_relationship.company ?x3 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x0 != ?x3 && ?x1 != ?x2 && ?x1 != ?x3 && ?x2 != ?x3  )\n}\n}",
        "domain": [
            "business"
        ],
        "s_expression": "(AND business.consumer_product (AND (JOIN (R business.company_product_relationship.consumer_product) (JOIN business.company_product_relationship.company m.0k8z)) (JOIN business.consumer_product.category m.0bh9flk)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j30q9x",
                "entity_name": "iPad 3"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ggbcny",
                "entity_name": "iPad 2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n3s_98",
                "entity_name": "iPad Mini"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nb7vg2",
                "entity_name": "iPad 4"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nb7m7f",
                "entity_name": "iPad 1"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ynv62p",
                "entity_name": "iPad Air"
            }
        ]
    },
    {
        "qid": 261000000,
        "question": "what is needed to prepare cuba libre?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.cocktails.cocktail_ingredient",
                    "class": "base.cocktails.cocktail_ingredient",
                    "friendly_name": "Cocktail Ingredient",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.024jj",
                    "class": "base.cocktails.cocktail",
                    "friendly_name": "Cuba Libre",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.cocktails.cocktail_ingredient.cocktails_with_this_ingredient",
                    "friendly_name": "Cocktails with this ingredient"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.cocktails.cocktail_ingredient . \nVALUES ?x1 { :m.024jj } \n?x0 :base.cocktails.cocktail_ingredient.cocktails_with_this_ingredient ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(AND base.cocktails.cocktail_ingredient (JOIN base.cocktails.cocktail_ingredient.cocktails_with_this_ingredient m.024jj))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yvs",
                "entity_name": "Coca-Cola"
            }
        ]
    },
    {
        "qid": 407000401,
        "question": "what ticket do you need to go on the mansion?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket",
                    "class": "amusement_parks.disney_ride_ticket",
                    "friendly_name": "Disney Ride Ticket",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "amusement_parks.disney_ride_ticket_membership",
                    "class": "amusement_parks.disney_ride_ticket_membership",
                    "friendly_name": "Disney Ride Ticket Membership",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01p79p",
                    "class": "amusement_parks.disney_ride",
                    "friendly_name": "mansion",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "amusement_parks.disney_ride_ticket.rides",
                    "friendly_name": "Rides"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "amusement_parks.disney_ride_ticket_membership.ride",
                    "friendly_name": "Ride"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :amusement_parks.disney_ride_ticket . \n?x1 :type.object.type :amusement_parks.disney_ride_ticket_membership . \nVALUES ?x2 { :m.01p79p } \n?x0 :amusement_parks.disney_ride_ticket.rides ?x1 . \n?x1 :amusement_parks.disney_ride_ticket_membership.ride ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "amusement_parks"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_2rl",
                "entity_name": "E ticket"
            }
        ]
    },
    {
        "qid": 370000001,
        "question": "which head football coaches practice christian faith as their primary religion?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "american_football.football_coach",
                    "class": "american_football.football_coach",
                    "friendly_name": "American football head coach",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01lp8",
                    "class": "religion.religion",
                    "friendly_name": "christian faith",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "people.person.religion",
                    "friendly_name": "Religion"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :american_football.football_coach . \nVALUES ?x1 { :m.01lp8 } \n?x0 :people.person.religion ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "people"
        ],
        "s_expression": "(AND american_football.football_coach (JOIN people.person.religion m.01lp8))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03h4sk_",
                "entity_name": "Bill Stewart"
            }
        ]
    },
    {
        "qid": 300000101,
        "question": "how many computer architectures are based on risc?",
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "0",
                "entity_name": "0"
            }
        ],
        "function": "count",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "base.computerscience.computer_architecture",
                    "class": "base.computerscience.computer_architecture",
                    "friendly_name": "Computer Architecture",
                    "question_node": 1,
                    "function": "count"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06jk4",
                    "class": "base.computerscience.cpu_design",
                    "friendly_name": "risc",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 0,
                    "end": 1,
                    "relation": "base.computerscience.computer_architecture.cpu_design",
                    "friendly_name": "CPU Design"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (COUNT(?x0) AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :base.computerscience.computer_architecture . \nVALUES ?x1 { :m.06jk4 } \n?x0 :base.computerscience.computer_architecture.cpu_design ?x1 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "base"
        ],
        "s_expression": "(COUNT (AND base.computerscience.computer_architecture (JOIN base.computerscience.computer_architecture.cpu_design m.06jk4)))",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Value",
                "answer_argument": "4"
            }
        ]
    },
    {
        "qid": 475000300,
        "question": "who have sponsored medical trials on rheumatoid arthritis?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 3,
        "num_edge": 2,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "medicine.medical_trial_sponsor",
                    "class": "medicine.medical_trial_sponsor",
                    "friendly_name": "Medical trial sponsor",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "medicine.medical_trial",
                    "class": "medicine.medical_trial",
                    "friendly_name": "Medical trial",
                    "question_node": 0,
                    "function": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.06g7c",
                    "class": "base.bioventurist.bv_medical_condition",
                    "friendly_name": "Rheumatoid arthritis",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "medicine.medical_trial.sponsor",
                    "friendly_name": "Sponsor"
                },
                {
                    "start": 1,
                    "end": 2,
                    "relation": "medicine.medical_trial.diseases",
                    "friendly_name": "Diseases"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :medicine.medical_trial_sponsor . \n?x1 :type.object.type :medicine.medical_trial . \nVALUES ?x2 { :m.06g7c } \n?x1 :medicine.medical_trial.sponsor ?x0 . \n?x1 :medicine.medical_trial.diseases ?x2 . \nFILTER ( ?x0 != ?x1 && ?x0 != ?x2 && ?x1 != ?x2  )\n}\n}",
        "domain": [
            "medicine"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02n1sd",
                "entity_name": "National Institute of Arthritis and Musculoskeletal and Skin Diseases"
            }
        ]
    },
    {
        "qid": 270000600,
        "question": "who proposed the first amendment?",
        "answer": [],
        "function": "none",
        "commonness": 0.0,
        "num_node": 2,
        "num_edge": 1,
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "law.constitutional_amendment_proposer",
                    "class": "law.constitutional_amendment_proposer",
                    "friendly_name": "Constitutional Amendment Proposer",
                    "question_node": 1,
                    "function": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07sgz",
                    "class": "law.constitutional_amendment",
                    "friendly_name": "First Amendment",
                    "question_node": 0,
                    "function": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "law.constitutional_amendment.proposed_by",
                    "friendly_name": "Proposed by"
                }
            ]
        },
        "sparql_query": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX : <http://rdf.freebase.com/ns/> \nSELECT (?x0 AS ?value) WHERE {\nSELECT DISTINCT ?x0  WHERE { \n?x0 :type.object.type :law.constitutional_amendment_proposer . \nVALUES ?x1 { :m.07sgz } \n?x1 :law.constitutional_amendment.proposed_by ?x0 . \nFILTER ( ?x0 != ?x1  )\n}\n}",
        "domain": [
            "law"
        ],
        "s_expression": "NK",
        "qType": "U",
        "Organswer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0424m",
                "entity_name": "James Madison"
            }
        ]
    }
]